
;;
;; High-level interface to various discrete transforms.
;;

(libload "fftw/fftw")


;; a tentative general function for the fast discrete hartley transform
(de dht (in)
  (chk-idx in)
  (let ((in  (as-contiguous-array (as-double-array in)))
        (out (clone-array in)) 
	(s   (/ 1.0 (sqrt (prod (shape in))))) )
    (selectq (idx-rank in)
      (2 (fftw-dht-2d in out)
	 (pp-dht-2d-ip out s)
	 out)
      (t (error "dht not implemented for array of this rank")) ) ) )



;; halde
;;
;; (mod-load (concat-fname lushdir "lsh/libdxt/herm2real.o"))
;; (de herm2real (c r)
;;   ((-idx3- (-double-)) c)
;;   ((-idx2- (-double-)) r)
;;   (let ((d0 (idx-dim r 0))
;;         (d1 (idx-dim r 1)) )
;;     ((-int-) d0 d1)
;;     ;;(chk-idx-contiguous c)
;;     (cpheader "extern void herm2real(double*, double*, int, int);")
;;     #{ herm2real(IDX_BASE_TYPED($c,double), IDX_BASE_TYPED($r,double), $d0, $d1); #}
;;     r) )

;; (dhc-make () herm2real)

;; (de dht2 (in)
;;   (chk-idx in)
;;   (let ((in   (as-contiguous-array (as-double-array in)))
;;         (last (int (1+ (/ (shape in -1) 2))))
;;         (cshp (shape in)) 
;;         (cout ())
;;         (rout (clone-array in)) )
;;     (rplaca (last cshp) last) ;; last dimension halved
;;     (rplacd (last cshp) '(2)) ;; complex out
;;     (setq cout (make-array 'double cshp ()))
;;     (fftw-dft-r2c-2d in cout ())
;;     (herm2real cout rout)
;;     rout ) )
  
