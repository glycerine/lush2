;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "opencv/cv-config")



#? *** geometry

;; dummy function that adds OpenCV C header files in C file
(eval `(de dummy_geometry () ,cv-cpheader-cmd ()))

;; #? * (dummy_geometry)

;; ********************************************************

;;  /****************************************************************************************\
;;  *                              Geometry functions                                        *
;;  \****************************************************************************************/

#? * (cvproject3d <points3d> <count> <points2d> <xindx> <yindx>)
;;.PRE
;;  OPENCVAPI  void  cvProject3D( CvPoint3D32f* points3D, int count,
;;                                CvPoint2D32f* points2D, int xIndx, int yIndx );
(de cvProject3D (points3d count points2d xindx yindx)
    ((-gptr- "CvPoint3D32f *") points3d)
    ((-int-) count xindx yindx)
    ((-gptr- "CvPoint2D32f *") points2d)
    #{  cvProject3D($points3d, $count, $points2d, $xindx, $yindx); #}
    ())

#? * (cvfitline3d <points> <count> <dist> <param> <reps> <aeps> <line>)
;;.PRE
;;  OPENCVAPI  void  cvFitLine3D( CvPoint3D32f* points, int count, CvDisType dist,
;;                                void *param, float reps, float aeps, float* line );
(de cvFitLine3D (points count dist param reps aeps line)
    ((-gptr- "CvPoint3D32f *") points)
    ((-int-) count)
    ((-int-) dist)
    ((-gptr-) param)
    ((-float-) reps aeps)
    ((-gptr- "float *") line)
    #{  cvFitLine3D($points, $count, $dist, $param, $reps, $aeps, $line); #}
    ())


#? * (cvfitline2d <points> <count> <dist> <param> <reps> <aeps> <line>)
;;.PRE
;;  OPENCVAPI  void  cvFitLine2D( CvPoint2D32f* points, int count, CvDisType dist,
;;                                void *param, float reps, float aeps, float* line );
(de cvFitLine2D (points count dist param reps aeps line)
    ((-gptr- "CvPoint2D32f *") points)
    ((-int-) count)
    ((-int-) dist)
    ((-gptr-) param)
    ((-float-) reps aeps)
    ((-gptr- "float *") line)
    #{  cvFitLine2D($points, $count, $dist, $param, $reps, $aeps, $line); #}
    ())


;; ********************************************************

(dhc-make-sf ()
  dummy_geometry
  cvproject3d
  cvfitline3d
  cvfitline2d
)
