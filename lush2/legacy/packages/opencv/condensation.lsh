;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "opencv/cv-config")



#? *** condensation

;; dummy function that adds OpenCV C header files in C file
(eval `(de dummy_condensation () ,cv-cpheader-cmd ()))


;; ********************************************************

;;  /****************************************************************************************\
;;  *                    CONditional DENsity PropogaTION tracking                            *
;;  \****************************************************************************************/

#? * (cvcreatecondensation <dp> <mp> <samplesnum>)
;;.PRE
;;  OPENCVAPI CvConDensation*  cvCreateConDensation( int DP, int MP, int SamplesNum);
(de cvCreateConDensation ( dp  mp  samplesnum)
    ((-int-) dp  mp  samplesnum)
    (gptr #{ cvCreateConDensation($dp, $mp, $samplesnum) #} ))



#? * (cvreleasecondensation <con>)
;;.PRE
;;  OPENCVAPI void  cvReleaseConDensation( CvConDensation** ConDensation);
(de cvReleaseConDensation (con)
    ((-gptr- "CvConDensation **") con)
    #{ cvReleaseConDensation($con); #}
    ())


#? * (cvcondensupdatebytime <con>)
;;.PRE
;;  OPENCVAPI void  cvConDensUpdateByTime( CvConDensation* ConDens);
(de cvConDensUpdateByTime( con)
    ((-gptr- "CvConDensation *") con)
    #{ cvConDensUpdateByTime($con); #}
    ())


#? * (cvcondensinitsampleset <con> <lowerbound> <upperbound>)
;;.PRE
;;  OPENCVAPI void  cvConDensInitSampleSet( CvConDensation* conDens, CvMat* lowerBound,CvMat* upperBound);
(de cvConDensInitSampleSet ( con lowerbound upperbound)
    ((-gptr- "CvConDensation *") con)
    ((-gptr- "CvMat *")  lowerbound  upperbound)
    #{  cvConDensInitSampleSet($con, $lowerbound, $upperbound); #}
    ())

;; ********************************************************

(dhc-make-sf ()
  dummy_condensation
  cvcreatecondensation
  cvreleasecondensation
  cvcondensupdatebytime
  cvcondensinitsampleset
)
