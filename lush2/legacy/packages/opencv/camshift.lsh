;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "opencv/cv-config")



#? *** camshift

;; dummy function that adds OpenCV C header files in C file
(eval `(de dummy_camshift () ,cv-cpheader-cmd ()))


;; ********************************************************

;;  /****************************************************************************************\
;;  *                                     CAMSHIFT                                           *
;;  \****************************************************************************************/
;;  /*F///////////////////////////////////////////////////////////////////////////////////////

#? * (cvcamshift <imgprob> <windowin> <criteria> <out> <box>)
;;.PRE
;;  //    Name:    cvCamShift
;;  //    Purpose:
;;  //      Implements CAMSHIFT algorithm - determines object position, size and orientation
;;  //      from the object histogram back project.
;;  //    Context:
;;  //    Parameters:
;;  //      imgProb - back project of the object histogram
;;  //      windowIn - initial search window
;;  //      criteria - iterative search termination criteria 
;;  //      out    - output parameter. Final position of search window and object area
;;  //      box    - width and height (i.e. length) of the object, its center and orientation
;;  //    Returns:
;;  //      Number of iterations made
;;  //F*/
;;  OPENCVAPI int  cvCamShift( const CvArr* imgProb, CvRect  windowIn,
;;                             CvTermCriteria criteria, CvConnectedComp* out,
;;                             CvBox2D* box );

(de cvCamShift ( imgprob   windowin  criteria  out  box)
    ((-gptr- "const CvArr *") imgprob)
    ((-gptr- "CvRect *") windowIn)
    ((-gptr- "CvTermCriteria *") criteria)
    ((-gptr- "CvConnectedComp *") out)
    ((-gptr- "CvBox2D *") box)
    (int #{  cvCamShift($imgprob, *$windowIn, *$criteria, $out, $box) #} ))

;;  /*F///////////////////////////////////////////////////////////////////////////////////////
#? * (cvmeanshift <imgprob> <windowin> <criteria> <out>)
;;.PRE
;;  //    Name:    cvMeanShift
;;  //    Purpose:
;;  //      Implements MeanShift algorithm - determines object position
;;  //      from the object histogram back project.
;;  //    Context:
;;  //    Parameters:
;;  //      imgProb - back project of the object histogram
;;  //      windowIn - initial search window
;;  //      criteria - iterative search termination criteria 
;;  //      out - output parameter. Final position of search window and object area
;;  //    Returns:
;;  //      Number of iterations made
;;  //    Notes:
;;  //F*/
;;  OPENCVAPI int  cvMeanShift( const CvArr* imgProb, CvRect  windowIn,
;;                              CvTermCriteria criteria, CvConnectedComp* out );

(de cvMeanShift (imgprob  windowIn  criteria  out)
    ((-gptr- "const CvArr *") imgprob)
    ((-gptr- "CvRect *") windowIn)
    ((-gptr- "CvTermCriteria *") criteria)
    ((-gptr- "CvConnectedComp *") out)
    (int #{ cvMeanShift($imgprob, *$windowIn, *$criteria, $out) #} ))

;; ********************************************************

(dhc-make-sf ()
  dummy_camshift
  cvcamshift
  cvmeanshift
)
