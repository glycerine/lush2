;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "opencv/cv-config")



#? *** background

;; dummy function that adds OpenCV C header files in C file
(eval `(de dummy_background () ,cv-cpheader-cmd ()))


;;  /****************************************************************************************\
;;  *                               Background Differencing                                  *
;;  \****************************************************************************************/

#? * (cvacc <image> <sum> <mask>)
;;.PRE
;;  OPENCVAPI  void  cvAcc( const CvArr* image, CvArr* sum,
;;                          const CvArr* mask CV_DEFAULT(0) );

(de cvAcc (image sum mask)
      ((-gptr- "const CvArr *") image mask)
      ((-gptr- "CvArr *") sum)
      #{  cvAcc($image, $sum, $mask);  #}
      ())

#? * (cvsquareacc <image> <sqsum> <mask>)
;;.PRE
;;  OPENCVAPI  void  cvSquareAcc( const CvArr* image, CvArr* sqSum,
;;                                const CvArr* mask CV_DEFAULT(0) );
(de cvSquareAcc(image sqsum mask)
  ((-gptr- "const CvArr *") image mask)
  ((-gptr- "CvArr *") sqsum)
  #{  cvSquareAcc($image, $sqsum, $mask);  #}
  ())

#? * (cvmultiplyacc <imga> <imgb> <acc> <mask>)
;;.PRE
;;  OPENCVAPI  void  cvMultiplyAcc( const CvArr* imgA, const CvArr* imgB, CvArr* acc,
;;                                  const CvArr* mask CV_DEFAULT(0) );
(de cvMultiplyAcc(imga imgb acc mask)
  ((-gptr- "const CvArr *") imga imgb mask)
  ((-gptr- "CvArr *") acc)
  #{ cvMultiplyAcc($imga, $imgb, $acc, $mask);  #}
  ())

#? * (cvrunningavg <imgy> <imgu> <alpha> <mask>)
;;.PRE
;;  OPENCVAPI  void  cvRunningAvg( const CvArr* imgY, CvArr* imgU, double alpha,
;;                                 const CvArr* mask CV_DEFAULT(0) );
(de cvRunningAvg (imgy imgu alpha mask)
      ((-gptr- "const CvArr *") imgy mask)
      ((-gptr- "CvArr *") imgu)
      ((-double-) alpha)
      #{ cvRunningAvg($imgy, $imgu, $alpha, $mask);  #}
      ())

;; ********************************************************

(dhc-make-sf ()
  dummy_background
  cvacc
  cvsquareacc
  cvmultiplyacc
  cvrunningavg
)
