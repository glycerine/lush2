;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


#? *** FFmpeg: Audio/Video Converter

{<p>
  The FFmpeg package uses the ffmpeg library to decode or encode audio or
  video files. This interface works with all the files types (avi, mov, mpg,
  asf, wmv, etc.) and all the codecs (mpeg, mpeg2, mpeg4, mp3, divx, h263,
  h264, etc.) supported by the ffmpeg library.
}
{<p>
  Notes:
}
{<ul>
  {<li>
    the encoding interface is not yet implemented
  }
  {<li>
    the audio interface is not yet implemented
  }
}

{<p>
  For detailed information on FFmpeg see the project pages at
  {<hlink> http://ffmpeg.sourceforge.net}.
}


#? ** Video Decoding

{<p>
  To decode a video file, you must first create a <VideoSource> object using
  function <av-open-video-source>.
  {<br>}
  {<code>
 ;; Create an avsource object
 (setq avsource (av-open-video-source "myfile.avi"))
  </code>}
  {<br>}
  You can then access all the frames using methods <nextframe> and
  <get-frame-rgba>.
  {<br>}
  {<code>
 ;; Display all the frames
 (while (==> avsource nextframe)
   (rgb-draw-matrix 0 0 (==> avsource get-frame-rgba)) )
 </code>}
}

#? ** << ffmpeg/avsource.lsh
#? ** << ffmpeg/ffmpeg.lsh
