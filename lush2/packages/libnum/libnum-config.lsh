;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2009 Leon Bottou, Yann LeCun, Ralf Juengling.
;;;   Copyright (C) 2002 Leon Bottou, Yann LeCun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU Lesser General Public License as 
;;; published by the Free Software Foundation; either version 2.1 of the
;;; License, or (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU Lesser General Public License for more details.
;;;
;;; You should have received a copy of the GNU Lesser General Public
;;; License along with this program; if not, write to the Free Software
;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
;;; MA 02110-1301  USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl/gsl-config")
(libload "gsl/error-handling")

(when (not libnum-config-loaded)

  (defparameter libnum-cmacros 
    '(progn
       (cpheader "#define IDX2GSL_VECTOR(_idxv_,_gslv_,_type_) _gslv_.data = IDX_PTR(_idxv_,_type_); _gslv_.size = _idxv_->dim[0]; _gslv_.stride = _idxv_->mod[0]; _gslv_.block = NULL; _gslv_.owner=0")
       (cpheader "#define IDX2GSL_VECTOR_COMPLEX(_idxv_,_gslv_,_type_) _gslv_.data = IDX_PTR(_idxv_,_type_); _gslv_.size = _idxv_->dim[0]; _gslv_.stride = _idxv_->mod[0]/2; _gslv_.block = NULL; _gslv_.owner=0")
       (cpheader "#define IDX2GSL_MATRIX(_idxv_,_gslv_,_type_) _gslv_.data = IDX_PTR(_idxv_,_type_); _gslv_.size1 = _idxv_->dim[0]; _gslv_.size2 = _idxv_->dim[1]; _gslv_.tda = _idxv_->mod[0]; _gslv_.block = NULL; _gslv_.owner=0")
       (cpheader "#define IDX2GSL_MATRIX_COMPLEX(_idxv_,_gslv_,_type_) _gslv_.data = IDX_PTR(_idxv_,_type_); _gslv_.size1 = _idxv_->dim[0]; _gslv_.size2 = _idxv_->dim[1]; _gslv_.tda = _idxv_->mod[0]/2; _gslv_.block = NULL; _gslv_.owner=0")
       (cpheader "#define IDX2GSL_PERMUTATION(_idxv_,_gslv_) _gslv_.data = (size_t *)IDX_PTR(_idxv_,int); _gslv_.size = _idxv_->dim[0]")
      ()))

  (defparameter libnum-config-loaded 1)
  )
