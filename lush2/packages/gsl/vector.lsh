;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2009 Leon Bottou, Yann LeCun, Ralf Juengling.
;;;   Copyright (C) 2002 Leon Bottou, Yann LeCun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU Lesser General Public License as 
;;; published by the Free Software Foundation; either version 2.1 of the
;;; License, or (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU Lesser General Public License for more details.
;;;
;;; You should have received a copy of the GNU Lesser General Public
;;; License along with this program; if not, write to the Free Software
;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
;;; MA 02110-1301  USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl/gsl-config")



#? *** vector

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_vector () ,gsl-cpheader-cmd ()))

#? * (dummy_vector)
#? * (gsl_vector_char_alloc <n>)
#? * (gsl_vector_char_calloc <n>)
#? * (gsl_vector_char_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_char_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_char_free <v>)
#? * (gsl_vector_char_view_array <v> <n> <view>)
#? * (gsl_vector_char_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_char_const_view_array <v> <n> <view>)
#? * (gsl_vector_char_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_char_subvector <v> <i> <n> <view>)
#? * (gsl_vector_char_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_char_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_char_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_char_get <v> <i>)
#? * (gsl_vector_char_set <v> <i> <x>)
#? * (gsl_vector_char_ptr <v> <i>)
#? * (gsl_vector_char_const_ptr <v> <i>)
#? * (gsl_vector_char_set_zero <v>)
#? * (gsl_vector_char_set_all <v> <x>)
#? * (gsl_vector_char_set_basis <v> <i>)
#? * (gsl_vector_char_fread <stream> <v>)
#? * (gsl_vector_char_fwrite <stream> <v>)
#? * (gsl_vector_char_fscanf <stream> <v>)
#? * (gsl_vector_char_fprintf <stream> <v> <format>)
#? * (gsl_vector_char_memcpy <dest> <src>)
#? * (gsl_vector_char_reverse <v>)
#? * (gsl_vector_char_swap <v> <w>)
#? * (gsl_vector_char_swap_elements <v> <i> <j>)
#? * (gsl_vector_char_max <v>)
#? * (gsl_vector_char_min <v>)
#? * (gsl_vector_char_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_char_max_index <v>)
#? * (gsl_vector_char_min_index <v>)
#? * (gsl_vector_char_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_char_add <a> <b>)
#? * (gsl_vector_char_sub <a> <b>)
#? * (gsl_vector_char_mul <a> <b>)
#? * (gsl_vector_char_div <a> <b>)
#? * (gsl_vector_char_scale <a> <x>)
#? * (gsl_vector_char_add_constant <a> <x>)
#? * (gsl_vector_char_isnull <v>)
#? * (gsl_vector_complex_alloc <n>)
#? * (gsl_vector_complex_calloc <n>)
#? * (gsl_vector_complex_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_complex_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_complex_free <v>)
#? * (gsl_vector_complex_view_array <base> <n> <view>)
#? * (gsl_vector_complex_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_complex_const_view_array <base> <n> <view>)
#? * (gsl_vector_complex_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_complex_subvector <base> <i> <n> <view>)
#? * (gsl_vector_complex_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_complex_const_subvector <base> <i> <n> <view>)
#? * (gsl_vector_complex_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_complex_real <v> <view>)
#? * (gsl_vector_complex_imag <v> <view>)
#? * (gsl_vector_complex_const_real <v> <view>)
#? * (gsl_vector_complex_const_imag <v> <view>)
#? * (gsl_vector_complex_get <v> <i> <result>)
#? * (gsl_vector_complex_set <v> <i> <z>)
#? * (gsl_vector_complex_ptr <v> <i>)
#? * (gsl_vector_complex_const_ptr <v> <i>)
#? * (gsl_vector_complex_set_zero <v>)
#? * (gsl_vector_complex_set_all <v> <z>)
#? * (gsl_vector_complex_set_basis <v> <i>)
#? * (gsl_vector_complex_fread <stream> <v>)
#? * (gsl_vector_complex_fwrite <stream> <v>)
#? * (gsl_vector_complex_fscanf <stream> <v>)
#? * (gsl_vector_complex_fprintf <stream> <v> <format>)
#? * (gsl_vector_complex_memcpy <dest> <src>)
#? * (gsl_vector_complex_reverse <v>)
#? * (gsl_vector_complex_swap <v> <w>)
#? * (gsl_vector_complex_swap_elements <v> <i> <j>)
#? * (gsl_vector_complex_isnull <v>)
#? * (gsl_vector_complex_float_alloc <n>)
#? * (gsl_vector_complex_float_calloc <n>)
#? * (gsl_vector_complex_float_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_complex_float_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_complex_float_free <v>)
#? * (gsl_vector_complex_float_view_array <base> <n> <view>)
#? * (gsl_vector_complex_float_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_complex_float_const_view_array <base> <n> <view>)
#? * (gsl_vector_complex_float_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_complex_float_subvector <base> <i> <n> <view>)
#? * (gsl_vector_complex_float_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_complex_float_const_subvector <base> <i> <n> <view>)
#? * (gsl_vector_complex_float_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_complex_float_real <v> <view>)
#? * (gsl_vector_complex_float_imag <v> <view>)
#? * (gsl_vector_complex_float_const_real <v> <view>)
#? * (gsl_vector_complex_float_const_imag <v> <view>)
#? * (gsl_vector_complex_float_get <v> <i> <result>)
#? * (gsl_vector_complex_float_set <v> <i> <z>)
#? * (gsl_vector_complex_float_ptr <v> <i>)
#? * (gsl_vector_complex_float_const_ptr <v> <i>)
#? * (gsl_vector_complex_float_set_zero <v>)
#? * (gsl_vector_complex_float_set_all <v> <z>)
#? * (gsl_vector_complex_float_set_basis <v> <i>)
#? * (gsl_vector_complex_float_fread <stream> <v>)
#? * (gsl_vector_complex_float_fwrite <stream> <v>)
#? * (gsl_vector_complex_float_fscanf <stream> <v>)
#? * (gsl_vector_complex_float_fprintf <stream> <v> <format>)
#? * (gsl_vector_complex_float_memcpy <dest> <src>)
#? * (gsl_vector_complex_float_reverse <v>)
#? * (gsl_vector_complex_float_swap <v> <w>)
#? * (gsl_vector_complex_float_swap_elements <v> <i> <j>)
#? * (gsl_vector_complex_float_isnull <v>)
#? * (gsl_vector_complex_long_double_alloc <n>)
#? * (gsl_vector_complex_long_double_calloc <n>)
#? * (gsl_vector_complex_long_double_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_complex_long_double_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_complex_long_double_free <v>)
#? * (gsl_vector_complex_long_double_view_array <base> <n> <view>)
#? * (gsl_vector_complex_long_double_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_complex_long_double_const_view_array <base> <n> <view>)
#? * (gsl_vector_complex_long_double_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_complex_long_double_subvector <base> <i> <n> <view>)
#? * (gsl_vector_complex_long_double_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_complex_long_double_const_subvector <base> <p> <n> <view>)
#? * (gsl_vector_complex_long_double_const_subvector_with_stride <v> <p> <stride> <n> <view>)
#? * (gsl_vector_complex_long_double_real <v> <view>)
#? * (gsl_vector_complex_long_double_imag <v> <view>)
#? * (gsl_vector_complex_long_double_const_real <v> <view>)
#? * (gsl_vector_complex_long_double_const_imag <v> <view>)
#? * (gsl_vector_complex_long_double_get <v> <i> <result>)
#? * (gsl_vector_complex_long_double_set <v> <i> <z>)
#? * (gsl_vector_complex_long_double_ptr <v> <i>)
#? * (gsl_vector_complex_long_double_const_ptr <v> <i>)
#? * (gsl_vector_complex_long_double_set_zero <v>)
#? * (gsl_vector_complex_long_double_set_all <v> <z>)
#? * (gsl_vector_complex_long_double_set_basis <v> <i>)
#? * (gsl_vector_complex_long_double_fread <stream> <v>)
#? * (gsl_vector_complex_long_double_fwrite <stream> <v>)
#? * (gsl_vector_complex_long_double_fscanf <stream> <v>)
#? * (gsl_vector_complex_long_double_fprintf <stream> <v> <format>)
#? * (gsl_vector_complex_long_double_memcpy <dest> <src>)
#? * (gsl_vector_complex_long_double_reverse <v>)
#? * (gsl_vector_complex_long_double_swap <v> <w>)
#? * (gsl_vector_complex_long_double_swap_elements <v> <i> <j>)
#? * (gsl_vector_complex_long_double_isnull <v>)
#? * (gsl_vector_alloc <n>)
#? * (gsl_vector_calloc <n>)
#? * (gsl_vector_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_free <v>)
#? * (gsl_vector_view_array <v> <n> <view>)
#? * (gsl_vector_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_const_view_array <v> <n> <view>)
#? * (gsl_vector_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_subvector <v> <i> <n> <view>)
#? * (gsl_vector_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_get <v> <i>)
#? * (gsl_vector_set <v> <i> <x>)
#? * (gsl_vector_ptr <v> <i>)
#? * (gsl_vector_const_ptr <v> <i>)
#? * (gsl_vector_set_zero <v>)
#? * (gsl_vector_set_all <v> <x>)
#? * (gsl_vector_set_basis <v> <i>)
#? * (gsl_vector_fread <stream> <v>)
#? * (gsl_vector_fwrite <stream> <v>)
#? * (gsl_vector_fscanf <stream> <v>)
#? * (gsl_vector_fprintf <stream> <v> <format>)
#? * (gsl_vector_memcpy <dest> <src>)
#? * (gsl_vector_reverse <v>)
#? * (gsl_vector_swap <v> <w>)
#? * (gsl_vector_swap_elements <v> <i> <j>)
#? * (gsl_vector_max <v>)
#? * (gsl_vector_min <v>)
#? * (gsl_vector_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_max_index <v>)
#? * (gsl_vector_min_index <v>)
#? * (gsl_vector_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_add <a> <b>)
#? * (gsl_vector_sub <a> <b>)
#? * (gsl_vector_mul <a> <b>)
#? * (gsl_vector_div <a> <b>)
#? * (gsl_vector_scale <a> <x>)
#? * (gsl_vector_add_constant <a> <x>)
#? * (gsl_vector_isnull <v>)
#? * (gsl_vector_float_alloc <n>)
#? * (gsl_vector_float_calloc <n>)
#? * (gsl_vector_float_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_float_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_float_free <v>)
#? * (gsl_vector_float_view_array <v> <n> <view>)
#? * (gsl_vector_float_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_float_const_view_array <v> <n> <view>)
#? * (gsl_vector_float_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_float_subvector <v> <i> <n> <view>)
#? * (gsl_vector_float_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_float_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_float_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_float_get <v> <i>)
#? * (gsl_vector_float_set <v> <i> <x>)
#? * (gsl_vector_float_ptr <v> <i>)
#? * (gsl_vector_float_const_ptr <v> <i>)
#? * (gsl_vector_float_set_zero <v>)
#? * (gsl_vector_float_set_all <v> <x>)
#? * (gsl_vector_float_set_basis <v> <i>)
#? * (gsl_vector_float_fread <stream> <v>)
#? * (gsl_vector_float_fwrite <stream> <v>)
#? * (gsl_vector_float_fscanf <stream> <v>)
#? * (gsl_vector_float_fprintf <stream> <v> <format>)
#? * (gsl_vector_float_memcpy <dest> <src>)
#? * (gsl_vector_float_reverse <v>)
#? * (gsl_vector_float_swap <v> <w>)
#? * (gsl_vector_float_swap_elements <v> <i> <j>)
#? * (gsl_vector_float_max <v>)
#? * (gsl_vector_float_min <v>)
#? * (gsl_vector_float_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_float_max_index <v>)
#? * (gsl_vector_float_min_index <v>)
#? * (gsl_vector_float_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_float_add <a> <b>)
#? * (gsl_vector_float_sub <a> <b>)
#? * (gsl_vector_float_mul <a> <b>)
#? * (gsl_vector_float_div <a> <b>)
#? * (gsl_vector_float_scale <a> <x>)
#? * (gsl_vector_float_add_constant <a> <x>)
#? * (gsl_vector_float_isnull <v>)
#? * (gsl_vector_int_alloc <n>)
#? * (gsl_vector_int_calloc <n>)
#? * (gsl_vector_int_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_int_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_int_free <v>)
#? * (gsl_vector_int_view_array <v> <n> <view>)
#? * (gsl_vector_int_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_int_const_view_array <v> <n> <view>)
#? * (gsl_vector_int_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_int_subvector <v> <i> <n> <view>)
#? * (gsl_vector_int_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_int_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_int_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_int_get <v> <i>)
#? * (gsl_vector_int_set <v> <i> <x>)
#? * (gsl_vector_int_ptr <v> <i>)
#? * (gsl_vector_int_const_ptr <v> <i>)
#? * (gsl_vector_int_set_zero <v>)
#? * (gsl_vector_int_set_all <v> <x>)
#? * (gsl_vector_int_set_basis <v> <i>)
#? * (gsl_vector_int_fread <stream> <v>)
#? * (gsl_vector_int_fwrite <stream> <v>)
#? * (gsl_vector_int_fscanf <stream> <v>)
#? * (gsl_vector_int_fprintf <stream> <v> <format>)
#? * (gsl_vector_int_memcpy <dest> <src>)
#? * (gsl_vector_int_reverse <v>)
#? * (gsl_vector_int_swap <v> <w>)
#? * (gsl_vector_int_swap_elements <v> <i> <j>)
#? * (gsl_vector_int_max <v>)
#? * (gsl_vector_int_min <v>)
#? * (gsl_vector_int_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_int_max_index <v>)
#? * (gsl_vector_int_min_index <v>)
#? * (gsl_vector_int_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_int_add <a> <b>)
#? * (gsl_vector_int_sub <a> <b>)
#? * (gsl_vector_int_mul <a> <b>)
#? * (gsl_vector_int_div <a> <b>)
#? * (gsl_vector_int_scale <a> <x>)
#? * (gsl_vector_int_add_constant <a> <x>)
#? * (gsl_vector_int_isnull <v>)
#? * (gsl_vector_long_double_alloc <n>)
#? * (gsl_vector_long_double_calloc <n>)
#? * (gsl_vector_long_double_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_long_double_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_long_double_free <v>)
#? * (gsl_vector_long_double_view_array <v> <n> <view>)
#? * (gsl_vector_long_double_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_long_double_const_view_array <v> <n> <view>)
#? * (gsl_vector_long_double_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_long_double_subvector <v> <i> <n> <view>)
#? * (gsl_vector_long_double_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_long_double_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_long_double_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_long_double_get <v> <i>)
#? * (gsl_vector_long_double_set <v> <i> <x>)
#? * (gsl_vector_long_double_ptr <v> <i>)
#? * (gsl_vector_long_double_const_ptr <v> <i>)
#? * (gsl_vector_long_double_set_zero <v>)
#? * (gsl_vector_long_double_set_all <v> <x>)
#? * (gsl_vector_long_double_set_basis <v> <i>)
#? * (gsl_vector_long_double_fread <stream> <v>)
#? * (gsl_vector_long_double_fwrite <stream> <v>)
#? * (gsl_vector_long_double_fscanf <stream> <v>)
#? * (gsl_vector_long_double_fprintf <stream> <v> <format>)
#? * (gsl_vector_long_double_memcpy <dest> <src>)
#? * (gsl_vector_long_double_reverse <v>)
#? * (gsl_vector_long_double_swap <v> <w>)
#? * (gsl_vector_long_double_swap_elements <v> <i> <j>)
#? * (gsl_vector_long_double_max <v>)
#? * (gsl_vector_long_double_min <v>)
#? * (gsl_vector_long_double_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_long_double_max_index <v>)
#? * (gsl_vector_long_double_min_index <v>)
#? * (gsl_vector_long_double_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_long_double_add <a> <b>)
#? * (gsl_vector_long_double_sub <a> <b>)
#? * (gsl_vector_long_double_mul <a> <b>)
#? * (gsl_vector_long_double_div <a> <b>)
#? * (gsl_vector_long_double_scale <a> <x>)
#? * (gsl_vector_long_double_add_constant <a> <x>)
#? * (gsl_vector_long_double_isnull <v>)
#? * (gsl_vector_long_alloc <n>)
#? * (gsl_vector_long_calloc <n>)
#? * (gsl_vector_long_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_long_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_long_free <v>)
#? * (gsl_vector_long_view_array <v> <n> <view>)
#? * (gsl_vector_long_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_long_const_view_array <v> <n> <view>)
#? * (gsl_vector_long_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_long_subvector <v> <i> <n> <view>)
#? * (gsl_vector_long_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_long_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_long_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_long_get <v> <i>)
#? * (gsl_vector_long_set <v> <i> <x>)
#? * (gsl_vector_long_ptr <v> <i>)
#? * (gsl_vector_long_const_ptr <v> <i>)
#? * (gsl_vector_long_set_zero <v>)
#? * (gsl_vector_long_set_all <v> <x>)
#? * (gsl_vector_long_set_basis <v> <i>)
#? * (gsl_vector_long_fread <stream> <v>)
#? * (gsl_vector_long_fwrite <stream> <v>)
#? * (gsl_vector_long_fscanf <stream> <v>)
#? * (gsl_vector_long_fprintf <stream> <v> <format>)
#? * (gsl_vector_long_memcpy <dest> <src>)
#? * (gsl_vector_long_reverse <v>)
#? * (gsl_vector_long_swap <v> <w>)
#? * (gsl_vector_long_swap_elements <v> <i> <j>)
#? * (gsl_vector_long_max <v>)
#? * (gsl_vector_long_min <v>)
#? * (gsl_vector_long_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_long_max_index <v>)
#? * (gsl_vector_long_min_index <v>)
#? * (gsl_vector_long_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_long_add <a> <b>)
#? * (gsl_vector_long_sub <a> <b>)
#? * (gsl_vector_long_mul <a> <b>)
#? * (gsl_vector_long_div <a> <b>)
#? * (gsl_vector_long_scale <a> <x>)
#? * (gsl_vector_long_add_constant <a> <x>)
#? * (gsl_vector_long_isnull <v>)
#? * (gsl_vector_short_alloc <n>)
#? * (gsl_vector_short_calloc <n>)
#? * (gsl_vector_short_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_short_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_short_free <v>)
#? * (gsl_vector_short_view_array <v> <n> <view>)
#? * (gsl_vector_short_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_short_const_view_array <v> <n> <view>)
#? * (gsl_vector_short_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_short_subvector <v> <i> <n> <view>)
#? * (gsl_vector_short_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_short_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_short_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_short_get <v> <i>)
#? * (gsl_vector_short_set <v> <i> <x>)
#? * (gsl_vector_short_ptr <v> <i>)
#? * (gsl_vector_short_const_ptr <v> <i>)
#? * (gsl_vector_short_set_zero <v>)
#? * (gsl_vector_short_set_all <v> <x>)
#? * (gsl_vector_short_set_basis <v> <i>)
#? * (gsl_vector_short_fread <stream> <v>)
#? * (gsl_vector_short_fwrite <stream> <v>)
#? * (gsl_vector_short_fscanf <stream> <v>)
#? * (gsl_vector_short_fprintf <stream> <v> <format>)
#? * (gsl_vector_short_memcpy <dest> <src>)
#? * (gsl_vector_short_reverse <v>)
#? * (gsl_vector_short_swap <v> <w>)
#? * (gsl_vector_short_swap_elements <v> <i> <j>)
#? * (gsl_vector_short_max <v>)
#? * (gsl_vector_short_min <v>)
#? * (gsl_vector_short_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_short_max_index <v>)
#? * (gsl_vector_short_min_index <v>)
#? * (gsl_vector_short_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_short_add <a> <b>)
#? * (gsl_vector_short_sub <a> <b>)
#? * (gsl_vector_short_mul <a> <b>)
#? * (gsl_vector_short_div <a> <b>)
#? * (gsl_vector_short_scale <a> <x>)
#? * (gsl_vector_short_add_constant <a> <x>)
#? * (gsl_vector_short_isnull <v>)
#? * (gsl_vector_uchar_alloc <n>)
#? * (gsl_vector_uchar_calloc <n>)
#? * (gsl_vector_uchar_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_uchar_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_uchar_free <v>)
#? * (gsl_vector_uchar_view_array <v> <n> <view>)
#? * (gsl_vector_uchar_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_uchar_const_view_array <v> <n> <view>)
#? * (gsl_vector_uchar_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_uchar_subvector <v> <i> <n> <view>)
#? * (gsl_vector_uchar_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_uchar_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_uchar_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_uchar_get <v> <i>)
#? * (gsl_vector_uchar_set <v> <i> <x>)
#? * (gsl_vector_uchar_ptr <v> <i>)
#? * (gsl_vector_uchar_const_ptr <v> <i>)
#? * (gsl_vector_uchar_set_zero <v>)
#? * (gsl_vector_uchar_set_all <v> <x>)
#? * (gsl_vector_uchar_set_basis <v> <i>)
#? * (gsl_vector_uchar_fread <stream> <v>)
#? * (gsl_vector_uchar_fwrite <stream> <v>)
#? * (gsl_vector_uchar_fscanf <stream> <v>)
#? * (gsl_vector_uchar_fprintf <stream> <v> <format>)
#? * (gsl_vector_uchar_memcpy <dest> <src>)
#? * (gsl_vector_uchar_reverse <v>)
#? * (gsl_vector_uchar_swap <v> <w>)
#? * (gsl_vector_uchar_swap_elements <v> <i> <j>)
#? * (gsl_vector_uchar_max <v>)
#? * (gsl_vector_uchar_min <v>)
#? * (gsl_vector_uchar_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_uchar_max_index <v>)
#? * (gsl_vector_uchar_min_index <v>)
#? * (gsl_vector_uchar_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_uchar_add <a> <b>)
#? * (gsl_vector_uchar_sub <a> <b>)
#? * (gsl_vector_uchar_mul <a> <b>)
#? * (gsl_vector_uchar_div <a> <b>)
#? * (gsl_vector_uchar_scale <a> <x>)
#? * (gsl_vector_uchar_add_constant <a> <x>)
#? * (gsl_vector_uchar_isnull <v>)
#? * (gsl_vector_uint_alloc <n>)
#? * (gsl_vector_uint_calloc <n>)
#? * (gsl_vector_uint_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_uint_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_uint_free <v>)
#? * (gsl_vector_uint_view_array <v> <n> <view>)
#? * (gsl_vector_uint_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_uint_const_view_array <v> <n> <view>)
#? * (gsl_vector_uint_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_uint_subvector <v> <i> <n> <view>)
#? * (gsl_vector_uint_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_uint_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_uint_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_uint_get <v> <i>)
#? * (gsl_vector_uint_set <v> <i> <x>)
#? * (gsl_vector_uint_ptr <v> <i>)
#? * (gsl_vector_uint_const_ptr <v> <i>)
#? * (gsl_vector_uint_set_zero <v>)
#? * (gsl_vector_uint_set_all <v> <x>)
#? * (gsl_vector_uint_set_basis <v> <i>)
#? * (gsl_vector_uint_fread <stream> <v>)
#? * (gsl_vector_uint_fwrite <stream> <v>)
#? * (gsl_vector_uint_fscanf <stream> <v>)
#? * (gsl_vector_uint_fprintf <stream> <v> <format>)
#? * (gsl_vector_uint_memcpy <dest> <src>)
#? * (gsl_vector_uint_reverse <v>)
#? * (gsl_vector_uint_swap <v> <w>)
#? * (gsl_vector_uint_swap_elements <v> <i> <j>)
#? * (gsl_vector_uint_max <v>)
#? * (gsl_vector_uint_min <v>)
#? * (gsl_vector_uint_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_uint_max_index <v>)
#? * (gsl_vector_uint_min_index <v>)
#? * (gsl_vector_uint_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_uint_add <a> <b>)
#? * (gsl_vector_uint_sub <a> <b>)
#? * (gsl_vector_uint_mul <a> <b>)
#? * (gsl_vector_uint_div <a> <b>)
#? * (gsl_vector_uint_scale <a> <x>)
#? * (gsl_vector_uint_add_constant <a> <x>)
#? * (gsl_vector_uint_isnull <v>)
#? * (gsl_vector_ulong_alloc <n>)
#? * (gsl_vector_ulong_calloc <n>)
#? * (gsl_vector_ulong_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_ulong_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_ulong_free <v>)
#? * (gsl_vector_ulong_view_array <v> <n> <view>)
#? * (gsl_vector_ulong_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_ulong_const_view_array <v> <n> <view>)
#? * (gsl_vector_ulong_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_ulong_subvector <v> <i> <n> <view>)
#? * (gsl_vector_ulong_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_ulong_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_ulong_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_ulong_get <v> <i>)
#? * (gsl_vector_ulong_set <v> <i> <x>)
#? * (gsl_vector_ulong_ptr <v> <i>)
#? * (gsl_vector_ulong_const_ptr <v> <i>)
#? * (gsl_vector_ulong_set_zero <v>)
#? * (gsl_vector_ulong_set_all <v> <x>)
#? * (gsl_vector_ulong_set_basis <v> <i>)
#? * (gsl_vector_ulong_fread <stream> <v>)
#? * (gsl_vector_ulong_fwrite <stream> <v>)
#? * (gsl_vector_ulong_fscanf <stream> <v>)
#? * (gsl_vector_ulong_fprintf <stream> <v> <format>)
#? * (gsl_vector_ulong_memcpy <dest> <src>)
#? * (gsl_vector_ulong_reverse <v>)
#? * (gsl_vector_ulong_swap <v> <w>)
#? * (gsl_vector_ulong_swap_elements <v> <i> <j>)
#? * (gsl_vector_ulong_max <v>)
#? * (gsl_vector_ulong_min <v>)
#? * (gsl_vector_ulong_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_ulong_max_index <v>)
#? * (gsl_vector_ulong_min_index <v>)
#? * (gsl_vector_ulong_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_ulong_add <a> <b>)
#? * (gsl_vector_ulong_sub <a> <b>)
#? * (gsl_vector_ulong_mul <a> <b>)
#? * (gsl_vector_ulong_div <a> <b>)
#? * (gsl_vector_ulong_scale <a> <x>)
#? * (gsl_vector_ulong_add_constant <a> <x>)
#? * (gsl_vector_ulong_isnull <v>)
#? * (gsl_vector_ushort_alloc <n>)
#? * (gsl_vector_ushort_calloc <n>)
#? * (gsl_vector_ushort_alloc_from_block <b> <offset> <n> <stride>)
#? * (gsl_vector_ushort_alloc_from_vector <v> <offset> <n> <stride>)
#? * (gsl_vector_ushort_free <v>)
#? * (gsl_vector_ushort_view_array <v> <n> <view>)
#? * (gsl_vector_ushort_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_ushort_const_view_array <v> <n> <view>)
#? * (gsl_vector_ushort_const_view_array_with_stride <base> <stride> <n> <view>)
#? * (gsl_vector_ushort_subvector <v> <i> <n> <view>)
#? * (gsl_vector_ushort_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_ushort_const_subvector <v> <i> <n> <view>)
#? * (gsl_vector_ushort_const_subvector_with_stride <v> <i> <stride> <n> <view>)
#? * (gsl_vector_ushort_get <v> <i>)
#? * (gsl_vector_ushort_set <v> <i> <x>)
#? * (gsl_vector_ushort_ptr <v> <i>)
#? * (gsl_vector_ushort_const_ptr <v> <i>)
#? * (gsl_vector_ushort_set_zero <v>)
#? * (gsl_vector_ushort_set_all <v> <x>)
#? * (gsl_vector_ushort_set_basis <v> <i>)
#? * (gsl_vector_ushort_fread <stream> <v>)
#? * (gsl_vector_ushort_fwrite <stream> <v>)
#? * (gsl_vector_ushort_fscanf <stream> <v>)
#? * (gsl_vector_ushort_fprintf <stream> <v> <format>)
#? * (gsl_vector_ushort_memcpy <dest> <src>)
#? * (gsl_vector_ushort_reverse <v>)
#? * (gsl_vector_ushort_swap <v> <w>)
#? * (gsl_vector_ushort_swap_elements <v> <i> <j>)
#? * (gsl_vector_ushort_max <v>)
#? * (gsl_vector_ushort_min <v>)
#? * (gsl_vector_ushort_minmax <v> <min_out> <max_out>)
#? * (gsl_vector_ushort_max_index <v>)
#? * (gsl_vector_ushort_min_index <v>)
#? * (gsl_vector_ushort_minmax_index <v> <imin> <imax>)
#? * (gsl_vector_ushort_add <a> <b>)
#? * (gsl_vector_ushort_sub <a> <b>)
#? * (gsl_vector_ushort_mul <a> <b>)
#? * (gsl_vector_ushort_div <a> <b>)
#? * (gsl_vector_ushort_scale <a> <x>)
#? * (gsl_vector_ushort_add_constant <a> <x>)
#? * (gsl_vector_ushort_isnull <v>)

;; ********************************************************

;; not finished, what to with the "return structure" problem?

(de gsl_vector_char_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_char_alloc ( $n) #} )        ;; gsl_vector_char* -> gptr
)

(de gsl_vector_char_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_char_calloc ( $n) #} )        ;; gsl_vector_char* -> gptr
)


(de gsl_vector_char_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_char *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_char_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_char* -> gptr
)


(de gsl_vector_char_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_char_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_char* -> gptr
)


(de gsl_vector_char_free (   v )
    ((-gptr- "gsl_vector_char *")   v)
    #{ gsl_vector_char_free ( $v) #} 
    ()
)




(de gsl_vector_char_view_array (   v  n  view)
    ((-gptr- "char *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_view  *") view)
    #{ {
    _gsl_vector_char_view tmp;
    tmp = gsl_vector_char_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_view ));
    } #} 
    ()
)


(de gsl_vector_char_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "char *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_view  *") view)
    #{ {
    _gsl_vector_char_view tmp;
    tmp = gsl_vector_char_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_view ));
    } #} 
    ()
)


(de gsl_vector_char_const_view_array (   v  n  view)
    ((-gptr- "char *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_const_view  *") view)
    #{ {
    _gsl_vector_char_const_view tmp;
    tmp = gsl_vector_char_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_const_view ));
    } #} 
    ()
)


(de gsl_vector_char_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "char *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_const_view  *") view)
    #{ {
    _gsl_vector_char_const_view tmp;
    tmp = gsl_vector_char_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_const_view ));
    } #} 
    ()
)


(de gsl_vector_char_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_char *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_view  *") view)
    #{ {
    _gsl_vector_char_view tmp;
    tmp = gsl_vector_char_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_view ));
    } #} 
    ()
)


(de gsl_vector_char_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_char *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_view  *") view)
    #{ {
    _gsl_vector_char_view tmp;
    tmp = gsl_vector_char_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_view ));
    } #} 
    ()
)


(de gsl_vector_char_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_char *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_const_view  *") view)
    #{ {
    _gsl_vector_char_const_view tmp;
    tmp = gsl_vector_char_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_const_view ));
    } #} 
    ()
)


(de gsl_vector_char_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_char *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_char_const_view  *") view)
    #{ {
    _gsl_vector_char_const_view tmp;
    tmp = gsl_vector_char_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_char_const_view ));
    } #} 
    ()
)




(de gsl_vector_char_get (   v  i )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int    #{ gsl_vector_char_get ( $v ,$i) #} )       ;; char -> int
)

(de gsl_vector_char_set (   v  i  x )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)                                ;; char -> int
    #{ gsl_vector_char_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_char_ptr (   v  i )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_char_ptr ( $v ,$i) #} )        ;; char* -> gptr
)

(de gsl_vector_char_const_ptr (   v  i )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_char_const_ptr ( $v ,$i) #} )        ;; const char* -> gptr
)


(de gsl_vector_char_set_zero (   v )
    ((-gptr- "gsl_vector_char *")   v)
    #{ gsl_vector_char_set_zero ( $v) #} 
    ()
)

(de gsl_vector_char_set_all (   v  x )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  x)                              ;; char -> int
    #{ gsl_vector_char_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_char_set_basis (   v  i )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_char_set_basis ( $v ,$i) #} )
)


(de gsl_vector_char_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_fread ( $stream ,$v) #} )
)

(de gsl_vector_char_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_char_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_char_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_char *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_char_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_char_memcpy (   dest  src )
    ((-gptr- "gsl_vector_char *")   dest)
    ((-gptr- "gsl_vector_char *")   src)
    (int   #{ gsl_vector_char_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_char_reverse (   v )
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_reverse ( $v) #} )
)


(de gsl_vector_char_swap (   v  w )
    ((-gptr- "gsl_vector_char *")   v)
    ((-gptr- "gsl_vector_char *")   w)
    (int   #{ gsl_vector_char_swap ( $v ,$w) #} )
)

(de gsl_vector_char_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_char *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_char_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_char_max (   v )
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_max ( $v) #} )         ;; char -> int
)

(de gsl_vector_char_min (   v )
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_min ( $v) #} )          ;; char -> int
)

(de gsl_vector_char_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_char *")   v)
    ((-gptr- "char *")   min_out)
    ((-gptr- "char *")   max_out)
    #{ gsl_vector_char_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_char_max_index (   v )
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_char_min_index (   v )
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_char_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_char *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_char_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_char_add (   a  b )
    ((-gptr- "gsl_vector_char *")   a)
    ((-gptr- "gsl_vector_char *")   b)
    (int   #{ gsl_vector_char_add ( $a ,$b) #} )
)

(de gsl_vector_char_sub (   a  b )
    ((-gptr- "gsl_vector_char *")   a)
    ((-gptr- "gsl_vector_char *")   b)
    (int   #{ gsl_vector_char_sub ( $a ,$b) #} )
)

(de gsl_vector_char_mul (   a  b )
    ((-gptr- "gsl_vector_char *")   a)
    ((-gptr- "gsl_vector_char *")   b)
    (int   #{ gsl_vector_char_mul ( $a ,$b) #} )
)

(de gsl_vector_char_div (   a  b )
    ((-gptr- "gsl_vector_char *")   a)
    ((-gptr- "gsl_vector_char *")   b)
    (int   #{ gsl_vector_char_div ( $a ,$b) #} )
)

(de gsl_vector_char_scale (   a  x )
    ((-gptr- "gsl_vector_char *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_char_scale ( $a ,$x) #} )
)

(de gsl_vector_char_add_constant (   a  x )
    ((-gptr- "gsl_vector_char *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_char_add_constant ( $a ,$x) #} )
)


(de gsl_vector_char_isnull (   v )
    ((-gptr- "gsl_vector_char *")   v)
    (int   #{ gsl_vector_char_isnull ( $v) #} )
)







(de gsl_vector_complex_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_alloc ( $n) #} )        ;; gsl_vector_complex* -> gptr
)

(de gsl_vector_complex_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_calloc ( $n) #} )        ;; gsl_vector_complex* -> gptr
)


(de gsl_vector_complex_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_complex *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_complex* -> gptr
)


(de gsl_vector_complex_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_complex* -> gptr
)


(de gsl_vector_complex_free (   v )
    ((-gptr- "gsl_vector_complex *")   v)
    #{ gsl_vector_complex_free ( $v) #} 
    ()
)




(de gsl_vector_complex_view_array (   base  n  view)
    ((-gptr- "double *")  base)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_view  *") view)
    #{ {
    _gsl_vector_complex_view tmp;
    tmp = gsl_vector_complex_view_array ( $base ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_view ));
    } #} 
    ()
)


(de gsl_vector_complex_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_view  *") view)
    #{ {
    _gsl_vector_complex_view tmp;
    tmp = gsl_vector_complex_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_view ));
    } #} 
    ()
)


(de gsl_vector_complex_const_view_array (   base  n  view)
    ((-gptr- "double *")  base)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_const_view  *") view)
    #{ {
    _gsl_vector_complex_const_view tmp;
    tmp = gsl_vector_complex_const_view_array ( $base ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_const_view  *") view)
    #{ {
    _gsl_vector_complex_const_view tmp;
    tmp = gsl_vector_complex_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_subvector (   base  i  n  view)
    ((-gptr- "gsl_vector_complex *")  base)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_view  *") view)
    #{ {
    _gsl_vector_complex_view tmp;
    tmp = gsl_vector_complex_subvector ( $base ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_view ));
    } #} 
    ()
)



(de gsl_vector_complex_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_complex *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_view  *") view)
    #{ {
    _gsl_vector_complex_view tmp;
    tmp = gsl_vector_complex_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_view ));
    } #} 
    ()
)


(de gsl_vector_complex_const_subvector (   base  i  n  view)
    ((-gptr- "gsl_vector_complex *")  base)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_const_view  *") view)
    #{ {
    _gsl_vector_complex_const_view tmp;
    tmp = gsl_vector_complex_const_subvector ( $base ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_const_view ));
    } #} 
    ()
)



(de gsl_vector_complex_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_complex *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_const_view  *") view)
    #{ {
    _gsl_vector_complex_const_view tmp;
    tmp = gsl_vector_complex_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_real (   v  view)
    ((-gptr- "gsl_vector_complex *")  v)
    ((-gptr- "_gsl_vector_view  *") view)
    #{ {
    _gsl_vector_view tmp;
    tmp = gsl_vector_complex_real ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_view ));
    } #} 
    ()
)


(de gsl_vector_complex_imag (   v  view)
    ((-gptr- "gsl_vector_complex *")  v)
    ((-gptr- "_gsl_vector_view  *") view)
    #{ {
    _gsl_vector_view tmp;
    tmp = gsl_vector_complex_imag ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_view ));
    } #} 
    ()
)


(de gsl_vector_complex_const_real (   v  view)
    ((-gptr- "gsl_vector_complex *")  v)
    ((-gptr- "_gsl_vector_const_view  *") view)
    #{ {
    _gsl_vector_const_view tmp;
    tmp = gsl_vector_complex_const_real ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_const_imag (   v  view)
    ((-gptr- "gsl_vector_complex *")  v)
    ((-gptr- "_gsl_vector_const_view  *") view)
    #{ {
    _gsl_vector_const_view tmp;
    tmp = gsl_vector_complex_const_imag ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_const_view ));
    } #} 
    ()
)





(de gsl_vector_complex_get (   v  i  result)
    ((-gptr- "gsl_vector_complex *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-gptr- "gsl_complex    *") result)
    #{ {
    gsl_complex    tmp;
    tmp = gsl_vector_complex_get ( $v ,$i);
    memcpy($result, &tmp, sizeof(gsl_complex   ));
    } #} 
    ()
)


(de gsl_vector_complex_set (   v  i  z )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-gptr- "gsl_complex *")  z)
    #{ gsl_vector_complex_set ( $v ,$i ,*$z) #} 
    ()
)


(de gsl_vector_complex_ptr (   v  i )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_ptr ( $v ,$i) #} )        ;; gsl_complex* -> gptr
)


(de gsl_vector_complex_const_ptr (   v  i )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_const_ptr ( $v ,$i) #} )        ;; const gsl_complex* -> gptr
)


(de gsl_vector_complex_set_zero (   v )
    ((-gptr- "gsl_vector_complex *")   v)
    #{ gsl_vector_complex_set_zero ( $v) #} 
    ()
)

(de gsl_vector_complex_set_all (   v  z )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-gptr- "gsl_complex *")  z)
    #{ gsl_vector_complex_set_all ( $v , *$z) #} 
    ()
)

(de gsl_vector_complex_set_basis (   v  i )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_complex_set_basis ( $v ,$i) #} )
)


(de gsl_vector_complex_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex *")   v)
    (int   #{ gsl_vector_complex_fread ( $stream ,$v) #} )
)

(de gsl_vector_complex_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex *")   v)
    (int   #{ gsl_vector_complex_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_complex_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex *")   v)
    (int   #{ gsl_vector_complex_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_complex_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_complex_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_complex_memcpy (   dest  src )
    ((-gptr- "gsl_vector_complex *")   dest)
    ((-gptr- "gsl_vector_complex *")   src)
    (int   #{ gsl_vector_complex_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_complex_reverse (   v )
    ((-gptr- "gsl_vector_complex *")   v)
    (int   #{ gsl_vector_complex_reverse ( $v) #} )
)


(de gsl_vector_complex_swap (   v  w )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-gptr- "gsl_vector_complex *")   w)
    (int   #{ gsl_vector_complex_swap ( $v ,$w) #} )
)

(de gsl_vector_complex_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_complex *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_complex_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_complex_isnull (   v )
    ((-gptr- "gsl_vector_complex *")   v)
    (int   #{ gsl_vector_complex_isnull ( $v) #} )
)



(de gsl_vector_complex_float_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_float_alloc ( $n) #} )        ;; gsl_vector_complex_float* -> gptr
)

(de gsl_vector_complex_float_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_float_calloc ( $n) #} )        ;; gsl_vector_complex_float* -> gptr
)


(de gsl_vector_complex_float_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_complex_float *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_float_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_complex_float* -> gptr
)


(de gsl_vector_complex_float_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_float_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_complex_float* -> gptr
)


(de gsl_vector_complex_float_free (   v )
    ((-gptr- "gsl_vector_complex_float *")   v)
    #{ gsl_vector_complex_float_free ( $v) #} 
    ()
)




(de gsl_vector_complex_float_view_array (   base  n  view)
    ((-gptr- "float *")  base)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_view  *") view)
    #{ {
    _gsl_vector_complex_float_view tmp;
    tmp = gsl_vector_complex_float_view_array ( $base ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "float *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_view  *") view)
    #{ {
    _gsl_vector_complex_float_view tmp;
    tmp = gsl_vector_complex_float_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_const_view_array (   base  n  view)
    ((-gptr- "float *")  base)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_const_view  *") view)
    #{ {
    _gsl_vector_complex_float_const_view tmp;
    tmp = gsl_vector_complex_float_const_view_array ( $base ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "float *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_const_view  *") view)
    #{ {
    _gsl_vector_complex_float_const_view tmp;
    tmp = gsl_vector_complex_float_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_subvector (   base  i  n  view)
    ((-gptr- "gsl_vector_complex_float *")  base)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_view  *") view)
    #{ {
    _gsl_vector_complex_float_view tmp;
    tmp = gsl_vector_complex_float_subvector ( $base ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_view ));
    } #} 
    ()
)



(de gsl_vector_complex_float_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_complex_float *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_view  *") view)
    #{ {
    _gsl_vector_complex_float_view tmp;
    tmp = gsl_vector_complex_float_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_const_subvector (   base  i  n  view)
    ((-gptr- "gsl_vector_complex_float *")  base)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_const_view  *") view)
    #{ {
    _gsl_vector_complex_float_const_view tmp;
    tmp = gsl_vector_complex_float_const_subvector ( $base ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_const_view ));
    } #} 
    ()
)



(de gsl_vector_complex_float_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_complex_float *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_float_const_view  *") view)
    #{ {
    _gsl_vector_complex_float_const_view tmp;
    tmp = gsl_vector_complex_float_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_float_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_real (   v  view)
    ((-gptr- "gsl_vector_complex_float *")  v)
    ((-gptr- "_gsl_vector_float_view  *") view)
    #{ {
    _gsl_vector_float_view tmp;
    tmp = gsl_vector_complex_float_real ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_imag (   v  view)
    ((-gptr- "gsl_vector_complex_float *")  v)
    ((-gptr- "_gsl_vector_float_view  *") view)
    #{ {
    _gsl_vector_float_view tmp;
    tmp = gsl_vector_complex_float_imag ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_const_real (   v  view)
    ((-gptr- "gsl_vector_complex_float *")  v)
    ((-gptr- "_gsl_vector_float_const_view  *") view)
    #{ {
    _gsl_vector_float_const_view tmp;
    tmp = gsl_vector_complex_float_const_real ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_float_const_imag (   v  view)
    ((-gptr- "gsl_vector_complex_float *")  v)
    ((-gptr- "_gsl_vector_float_const_view  *") view)
    #{ {
    _gsl_vector_float_const_view tmp;
    tmp = gsl_vector_complex_float_const_imag ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_const_view ));
    } #} 
    ()
)





(de gsl_vector_complex_float_get (   v  i  result)
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-gptr- "gsl_complex_float    *") result)
    #{ {
    gsl_complex_float    tmp;
    tmp = gsl_vector_complex_float_get ( $v ,$i);
    memcpy($result, &tmp, sizeof(gsl_complex_float   ));
    } #} 
    ()
)


(de gsl_vector_complex_float_set (   v  i  z )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-gptr- "gsl_complex_float *")  z)
    #{ gsl_vector_complex_float_set ( $v ,$i ,*$z) #} 
    ()
)


(de gsl_vector_complex_float_ptr (   v  i )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_float_ptr ( $v ,$i) #} )        ;; gsl_complex_float* -> gptr
)


(de gsl_vector_complex_float_const_ptr (   v  i )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_float_const_ptr ( $v ,$i) #} )        ;; const gsl_complex_float* -> gptr
)


(de gsl_vector_complex_float_set_zero (   v )
    ((-gptr- "gsl_vector_complex_float *")   v)
    #{ gsl_vector_complex_float_set_zero ( $v) #} 
    ()
)

(de gsl_vector_complex_float_set_all (   v  z )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-gptr- "gsl_complex_float *")  z)
    #{ gsl_vector_complex_float_set_all ( $v ,*$z) #} 
    ()
)

(de gsl_vector_complex_float_set_basis (   v  i )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_complex_float_set_basis ( $v ,$i) #} )
)


(de gsl_vector_complex_float_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_float *")   v)
    (int   #{ gsl_vector_complex_float_fread ( $stream ,$v) #} )
)

(de gsl_vector_complex_float_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_float *")   v)
    (int   #{ gsl_vector_complex_float_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_complex_float_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_float *")   v)
    (int   #{ gsl_vector_complex_float_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_complex_float_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_complex_float_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_complex_float_memcpy (   dest  src )
    ((-gptr- "gsl_vector_complex_float *")   dest)
    ((-gptr- "gsl_vector_complex_float *")   src)
    (int   #{ gsl_vector_complex_float_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_complex_float_reverse (   v )
    ((-gptr- "gsl_vector_complex_float *")   v)
    (int   #{ gsl_vector_complex_float_reverse ( $v) #} )
)


(de gsl_vector_complex_float_swap (   v  w )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-gptr- "gsl_vector_complex_float *")   w)
    (int   #{ gsl_vector_complex_float_swap ( $v ,$w) #} )
)

(de gsl_vector_complex_float_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_complex_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_complex_float_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_complex_float_isnull (   v )
    ((-gptr- "gsl_vector_complex_float *")   v)
    (int   #{ gsl_vector_complex_float_isnull ( $v) #} )
)





(de gsl_vector_complex_long_double_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_long_double_alloc ( $n) #} )        ;; gsl_vector_complex_long_double* -> gptr
)

(de gsl_vector_complex_long_double_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_long_double_calloc ( $n) #} )        ;; gsl_vector_complex_long_double* -> gptr
)


(de gsl_vector_complex_long_double_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_complex_long_double *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_long_double_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_complex_long_double* -> gptr
)


(de gsl_vector_complex_long_double_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_long_double_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_complex_long_double* -> gptr
)


(de gsl_vector_complex_long_double_free (   v )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    #{ gsl_vector_complex_long_double_free ( $v) #} 
    ()
)




(de gsl_vector_complex_long_double_view_array (   base  n  view)
    ((-gptr- "long double *")  base)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_view tmp;
    tmp = gsl_vector_complex_long_double_view_array ( $base ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "long double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_view tmp;
    tmp = gsl_vector_complex_long_double_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_const_view_array (   base  n  view)
    ((-gptr- "long double *")  base)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_const_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_const_view tmp;
    tmp = gsl_vector_complex_long_double_const_view_array ( $base ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "long double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_const_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_const_view tmp;
    tmp = gsl_vector_complex_long_double_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_subvector (   base  i  n  view)
    ((-gptr- "gsl_vector_complex_long_double *")  base)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_view tmp;
    tmp = gsl_vector_complex_long_double_subvector ( $base ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_view ));
    } #} 
    ()
)



(de gsl_vector_complex_long_double_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_complex_long_double *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_view tmp;
    tmp = gsl_vector_complex_long_double_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_const_subvector (   base  p  n  view)
    ((-gptr- "gsl_vector_complex_long_double *")  base)
    ((-int-)  p)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_const_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_const_view tmp;
    tmp = gsl_vector_complex_long_double_const_subvector ( $base ,$p ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_const_view ));
    } #} 
    ()
)



(de gsl_vector_complex_long_double_const_subvector_with_stride (   v  p  stride  n  view)
    ((-gptr- "gsl_vector_complex_long_double *")  v)
    ((-int-)  p)                                ;; size_t -> int
    ((-int-)  stride)                           ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_complex_long_double_const_view  *") view)
    #{ {
    _gsl_vector_complex_long_double_const_view tmp;
    tmp = gsl_vector_complex_long_double_const_subvector_with_stride ( $v ,$p ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_complex_long_double_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_real (   v  view)
    ((-gptr- "gsl_vector_complex_long_double *")  v)
    ((-gptr- "_gsl_vector_long_double_view  *") view)
    #{ {
    _gsl_vector_long_double_view tmp;
    tmp = gsl_vector_complex_long_double_real ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_imag (   v  view)
    ((-gptr- "gsl_vector_complex_long_double *")  v)
    ((-gptr- "_gsl_vector_long_double_view  *") view)
    #{ {
    _gsl_vector_long_double_view tmp;
    tmp = gsl_vector_complex_long_double_imag ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_const_real (   v  view)
    ((-gptr- "gsl_vector_complex_long_double *")  v)
    ((-gptr- "_gsl_vector_long_double_const_view  *") view)
    #{ {
    _gsl_vector_long_double_const_view tmp;
    tmp = gsl_vector_complex_long_double_const_real ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_const_view ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_const_imag (   v  view)
    ((-gptr- "gsl_vector_complex_long_double *")  v)
    ((-gptr- "_gsl_vector_long_double_const_view  *") view)
    #{ {
    _gsl_vector_long_double_const_view tmp;
    tmp = gsl_vector_complex_long_double_const_imag ( $v);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_const_view ));
    } #} 
    ()
)





(de gsl_vector_complex_long_double_get (   v  i  result)
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-gptr- "gsl_complex_long_double     *") result)
    #{ {
    gsl_complex_long_double     tmp;
    tmp = gsl_vector_complex_long_double_get ( $v ,$i);
    memcpy($result, &tmp, sizeof(gsl_complex_long_double    ));
    } #} 
    ()
)


(de gsl_vector_complex_long_double_set (   v  i  z )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-gptr- "gsl_complex_long_double *")  z)
    #{ gsl_vector_complex_long_double_set ( $v ,$i ,*$z) #} 
    ()
)


(de gsl_vector_complex_long_double_ptr (   v  i )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_long_double_ptr ( $v ,$i) #} )        ;; gsl_complex_long_double* -> gptr
)


(de gsl_vector_complex_long_double_const_ptr (   v  i )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_complex_long_double_const_ptr ( $v ,$i) #} )        ;; const gsl_complex_long_double* -> gptr
)


(de gsl_vector_complex_long_double_set_zero (   v )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    #{ gsl_vector_complex_long_double_set_zero ( $v) #} 
    ()
)

(de gsl_vector_complex_long_double_set_all (   v  z )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-gptr- "gsl_complex_long_double *")  z)
    #{ gsl_vector_complex_long_double_set_all ( $v ,*$z) #} 
    ()
)

(de gsl_vector_complex_long_double_set_basis (   v  i )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_complex_long_double_set_basis ( $v ,$i) #} )
)


(de gsl_vector_complex_long_double_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    (int   #{ gsl_vector_complex_long_double_fread ( $stream ,$v) #} )
)

(de gsl_vector_complex_long_double_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    (int   #{ gsl_vector_complex_long_double_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_complex_long_double_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    (int   #{ gsl_vector_complex_long_double_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_complex_long_double_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_complex_long_double_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_complex_long_double_memcpy (   dest  src )
    ((-gptr- "gsl_vector_complex_long_double *")   dest)
    ((-gptr- "gsl_vector_complex_long_double *")   src)
    (int   #{ gsl_vector_complex_long_double_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_complex_long_double_reverse (   v )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    (int   #{ gsl_vector_complex_long_double_reverse ( $v) #} )
)


(de gsl_vector_complex_long_double_swap (   v  w )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-gptr- "gsl_vector_complex_long_double *")   w)
    (int   #{ gsl_vector_complex_long_double_swap ( $v ,$w) #} )
)

(de gsl_vector_complex_long_double_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_complex_long_double_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_complex_long_double_isnull (   v )
    ((-gptr- "gsl_vector_complex_long_double *")   v)
    (int   #{ gsl_vector_complex_long_double_isnull ( $v) #} )
)








(de gsl_vector_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_alloc ( $n) #} )        ;; gsl_vector* -> gptr
)

(de gsl_vector_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_calloc ( $n) #} )        ;; gsl_vector* -> gptr
)


(de gsl_vector_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector* -> gptr
)


(de gsl_vector_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector* -> gptr
)


(de gsl_vector_free (   v )
    ((-gptr- "gsl_vector *")   v)
    #{ gsl_vector_free ( $v) #} 
    ()
)




(de gsl_vector_view_array (   v  n  view)
    ((-gptr- "double *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_view  *") view)
    #{ {
    _gsl_vector_view tmp;
    tmp = gsl_vector_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_view ));
    } #} 
    ()
)


(de gsl_vector_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_view  *") view)
    #{ {
    _gsl_vector_view tmp;
    tmp = gsl_vector_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_view ));
    } #} 
    ()
)


(de gsl_vector_const_view_array (   v  n  view)
    ((-gptr- "double *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_const_view  *") view)
    #{ {
    _gsl_vector_const_view tmp;
    tmp = gsl_vector_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_const_view ));
    } #} 
    ()
)


(de gsl_vector_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_const_view  *") view)
    #{ {
    _gsl_vector_const_view tmp;
    tmp = gsl_vector_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_const_view ));
    } #} 
    ()
)


(de gsl_vector_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_view  *") view)
    #{ {
    _gsl_vector_view tmp;
    tmp = gsl_vector_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_view ));
    } #} 
    ()
)


(de gsl_vector_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_view  *") view)
    #{ {
    _gsl_vector_view tmp;
    tmp = gsl_vector_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_view ));
    } #} 
    ()
)


(de gsl_vector_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_const_view  *") view)
    #{ {
    _gsl_vector_const_view tmp;
    tmp = gsl_vector_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_const_view ));
    } #} 
    ()
)


(de gsl_vector_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_const_view  *") view)
    #{ {
    _gsl_vector_const_view tmp;
    tmp = gsl_vector_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_const_view ));
    } #} 
    ()
)




(de gsl_vector_get (   v  i )
    ((-gptr- "gsl_vector *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (double   #{ gsl_vector_get ( $v ,$i) #} )
)

(de gsl_vector_set (   v  i  x )
    ((-gptr- "gsl_vector *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-double-)  x)
    #{ gsl_vector_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_ptr (   v  i )
    ((-gptr- "gsl_vector *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ptr ( $v ,$i) #} )        ;; double* -> gptr
)

(de gsl_vector_const_ptr (   v  i )
    ((-gptr- "gsl_vector *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_const_ptr ( $v ,$i) #} )        ;; const double* -> gptr
)


(de gsl_vector_set_zero (   v )
    ((-gptr- "gsl_vector *")   v)
    #{ gsl_vector_set_zero ( $v) #} 
    ()
)

(de gsl_vector_set_all (   v  x )
    ((-gptr- "gsl_vector *")   v)
    ((-double-)  x)
    #{ gsl_vector_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_set_basis (   v  i )
    ((-gptr- "gsl_vector *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_set_basis ( $v ,$i) #} )
)


(de gsl_vector_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector *")   v)
    (int   #{ gsl_vector_fread ( $stream ,$v) #} )
)

(de gsl_vector_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector *")   v)
    (int   #{ gsl_vector_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector *")   v)
    (int   #{ gsl_vector_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_memcpy (   dest  src )
    ((-gptr- "gsl_vector *")   dest)
    ((-gptr- "gsl_vector *")   src)
    (int   #{ gsl_vector_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_reverse (   v )
    ((-gptr- "gsl_vector *")   v)
    (int   #{ gsl_vector_reverse ( $v) #} )
)


(de gsl_vector_swap (   v  w )
    ((-gptr- "gsl_vector *")   v)
    ((-gptr- "gsl_vector *")   w)
    (int   #{ gsl_vector_swap ( $v ,$w) #} )
)

(de gsl_vector_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_max (   v )
    ((-gptr- "gsl_vector *")   v)
    (double   #{ gsl_vector_max ( $v) #} )
)

(de gsl_vector_min (   v )
    ((-gptr- "gsl_vector *")   v)
    (double   #{ gsl_vector_min ( $v) #} )
)

(de gsl_vector_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector *")   v)
    ((-gptr- "double *")   min_out)
    ((-gptr- "double *")   max_out)
    #{ gsl_vector_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_max_index (   v )
    ((-gptr- "gsl_vector *")   v)
    (int   #{ gsl_vector_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_min_index (   v )
    ((-gptr- "gsl_vector *")   v)
    (int   #{ gsl_vector_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_add (   a  b )
    ((-gptr- "gsl_vector *")   a)
    ((-gptr- "gsl_vector *")   b)
    (int   #{ gsl_vector_add ( $a ,$b) #} )
)

(de gsl_vector_sub (   a  b )
    ((-gptr- "gsl_vector *")   a)
    ((-gptr- "gsl_vector *")   b)
    (int   #{ gsl_vector_sub ( $a ,$b) #} )
)

(de gsl_vector_mul (   a  b )
    ((-gptr- "gsl_vector *")   a)
    ((-gptr- "gsl_vector *")   b)
    (int   #{ gsl_vector_mul ( $a ,$b) #} )
)

(de gsl_vector_div (   a  b )
    ((-gptr- "gsl_vector *")   a)
    ((-gptr- "gsl_vector *")   b)
    (int   #{ gsl_vector_div ( $a ,$b) #} )
)

(de gsl_vector_scale (   a  x )
    ((-gptr- "gsl_vector *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_scale ( $a ,$x) #} )
)

(de gsl_vector_add_constant (   a  x )
    ((-gptr- "gsl_vector *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_add_constant ( $a ,$x) #} )
)


(de gsl_vector_isnull (   v )
    ((-gptr- "gsl_vector *")   v)
    (int   #{ gsl_vector_isnull ( $v) #} )
)




(de gsl_vector_float_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_float_alloc ( $n) #} )        ;; gsl_vector_float* -> gptr
)

(de gsl_vector_float_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_float_calloc ( $n) #} )        ;; gsl_vector_float* -> gptr
)


(de gsl_vector_float_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_float *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_float_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_float* -> gptr
)


(de gsl_vector_float_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_float *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_float_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_float* -> gptr
)


(de gsl_vector_float_free (   v )
    ((-gptr- "gsl_vector_float *")   v)
    #{ gsl_vector_float_free ( $v) #} 
    ()
)




(de gsl_vector_float_view_array (   v  n  view)
    ((-gptr- "float *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_view  *") view)
    #{ {
    _gsl_vector_float_view tmp;
    tmp = gsl_vector_float_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_view ));
    } #} 
    ()
)


(de gsl_vector_float_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "float *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_view  *") view)
    #{ {
    _gsl_vector_float_view tmp;
    tmp = gsl_vector_float_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_view ));
    } #} 
    ()
)


(de gsl_vector_float_const_view_array (   v  n  view)
    ((-gptr- "float *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_const_view  *") view)
    #{ {
    _gsl_vector_float_const_view tmp;
    tmp = gsl_vector_float_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_const_view ));
    } #} 
    ()
)


(de gsl_vector_float_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "float *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_const_view  *") view)
    #{ {
    _gsl_vector_float_const_view tmp;
    tmp = gsl_vector_float_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_const_view ));
    } #} 
    ()
)


(de gsl_vector_float_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_float *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_view  *") view)
    #{ {
    _gsl_vector_float_view tmp;
    tmp = gsl_vector_float_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_view ));
    } #} 
    ()
)


(de gsl_vector_float_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_float *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_view  *") view)
    #{ {
    _gsl_vector_float_view tmp;
    tmp = gsl_vector_float_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_view ));
    } #} 
    ()
)


(de gsl_vector_float_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_float *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_const_view  *") view)
    #{ {
    _gsl_vector_float_const_view tmp;
    tmp = gsl_vector_float_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_const_view ));
    } #} 
    ()
)


(de gsl_vector_float_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_float *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_float_const_view  *") view)
    #{ {
    _gsl_vector_float_const_view tmp;
    tmp = gsl_vector_float_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_float_const_view ));
    } #} 
    ()
)




(de gsl_vector_float_get (   v  i )
    ((-gptr- "gsl_vector_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (float   #{ gsl_vector_float_get ( $v ,$i) #} )
)

(de gsl_vector_float_set (   v  i  x )
    ((-gptr- "gsl_vector_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-float-)  x)
    #{ gsl_vector_float_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_float_ptr (   v  i )
    ((-gptr- "gsl_vector_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_float_ptr ( $v ,$i) #} )        ;; float* -> gptr
)

(de gsl_vector_float_const_ptr (   v  i )
    ((-gptr- "gsl_vector_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_float_const_ptr ( $v ,$i) #} )        ;; const float* -> gptr
)


(de gsl_vector_float_set_zero (   v )
    ((-gptr- "gsl_vector_float *")   v)
    #{ gsl_vector_float_set_zero ( $v) #} 
    ()
)

(de gsl_vector_float_set_all (   v  x )
    ((-gptr- "gsl_vector_float *")   v)
    ((-float-)  x)
    #{ gsl_vector_float_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_float_set_basis (   v  i )
    ((-gptr- "gsl_vector_float *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_float_set_basis ( $v ,$i) #} )
)


(de gsl_vector_float_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_float *")   v)
    (int   #{ gsl_vector_float_fread ( $stream ,$v) #} )
)

(de gsl_vector_float_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_float *")   v)
    (int   #{ gsl_vector_float_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_float_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_float *")   v)
    (int   #{ gsl_vector_float_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_float_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_float *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_float_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_float_memcpy (   dest  src )
    ((-gptr- "gsl_vector_float *")   dest)
    ((-gptr- "gsl_vector_float *")   src)
    (int   #{ gsl_vector_float_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_float_reverse (   v )
    ((-gptr- "gsl_vector_float *")   v)
    (int   #{ gsl_vector_float_reverse ( $v) #} )
)


(de gsl_vector_float_swap (   v  w )
    ((-gptr- "gsl_vector_float *")   v)
    ((-gptr- "gsl_vector_float *")   w)
    (int   #{ gsl_vector_float_swap ( $v ,$w) #} )
)

(de gsl_vector_float_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_float *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_float_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_float_max (   v )
    ((-gptr- "gsl_vector_float *")   v)
    (float   #{ gsl_vector_float_max ( $v) #} )
)

(de gsl_vector_float_min (   v )
    ((-gptr- "gsl_vector_float *")   v)
    (float   #{ gsl_vector_float_min ( $v) #} )
)

(de gsl_vector_float_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_float *")   v)
    ((-gptr- "float *")   min_out)
    ((-gptr- "float *")   max_out)
    #{ gsl_vector_float_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_float_max_index (   v )
    ((-gptr- "gsl_vector_float *")   v)
    (int   #{ gsl_vector_float_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_float_min_index (   v )
    ((-gptr- "gsl_vector_float *")   v)
    (int   #{ gsl_vector_float_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_float_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_float *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_float_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_float_add (   a  b )
    ((-gptr- "gsl_vector_float *")   a)
    ((-gptr- "gsl_vector_float *")   b)
    (int   #{ gsl_vector_float_add ( $a ,$b) #} )
)

(de gsl_vector_float_sub (   a  b )
    ((-gptr- "gsl_vector_float *")   a)
    ((-gptr- "gsl_vector_float *")   b)
    (int   #{ gsl_vector_float_sub ( $a ,$b) #} )
)

(de gsl_vector_float_mul (   a  b )
    ((-gptr- "gsl_vector_float *")   a)
    ((-gptr- "gsl_vector_float *")   b)
    (int   #{ gsl_vector_float_mul ( $a ,$b) #} )
)

(de gsl_vector_float_div (   a  b )
    ((-gptr- "gsl_vector_float *")   a)
    ((-gptr- "gsl_vector_float *")   b)
    (int   #{ gsl_vector_float_div ( $a ,$b) #} )
)

(de gsl_vector_float_scale (   a  x )
    ((-gptr- "gsl_vector_float *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_float_scale ( $a ,$x) #} )
)

(de gsl_vector_float_add_constant (   a  x )
    ((-gptr- "gsl_vector_float *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_float_add_constant ( $a ,$x) #} )
)


(de gsl_vector_float_isnull (   v )
    ((-gptr- "gsl_vector_float *")   v)
    (int   #{ gsl_vector_float_isnull ( $v) #} )
)






(de gsl_vector_int_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_int_alloc ( $n) #} )        ;; gsl_vector_int* -> gptr
)

(de gsl_vector_int_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_int_calloc ( $n) #} )        ;; gsl_vector_int* -> gptr
)


(de gsl_vector_int_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_int *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_int_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_int* -> gptr
)


(de gsl_vector_int_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_int_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_int* -> gptr
)


(de gsl_vector_int_free (   v )
    ((-gptr- "gsl_vector_int *")   v)
    #{ gsl_vector_int_free ( $v) #} 
    ()
)




(de gsl_vector_int_view_array (   v  n  view)
    ((-gptr- "int *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_view  *") view)
    #{ {
    _gsl_vector_int_view tmp;
    tmp = gsl_vector_int_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_view ));
    } #} 
    ()
)


(de gsl_vector_int_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "int *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_view  *") view)
    #{ {
    _gsl_vector_int_view tmp;
    tmp = gsl_vector_int_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_view ));
    } #} 
    ()
)


(de gsl_vector_int_const_view_array (   v  n  view)
    ((-gptr- "int *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_const_view  *") view)
    #{ {
    _gsl_vector_int_const_view tmp;
    tmp = gsl_vector_int_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_const_view ));
    } #} 
    ()
)


(de gsl_vector_int_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "int *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_const_view  *") view)
    #{ {
    _gsl_vector_int_const_view tmp;
    tmp = gsl_vector_int_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_const_view ));
    } #} 
    ()
)


(de gsl_vector_int_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_int *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_view  *") view)
    #{ {
    _gsl_vector_int_view tmp;
    tmp = gsl_vector_int_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_view ));
    } #} 
    ()
)


(de gsl_vector_int_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_int *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_view  *") view)
    #{ {
    _gsl_vector_int_view tmp;
    tmp = gsl_vector_int_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_view ));
    } #} 
    ()
)


(de gsl_vector_int_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_int *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_const_view  *") view)
    #{ {
    _gsl_vector_int_const_view tmp;
    tmp = gsl_vector_int_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_const_view ));
    } #} 
    ()
)


(de gsl_vector_int_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_int *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_int_const_view  *") view)
    #{ {
    _gsl_vector_int_const_view tmp;
    tmp = gsl_vector_int_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_int_const_view ));
    } #} 
    ()
)




(de gsl_vector_int_get (   v  i )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int   #{ gsl_vector_int_get ( $v ,$i) #} )
)

(de gsl_vector_int_set (   v  i  x )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)
    #{ gsl_vector_int_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_int_ptr (   v  i )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_int_ptr ( $v ,$i) #} )        ;; int* -> gptr
)

(de gsl_vector_int_const_ptr (   v  i )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_int_const_ptr ( $v ,$i) #} )        ;; const int* -> gptr
)


(de gsl_vector_int_set_zero (   v )
    ((-gptr- "gsl_vector_int *")   v)
    #{ gsl_vector_int_set_zero ( $v) #} 
    ()
)

(de gsl_vector_int_set_all (   v  x )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  x)
    #{ gsl_vector_int_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_int_set_basis (   v  i )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_int_set_basis ( $v ,$i) #} )
)


(de gsl_vector_int_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_fread ( $stream ,$v) #} )
)

(de gsl_vector_int_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_int_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_int_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_int *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_int_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_int_memcpy (   dest  src )
    ((-gptr- "gsl_vector_int *")   dest)
    ((-gptr- "gsl_vector_int *")   src)
    (int   #{ gsl_vector_int_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_int_reverse (   v )
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_reverse ( $v) #} )
)


(de gsl_vector_int_swap (   v  w )
    ((-gptr- "gsl_vector_int *")   v)
    ((-gptr- "gsl_vector_int *")   w)
    (int   #{ gsl_vector_int_swap ( $v ,$w) #} )
)

(de gsl_vector_int_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_int *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_int_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_int_max (   v )
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_max ( $v) #} )
)

(de gsl_vector_int_min (   v )
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_min ( $v) #} )
)

(de gsl_vector_int_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_int *")   v)
    ((-gptr- "int *")   min_out)
    ((-gptr- "int *")   max_out)
    #{ gsl_vector_int_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_int_max_index (   v )
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_int_min_index (   v )
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_int_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_int *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_int_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_int_add (   a  b )
    ((-gptr- "gsl_vector_int *")   a)
    ((-gptr- "gsl_vector_int *")   b)
    (int   #{ gsl_vector_int_add ( $a ,$b) #} )
)

(de gsl_vector_int_sub (   a  b )
    ((-gptr- "gsl_vector_int *")   a)
    ((-gptr- "gsl_vector_int *")   b)
    (int   #{ gsl_vector_int_sub ( $a ,$b) #} )
)

(de gsl_vector_int_mul (   a  b )
    ((-gptr- "gsl_vector_int *")   a)
    ((-gptr- "gsl_vector_int *")   b)
    (int   #{ gsl_vector_int_mul ( $a ,$b) #} )
)

(de gsl_vector_int_div (   a  b )
    ((-gptr- "gsl_vector_int *")   a)
    ((-gptr- "gsl_vector_int *")   b)
    (int   #{ gsl_vector_int_div ( $a ,$b) #} )
)

(de gsl_vector_int_scale (   a  x )
    ((-gptr- "gsl_vector_int *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_int_scale ( $a ,$x) #} )
)

(de gsl_vector_int_add_constant (   a  x )
    ((-gptr- "gsl_vector_int *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_int_add_constant ( $a ,$x) #} )
)


(de gsl_vector_int_isnull (   v )
    ((-gptr- "gsl_vector_int *")   v)
    (int   #{ gsl_vector_int_isnull ( $v) #} )
)







(de gsl_vector_long_double_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_double_alloc ( $n) #} )        ;; gsl_vector_long_double* -> gptr
)

(de gsl_vector_long_double_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_double_calloc ( $n) #} )        ;; gsl_vector_long_double* -> gptr
)


(de gsl_vector_long_double_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_long_double *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_double_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_long_double* -> gptr
)


(de gsl_vector_long_double_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_double_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_long_double* -> gptr
)


(de gsl_vector_long_double_free (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    #{ gsl_vector_long_double_free ( $v) #} 
    ()
)




(de gsl_vector_long_double_view_array (   v  n  view)
    ((-gptr- "long double *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_view  *") view)
    #{ {
    _gsl_vector_long_double_view tmp;
    tmp = gsl_vector_long_double_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_long_double_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "long double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_view  *") view)
    #{ {
    _gsl_vector_long_double_view tmp;
    tmp = gsl_vector_long_double_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_long_double_const_view_array (   v  n  view)
    ((-gptr- "long double *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_const_view  *") view)
    #{ {
    _gsl_vector_long_double_const_view tmp;
    tmp = gsl_vector_long_double_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_const_view ));
    } #} 
    ()
)


(de gsl_vector_long_double_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "long double *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_const_view  *") view)
    #{ {
    _gsl_vector_long_double_const_view tmp;
    tmp = gsl_vector_long_double_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_const_view ));
    } #} 
    ()
)


(de gsl_vector_long_double_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_long_double *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_view  *") view)
    #{ {
    _gsl_vector_long_double_view tmp;
    tmp = gsl_vector_long_double_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_long_double_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_long_double *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_view  *") view)
    #{ {
    _gsl_vector_long_double_view tmp;
    tmp = gsl_vector_long_double_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_view ));
    } #} 
    ()
)


(de gsl_vector_long_double_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_long_double *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_const_view  *") view)
    #{ {
    _gsl_vector_long_double_const_view tmp;
    tmp = gsl_vector_long_double_const_subvector ( $v ,$i, $n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_const_view ));
    } #} 
    ()
)


(de gsl_vector_long_double_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_long_double *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_double_const_view  *") view)
    #{ {
    _gsl_vector_long_double_const_view tmp;
    tmp = gsl_vector_long_double_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_double_const_view ));
    } #} 
    ()
)




(de gsl_vector_long_double_get (   v  i )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (double   #{ gsl_vector_long_double_get ( $v ,$i) #} )            ;; long double -> double
)

(de gsl_vector_long_double_set (   v  i  x )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-double-)  x)                                 ;; long double -> double
    #{ gsl_vector_long_double_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_long_double_ptr (   v  i )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_double_ptr ( $v ,$i) #} )        ;; long double* -> gptr
)

(de gsl_vector_long_double_const_ptr (   v  i )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_double_const_ptr ( $v ,$i) #} )        ;; const long double* -> gptr
)


(de gsl_vector_long_double_set_zero (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    #{ gsl_vector_long_double_set_zero ( $v) #} 
    ()
)

(de gsl_vector_long_double_set_all (   v  x )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-double-)  x)                                   ;; long double -> double 
    #{ gsl_vector_long_double_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_long_double_set_basis (   v  i )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_long_double_set_basis ( $v ,$i) #} )
)


(de gsl_vector_long_double_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long_double *")   v)
    (int   #{ gsl_vector_long_double_fread ( $stream ,$v) #} )
)

(de gsl_vector_long_double_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long_double *")   v)
    (int   #{ gsl_vector_long_double_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_long_double_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long_double *")   v)
    (int   #{ gsl_vector_long_double_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_long_double_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_long_double_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_long_double_memcpy (   dest  src )
    ((-gptr- "gsl_vector_long_double *")   dest)
    ((-gptr- "gsl_vector_long_double *")   src)
    (int   #{ gsl_vector_long_double_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_long_double_reverse (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    (int   #{ gsl_vector_long_double_reverse ( $v) #} )
)


(de gsl_vector_long_double_swap (   v  w )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-gptr- "gsl_vector_long_double *")   w)
    (int   #{ gsl_vector_long_double_swap ( $v ,$w) #} )
)

(de gsl_vector_long_double_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_long_double_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_long_double_max (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    (double   #{ gsl_vector_long_double_max ( $v) #} )               ;; long double -> double 
)

(de gsl_vector_long_double_min (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    (double   #{ gsl_vector_long_double_min ( $v) #} )               ;; long double -> double
)

(de gsl_vector_long_double_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-gptr- "long double *")   min_out)
    ((-gptr- "long double *")   max_out)
    #{ gsl_vector_long_double_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_long_double_max_index (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    (int   #{ gsl_vector_long_double_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_long_double_min_index (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    (int   #{ gsl_vector_long_double_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_long_double_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_long_double *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_long_double_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_long_double_add (   a  b )
    ((-gptr- "gsl_vector_long_double *")   a)
    ((-gptr- "gsl_vector_long_double *")   b)
    (int   #{ gsl_vector_long_double_add ( $a ,$b) #} )
)

(de gsl_vector_long_double_sub (   a  b )
    ((-gptr- "gsl_vector_long_double *")   a)
    ((-gptr- "gsl_vector_long_double *")   b)
    (int   #{ gsl_vector_long_double_sub ( $a ,$b) #} )
)

(de gsl_vector_long_double_mul (   a  b )
    ((-gptr- "gsl_vector_long_double *")   a)
    ((-gptr- "gsl_vector_long_double *")   b)
    (int   #{ gsl_vector_long_double_mul ( $a ,$b) #} )
)

(de gsl_vector_long_double_div (   a  b )
    ((-gptr- "gsl_vector_long_double *")   a)
    ((-gptr- "gsl_vector_long_double *")   b)
    (int   #{ gsl_vector_long_double_div ( $a ,$b) #} )
)

(de gsl_vector_long_double_scale (   a  x )
    ((-gptr- "gsl_vector_long_double *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_long_double_scale ( $a ,$x) #} )
)

(de gsl_vector_long_double_add_constant (   a  x )
    ((-gptr- "gsl_vector_long_double *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_long_double_add_constant ( $a ,$x) #} )
)


(de gsl_vector_long_double_isnull (   v )
    ((-gptr- "gsl_vector_long_double *")   v)
    (int   #{ gsl_vector_long_double_isnull ( $v) #} )
)








(de gsl_vector_long_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_alloc ( $n) #} )        ;; gsl_vector_long* -> gptr
)

(de gsl_vector_long_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_calloc ( $n) #} )        ;; gsl_vector_long* -> gptr
)


(de gsl_vector_long_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_long *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_long* -> gptr
)


(de gsl_vector_long_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_long* -> gptr
)


(de gsl_vector_long_free (   v )
    ((-gptr- "gsl_vector_long *")   v)
    #{ gsl_vector_long_free ( $v) #} 
    ()
)




(de gsl_vector_long_view_array (   v  n  view)
    ((-gptr- "long *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_view  *") view)
    #{ {
    _gsl_vector_long_view tmp;
    tmp = gsl_vector_long_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_view ));
    } #} 
    ()
)


(de gsl_vector_long_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "long *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_view  *") view)
    #{ {
    _gsl_vector_long_view tmp;
    tmp = gsl_vector_long_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_view ));
    } #} 
    ()
)


(de gsl_vector_long_const_view_array (   v  n  view)
    ((-gptr- "long *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_const_view  *") view)
    #{ {
    _gsl_vector_long_const_view tmp;
    tmp = gsl_vector_long_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_const_view ));
    } #} 
    ()
)


(de gsl_vector_long_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "long *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_const_view  *") view)
    #{ {
    _gsl_vector_long_const_view tmp;
    tmp = gsl_vector_long_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_const_view ));
    } #} 
    ()
)


(de gsl_vector_long_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_long *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_view  *") view)
    #{ {
    _gsl_vector_long_view tmp;
    tmp = gsl_vector_long_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_view ));
    } #} 
    ()
)


(de gsl_vector_long_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_long *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_view  *") view)
    #{ {
    _gsl_vector_long_view tmp;
    tmp = gsl_vector_long_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_view ));
    } #} 
    ()
)


(de gsl_vector_long_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_long *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_const_view  *") view)
    #{ {
    _gsl_vector_long_const_view tmp;
    tmp = gsl_vector_long_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_const_view ));
    } #} 
    ()
)


(de gsl_vector_long_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_long *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_long_const_view  *") view)
    #{ {
    _gsl_vector_long_const_view tmp;
    tmp = gsl_vector_long_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_long_const_view ));
    } #} 
    ()
)




(de gsl_vector_long_get (   v  i )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int   #{ gsl_vector_long_get ( $v ,$i) #} )                 ;; long -> int
)

(de gsl_vector_long_set (   v  i  x )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)                                  ;; long -> int
    #{ gsl_vector_long_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_long_ptr (   v  i )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_ptr ( $v ,$i) #} )        ;; long* -> gptr
)

(de gsl_vector_long_const_ptr (   v  i )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_long_const_ptr ( $v ,$i) #} )        ;; const long* -> gptr
)


(de gsl_vector_long_set_zero (   v )
    ((-gptr- "gsl_vector_long *")   v)
    #{ gsl_vector_long_set_zero ( $v) #} 
    ()
)

(de gsl_vector_long_set_all (   v  x )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  x)                                ;; long -> int
    #{ gsl_vector_long_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_long_set_basis (   v  i )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_long_set_basis ( $v ,$i) #} )
)


(de gsl_vector_long_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_fread ( $stream ,$v) #} )
)

(de gsl_vector_long_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_long_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_long_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_long *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_long_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_long_memcpy (   dest  src )
    ((-gptr- "gsl_vector_long *")   dest)
    ((-gptr- "gsl_vector_long *")   src)
    (int   #{ gsl_vector_long_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_long_reverse (   v )
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_reverse ( $v) #} )
)


(de gsl_vector_long_swap (   v  w )
    ((-gptr- "gsl_vector_long *")   v)
    ((-gptr- "gsl_vector_long *")   w)
    (int   #{ gsl_vector_long_swap ( $v ,$w) #} )
)

(de gsl_vector_long_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_long *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_long_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_long_max (   v )
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_max ( $v) #} )                  ;; long -> int
)

(de gsl_vector_long_min (   v )
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_min ( $v) #} )                  ;; long -> int
)

(de gsl_vector_long_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_long *")   v)
    ((-gptr- "long *")   min_out)
    ((-gptr- "long *")   max_out)
    #{ gsl_vector_long_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_long_max_index (   v )
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_long_min_index (   v )
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_long_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_long *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_long_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_long_add (   a  b )
    ((-gptr- "gsl_vector_long *")   a)
    ((-gptr- "gsl_vector_long *")   b)
    (int   #{ gsl_vector_long_add ( $a ,$b) #} )
)

(de gsl_vector_long_sub (   a  b )
    ((-gptr- "gsl_vector_long *")   a)
    ((-gptr- "gsl_vector_long *")   b)
    (int   #{ gsl_vector_long_sub ( $a ,$b) #} )
)

(de gsl_vector_long_mul (   a  b )
    ((-gptr- "gsl_vector_long *")   a)
    ((-gptr- "gsl_vector_long *")   b)
    (int   #{ gsl_vector_long_mul ( $a ,$b) #} )
)

(de gsl_vector_long_div (   a  b )
    ((-gptr- "gsl_vector_long *")   a)
    ((-gptr- "gsl_vector_long *")   b)
    (int   #{ gsl_vector_long_div ( $a ,$b) #} )
)

(de gsl_vector_long_scale (   a  x )
    ((-gptr- "gsl_vector_long *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_long_scale ( $a ,$x) #} )
)

(de gsl_vector_long_add_constant (   a  x )
    ((-gptr- "gsl_vector_long *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_long_add_constant ( $a ,$x) #} )
)


(de gsl_vector_long_isnull (   v )
    ((-gptr- "gsl_vector_long *")   v)
    (int   #{ gsl_vector_long_isnull ( $v) #} )
)







(de gsl_vector_short_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_short_alloc ( $n) #} )        ;; gsl_vector_short* -> gptr
)

(de gsl_vector_short_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_short_calloc ( $n) #} )        ;; gsl_vector_short* -> gptr
)


(de gsl_vector_short_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_short *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_short_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_short* -> gptr
)


(de gsl_vector_short_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_short_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_short* -> gptr
)


(de gsl_vector_short_free (   v )
    ((-gptr- "gsl_vector_short *")   v)
    #{ gsl_vector_short_free ( $v) #} 
    ()
)




(de gsl_vector_short_view_array (   v  n  view)
    ((-gptr- "short *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_view  *") view)
    #{ {
    _gsl_vector_short_view tmp;
    tmp = gsl_vector_short_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_view ));
    } #} 
    ()
)


(de gsl_vector_short_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "short *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_view  *") view)
    #{ {
    _gsl_vector_short_view tmp;
    tmp = gsl_vector_short_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_view ));
    } #} 
    ()
)


(de gsl_vector_short_const_view_array (   v  n  view)
    ((-gptr- "short *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_const_view  *") view)
    #{ {
    _gsl_vector_short_const_view tmp;
    tmp = gsl_vector_short_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_const_view ));
    } #} 
    ()
)


(de gsl_vector_short_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "short *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_const_view  *") view)
    #{ {
    _gsl_vector_short_const_view tmp;
    tmp = gsl_vector_short_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_const_view ));
    } #} 
    ()
)


(de gsl_vector_short_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_short *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_view  *") view)
    #{ {
    _gsl_vector_short_view tmp;
    tmp = gsl_vector_short_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_view ));
    } #} 
    ()
)


(de gsl_vector_short_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_short *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_view  *") view)
    #{ {
    _gsl_vector_short_view tmp;
    tmp = gsl_vector_short_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_view ));
    } #} 
    ()
)


(de gsl_vector_short_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_short *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_const_view  *") view)
    #{ {
    _gsl_vector_short_const_view tmp;
    tmp = gsl_vector_short_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_const_view ));
    } #} 
    ()
)


(de gsl_vector_short_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_short *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_short_const_view  *") view)
    #{ {
    _gsl_vector_short_const_view tmp;
    tmp = gsl_vector_short_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_short_const_view ));
    } #} 
    ()
)




(de gsl_vector_short_get (   v  i )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int   #{ gsl_vector_short_get ( $v ,$i) #} )            ;; short -> int
)

(de gsl_vector_short_set (   v  i  x )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)                                  ;; short -> int
    #{ gsl_vector_short_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_short_ptr (   v  i )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_short_ptr ( $v ,$i) #} )        ;; short* -> gptr
)

(de gsl_vector_short_const_ptr (   v  i )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_short_const_ptr ( $v ,$i) #} )        ;; const short* -> gptr
)


(de gsl_vector_short_set_zero (   v )
    ((-gptr- "gsl_vector_short *")   v)
    #{ gsl_vector_short_set_zero ( $v) #} 
    ()
)

(de gsl_vector_short_set_all (   v  x )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  x)                             ;; short -> int
    #{ gsl_vector_short_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_short_set_basis (   v  i )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_short_set_basis ( $v ,$i) #} )
)


(de gsl_vector_short_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_fread ( $stream ,$v) #} )
)

(de gsl_vector_short_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_short_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_short_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_short *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_short_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_short_memcpy (   dest  src )
    ((-gptr- "gsl_vector_short *")   dest)
    ((-gptr- "gsl_vector_short *")   src)
    (int   #{ gsl_vector_short_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_short_reverse (   v )
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_reverse ( $v) #} )
)


(de gsl_vector_short_swap (   v  w )
    ((-gptr- "gsl_vector_short *")   v)
    ((-gptr- "gsl_vector_short *")   w)
    (int   #{ gsl_vector_short_swap ( $v ,$w) #} )
)

(de gsl_vector_short_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_short *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_short_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_short_max (   v )
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_max ( $v) #} )         ;; short -> int
)

(de gsl_vector_short_min (   v )
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_min ( $v) #} )         ;; short -> int
)

(de gsl_vector_short_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_short *")   v)
    ((-gptr- "short *")   min_out)
    ((-gptr- "short *")   max_out)
    #{ gsl_vector_short_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_short_max_index (   v )
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_short_min_index (   v )
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_short_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_short *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_short_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_short_add (   a  b )
    ((-gptr- "gsl_vector_short *")   a)
    ((-gptr- "gsl_vector_short *")   b)
    (int   #{ gsl_vector_short_add ( $a ,$b) #} )
)

(de gsl_vector_short_sub (   a  b )
    ((-gptr- "gsl_vector_short *")   a)
    ((-gptr- "gsl_vector_short *")   b)
    (int   #{ gsl_vector_short_sub ( $a ,$b) #} )
)

(de gsl_vector_short_mul (   a  b )
    ((-gptr- "gsl_vector_short *")   a)
    ((-gptr- "gsl_vector_short *")   b)
    (int   #{ gsl_vector_short_mul ( $a ,$b) #} )
)

(de gsl_vector_short_div (   a  b )
    ((-gptr- "gsl_vector_short *")   a)
    ((-gptr- "gsl_vector_short *")   b)
    (int   #{ gsl_vector_short_div ( $a ,$b) #} )
)

(de gsl_vector_short_scale (   a  x )
    ((-gptr- "gsl_vector_short *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_short_scale ( $a ,$x) #} )
)

(de gsl_vector_short_add_constant (   a  x )
    ((-gptr- "gsl_vector_short *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_short_add_constant ( $a ,$x) #} )
)


(de gsl_vector_short_isnull (   v )
    ((-gptr- "gsl_vector_short *")   v)
    (int   #{ gsl_vector_short_isnull ( $v) #} )
)







(de gsl_vector_uchar_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uchar_alloc ( $n) #} )        ;; gsl_vector_uchar* -> gptr
)

(de gsl_vector_uchar_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uchar_calloc ( $n) #} )        ;; gsl_vector_uchar* -> gptr
)


(de gsl_vector_uchar_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_uchar *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uchar_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_uchar* -> gptr
)


(de gsl_vector_uchar_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uchar_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_uchar* -> gptr
)


(de gsl_vector_uchar_free (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    #{ gsl_vector_uchar_free ( $v) #} 
    ()
)




(de gsl_vector_uchar_view_array (   v  n  view)
    ((-gptr- "unsigned char *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_view  *") view)
    #{ {
    _gsl_vector_uchar_view tmp;
    tmp = gsl_vector_uchar_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_view ));
    } #} 
    ()
)


(de gsl_vector_uchar_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned char *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_view  *") view)
    #{ {
    _gsl_vector_uchar_view tmp;
    tmp = gsl_vector_uchar_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_view ));
    } #} 
    ()
)


(de gsl_vector_uchar_const_view_array (   v  n  view)
    ((-gptr- "unsigned char *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_const_view  *") view)
    #{ {
    _gsl_vector_uchar_const_view tmp;
    tmp = gsl_vector_uchar_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_const_view ));
    } #} 
    ()
)


(de gsl_vector_uchar_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned char *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_const_view  *") view)
    #{ {
    _gsl_vector_uchar_const_view tmp;
    tmp = gsl_vector_uchar_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_const_view ));
    } #} 
    ()
)


(de gsl_vector_uchar_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_uchar *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_view  *") view)
    #{ {
    _gsl_vector_uchar_view tmp;
    tmp = gsl_vector_uchar_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_view ));
    } #} 
    ()
)


(de gsl_vector_uchar_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_uchar *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_view  *") view)
    #{ {
    _gsl_vector_uchar_view tmp;
    tmp = gsl_vector_uchar_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_view ));
    } #} 
    ()
)


(de gsl_vector_uchar_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_uchar *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_const_view  *") view)
    #{ {
    _gsl_vector_uchar_const_view tmp;
    tmp = gsl_vector_uchar_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_const_view ));
    } #} 
    ()
)


(de gsl_vector_uchar_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_uchar *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uchar_const_view  *") view)
    #{ {
    _gsl_vector_uchar_const_view tmp;
    tmp = gsl_vector_uchar_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uchar_const_view ));
    } #} 
    ()
)




(de gsl_vector_uchar_get (   v  i )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int   #{ gsl_vector_uchar_get ( $v ,$i) #} )          ;; unsigned char -> int
)

(de gsl_vector_uchar_set (   v  i  x )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)                             ;; unsigned char -> int
    #{ gsl_vector_uchar_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_uchar_ptr (   v  i )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uchar_ptr ( $v ,$i) #} )        ;; unsigned char* -> gptr
)

(de gsl_vector_uchar_const_ptr (   v  i )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uchar_const_ptr ( $v ,$i) #} )        ;; const unsigned char* -> gptr
)


(de gsl_vector_uchar_set_zero (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    #{ gsl_vector_uchar_set_zero ( $v) #} 
    ()
)

(de gsl_vector_uchar_set_all (   v  x )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  x)                              ;; unsigned char -> int
    #{ gsl_vector_uchar_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_uchar_set_basis (   v  i )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_uchar_set_basis ( $v ,$i) #} )
)


(de gsl_vector_uchar_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_fread ( $stream ,$v) #} )
)

(de gsl_vector_uchar_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_uchar_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_uchar_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_uchar_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_uchar_memcpy (   dest  src )
    ((-gptr- "gsl_vector_uchar *")   dest)
    ((-gptr- "gsl_vector_uchar *")   src)
    (int   #{ gsl_vector_uchar_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_uchar_reverse (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_reverse ( $v) #} )
)


(de gsl_vector_uchar_swap (   v  w )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-gptr- "gsl_vector_uchar *")   w)
    (int   #{ gsl_vector_uchar_swap ( $v ,$w) #} )
)

(de gsl_vector_uchar_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_uchar_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_uchar_max (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_max ( $v) #} )       ;; unsigned char -> int
)

(de gsl_vector_uchar_min (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_min ( $v) #} )        ;; unsigned char -> int
)

(de gsl_vector_uchar_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-gptr- "unsigned char *")   min_out)
    ((-gptr- "unsigned char *")   max_out)
    #{ gsl_vector_uchar_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_uchar_max_index (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_uchar_min_index (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_uchar_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_uchar *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_uchar_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_uchar_add (   a  b )
    ((-gptr- "gsl_vector_uchar *")   a)
    ((-gptr- "gsl_vector_uchar *")   b)
    (int   #{ gsl_vector_uchar_add ( $a ,$b) #} )
)

(de gsl_vector_uchar_sub (   a  b )
    ((-gptr- "gsl_vector_uchar *")   a)
    ((-gptr- "gsl_vector_uchar *")   b)
    (int   #{ gsl_vector_uchar_sub ( $a ,$b) #} )
)

(de gsl_vector_uchar_mul (   a  b )
    ((-gptr- "gsl_vector_uchar *")   a)
    ((-gptr- "gsl_vector_uchar *")   b)
    (int   #{ gsl_vector_uchar_mul ( $a ,$b) #} )
)

(de gsl_vector_uchar_div (   a  b )
    ((-gptr- "gsl_vector_uchar *")   a)
    ((-gptr- "gsl_vector_uchar *")   b)
    (int   #{ gsl_vector_uchar_div ( $a ,$b) #} )
)

(de gsl_vector_uchar_scale (   a  x )
    ((-gptr- "gsl_vector_uchar *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_uchar_scale ( $a ,$x) #} )
)

(de gsl_vector_uchar_add_constant (   a  x )
    ((-gptr- "gsl_vector_uchar *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_uchar_add_constant ( $a ,$x) #} )
)


(de gsl_vector_uchar_isnull (   v )
    ((-gptr- "gsl_vector_uchar *")   v)
    (int   #{ gsl_vector_uchar_isnull ( $v) #} )
)









(de gsl_vector_uint_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uint_alloc ( $n) #} )        ;; gsl_vector_uint* -> gptr
)

(de gsl_vector_uint_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uint_calloc ( $n) #} )        ;; gsl_vector_uint* -> gptr
)


(de gsl_vector_uint_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_uint *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uint_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_uint* -> gptr
)


(de gsl_vector_uint_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uint_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_uint* -> gptr
)


(de gsl_vector_uint_free (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    #{ gsl_vector_uint_free ( $v) #} 
    ()
)




(de gsl_vector_uint_view_array (   v  n  view)
    ((-gptr- "unsigned int *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_view  *") view)
    #{ {
    _gsl_vector_uint_view tmp;
    tmp = gsl_vector_uint_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_view ));
    } #} 
    ()
)


(de gsl_vector_uint_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned int *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_view  *") view)
    #{ {
    _gsl_vector_uint_view tmp;
    tmp = gsl_vector_uint_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_view ));
    } #} 
    ()
)


(de gsl_vector_uint_const_view_array (   v  n  view)
    ((-gptr- "unsigned int *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_const_view  *") view)
    #{ {
    _gsl_vector_uint_const_view tmp;
    tmp = gsl_vector_uint_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_const_view ));
    } #} 
    ()
)


(de gsl_vector_uint_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned int *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_const_view  *") view)
    #{ {
    _gsl_vector_uint_const_view tmp;
    tmp = gsl_vector_uint_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_const_view ));
    } #} 
    ()
)


(de gsl_vector_uint_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_uint *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_view  *") view)
    #{ {
    _gsl_vector_uint_view tmp;
    tmp = gsl_vector_uint_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_view ));
    } #} 
    ()
)


(de gsl_vector_uint_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_uint *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_view  *") view)
    #{ {
    _gsl_vector_uint_view tmp;
    tmp = gsl_vector_uint_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_view ));
    } #} 
    ()
)


(de gsl_vector_uint_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_uint *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_const_view  *") view)
    #{ {
    _gsl_vector_uint_const_view tmp;
    tmp = gsl_vector_uint_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_const_view ));
    } #} 
    ()
)


(de gsl_vector_uint_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_uint *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_uint_const_view  *") view)
    #{ {
    _gsl_vector_uint_const_view tmp;
    tmp = gsl_vector_uint_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_uint_const_view ));
    } #} 
    ()
)




(de gsl_vector_uint_get (   v  i )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int   #{ gsl_vector_uint_get ( $v ,$i) #} )          ;; unsigned int -> int
)

(de gsl_vector_uint_set (   v  i  x )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)                               ;; unsigned int -> int
    #{ gsl_vector_uint_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_uint_ptr (   v  i )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uint_ptr ( $v ,$i) #} )        ;; unsigned int* -> gptr
)

(de gsl_vector_uint_const_ptr (   v  i )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_uint_const_ptr ( $v ,$i) #} )        ;; const unsigned int* -> gptr
)


(de gsl_vector_uint_set_zero (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    #{ gsl_vector_uint_set_zero ( $v) #} 
    ()
)

(de gsl_vector_uint_set_all (   v  x )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  x)                               ;; unsigned int -> int
    #{ gsl_vector_uint_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_uint_set_basis (   v  i )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_uint_set_basis ( $v ,$i) #} )
)


(de gsl_vector_uint_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_fread ( $stream ,$v) #} )
)

(de gsl_vector_uint_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_uint_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_uint_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_uint *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_uint_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_uint_memcpy (   dest  src )
    ((-gptr- "gsl_vector_uint *")   dest)
    ((-gptr- "gsl_vector_uint *")   src)
    (int   #{ gsl_vector_uint_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_uint_reverse (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_reverse ( $v) #} )
)


(de gsl_vector_uint_swap (   v  w )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-gptr- "gsl_vector_uint *")   w)
    (int   #{ gsl_vector_uint_swap ( $v ,$w) #} )
)

(de gsl_vector_uint_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_uint_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_uint_max (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_max ( $v) #} )          ;; unsigned int -> int
)

(de gsl_vector_uint_min (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_min ( $v) #} )             ;; unsigned int -> int
)

(de gsl_vector_uint_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-gptr- "unsigned int *")   min_out)
    ((-gptr- "unsigned int *")   max_out)
    #{ gsl_vector_uint_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_uint_max_index (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_uint_min_index (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_uint_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_uint *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_uint_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_uint_add (   a  b )
    ((-gptr- "gsl_vector_uint *")   a)
    ((-gptr- "gsl_vector_uint *")   b)
    (int   #{ gsl_vector_uint_add ( $a ,$b) #} )
)

(de gsl_vector_uint_sub (   a  b )
    ((-gptr- "gsl_vector_uint *")   a)
    ((-gptr- "gsl_vector_uint *")   b)
    (int   #{ gsl_vector_uint_sub ( $a ,$b) #} )
)

(de gsl_vector_uint_mul (   a  b )
    ((-gptr- "gsl_vector_uint *")   a)
    ((-gptr- "gsl_vector_uint *")   b)
    (int   #{ gsl_vector_uint_mul ( $a ,$b) #} )
)

(de gsl_vector_uint_div (   a  b )
    ((-gptr- "gsl_vector_uint *")   a)
    ((-gptr- "gsl_vector_uint *")   b)
    (int   #{ gsl_vector_uint_div ( $a ,$b) #} )
)

(de gsl_vector_uint_scale (   a  x )
    ((-gptr- "gsl_vector_uint *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_uint_scale ( $a ,$x) #} )
)

(de gsl_vector_uint_add_constant (   a  x )
    ((-gptr- "gsl_vector_uint *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_uint_add_constant ( $a ,$x) #} )
)


(de gsl_vector_uint_isnull (   v )
    ((-gptr- "gsl_vector_uint *")   v)
    (int   #{ gsl_vector_uint_isnull ( $v) #} )
)









(de gsl_vector_ulong_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ulong_alloc ( $n) #} )        ;; gsl_vector_ulong* -> gptr
)

(de gsl_vector_ulong_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ulong_calloc ( $n) #} )        ;; gsl_vector_ulong* -> gptr
)


(de gsl_vector_ulong_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_ulong *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ulong_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_ulong* -> gptr
)


(de gsl_vector_ulong_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ulong_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_ulong* -> gptr
)


(de gsl_vector_ulong_free (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    #{ gsl_vector_ulong_free ( $v) #} 
    ()
)




(de gsl_vector_ulong_view_array (   v  n  view)
    ((-gptr- "unsigned long *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_view  *") view)
    #{ {
    _gsl_vector_ulong_view tmp;
    tmp = gsl_vector_ulong_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_view ));
    } #} 
    ()
)


(de gsl_vector_ulong_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned long *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_view  *") view)
    #{ {
    _gsl_vector_ulong_view tmp;
    tmp = gsl_vector_ulong_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_view ));
    } #} 
    ()
)


(de gsl_vector_ulong_const_view_array (   v  n  view)
    ((-gptr- "unsigned long *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_const_view  *") view)
    #{ {
    _gsl_vector_ulong_const_view tmp;
    tmp = gsl_vector_ulong_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_const_view ));
    } #} 
    ()
)


(de gsl_vector_ulong_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned long *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_const_view  *") view)
    #{ {
    _gsl_vector_ulong_const_view tmp;
    tmp = gsl_vector_ulong_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_const_view ));
    } #} 
    ()
)


(de gsl_vector_ulong_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_ulong *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_view  *") view)
    #{ {
    _gsl_vector_ulong_view tmp;
    tmp = gsl_vector_ulong_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_view ));
    } #} 
    ()
)


(de gsl_vector_ulong_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_ulong *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_view  *") view)
    #{ {
    _gsl_vector_ulong_view tmp;
    tmp = gsl_vector_ulong_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_view ));
    } #} 
    ()
)


(de gsl_vector_ulong_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_ulong *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_const_view  *") view)
    #{ {
    _gsl_vector_ulong_const_view tmp;
    tmp = gsl_vector_ulong_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_const_view ));
    } #} 
    ()
)


(de gsl_vector_ulong_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_ulong *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ulong_const_view  *") view)
    #{ {
    _gsl_vector_ulong_const_view tmp;
    tmp = gsl_vector_ulong_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ulong_const_view ));
    } #} 
    ()
)




(de gsl_vector_ulong_get (   v  i )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int  #{ gsl_vector_ulong_get ( $v ,$i) #} )          ;; unsigned long  -> int
)

(de gsl_vector_ulong_set (   v  i  x )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)                                   ;; unsigned long -> int
    #{ gsl_vector_ulong_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_ulong_ptr (   v  i )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ulong_ptr ( $v ,$i) #} )        ;; unsigned long* -> gptr
)

(de gsl_vector_ulong_const_ptr (   v  i )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ulong_const_ptr ( $v ,$i) #} )        ;; const unsigned long* -> gptr
)


(de gsl_vector_ulong_set_zero (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    #{ gsl_vector_ulong_set_zero ( $v) #} 
    ()
)

(de gsl_vector_ulong_set_all (   v  x )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  x)                               ;; unsigned long -> int
    #{ gsl_vector_ulong_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_ulong_set_basis (   v  i )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_ulong_set_basis ( $v ,$i) #} )
)


(de gsl_vector_ulong_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_fread ( $stream ,$v) #} )
)

(de gsl_vector_ulong_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_ulong_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_ulong_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_ulong_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_ulong_memcpy (   dest  src )
    ((-gptr- "gsl_vector_ulong *")   dest)
    ((-gptr- "gsl_vector_ulong *")   src)
    (int   #{ gsl_vector_ulong_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_ulong_reverse (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_reverse ( $v) #} )
)


(de gsl_vector_ulong_swap (   v  w )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-gptr- "gsl_vector_ulong *")   w)
    (int   #{ gsl_vector_ulong_swap ( $v ,$w) #} )
)

(de gsl_vector_ulong_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_ulong_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_ulong_max (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_max ( $v) #} )        ;; unsigned long  -> int
)

(de gsl_vector_ulong_min (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    (int  #{ gsl_vector_ulong_min ( $v) #} )         ;; unsigned long  -> int
)

(de gsl_vector_ulong_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-gptr- "unsigned long *")   min_out)
    ((-gptr- "unsigned long *")   max_out)
    #{ gsl_vector_ulong_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_ulong_max_index (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_ulong_min_index (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_ulong_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_ulong *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_ulong_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_ulong_add (   a  b )
    ((-gptr- "gsl_vector_ulong *")   a)
    ((-gptr- "gsl_vector_ulong *")   b)
    (int   #{ gsl_vector_ulong_add ( $a ,$b) #} )
)

(de gsl_vector_ulong_sub (   a  b )
    ((-gptr- "gsl_vector_ulong *")   a)
    ((-gptr- "gsl_vector_ulong *")   b)
    (int   #{ gsl_vector_ulong_sub ( $a ,$b) #} )
)

(de gsl_vector_ulong_mul (   a  b )
    ((-gptr- "gsl_vector_ulong *")   a)
    ((-gptr- "gsl_vector_ulong *")   b)
    (int   #{ gsl_vector_ulong_mul ( $a ,$b) #} )
)

(de gsl_vector_ulong_div (   a  b )
    ((-gptr- "gsl_vector_ulong *")   a)
    ((-gptr- "gsl_vector_ulong *")   b)
    (int   #{ gsl_vector_ulong_div ( $a ,$b) #} )
)

(de gsl_vector_ulong_scale (   a  x )
    ((-gptr- "gsl_vector_ulong *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_ulong_scale ( $a ,$x) #} )
)

(de gsl_vector_ulong_add_constant (   a  x )
    ((-gptr- "gsl_vector_ulong *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_ulong_add_constant ( $a ,$x) #} )
)


(de gsl_vector_ulong_isnull (   v )
    ((-gptr- "gsl_vector_ulong *")   v)
    (int   #{ gsl_vector_ulong_isnull ( $v) #} )
)








(de gsl_vector_ushort_alloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ushort_alloc ( $n) #} )        ;; gsl_vector_ushort* -> gptr
)

(de gsl_vector_ushort_calloc (   n )
    ((-int-)  n)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ushort_calloc ( $n) #} )        ;; gsl_vector_ushort* -> gptr
)


(de gsl_vector_ushort_alloc_from_block (   b  offset  n  stride )
    ((-gptr- "gsl_block_ushort *")   b)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ushort_alloc_from_block ( $b ,$offset ,$n ,$stride) #} )        ;; gsl_vector_ushort* -> gptr
)


(de gsl_vector_ushort_alloc_from_vector (   v  offset  n  stride )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  offset)                             ;; const size_t -> int
    ((-int-)  n)                             ;; const size_t -> int
    ((-int-)  stride)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ushort_alloc_from_vector ( $v ,$offset ,$n ,$stride) #} )        ;; gsl_vector_ushort* -> gptr
)


(de gsl_vector_ushort_free (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    #{ gsl_vector_ushort_free ( $v) #} 
    ()
)




(de gsl_vector_ushort_view_array (   v  n  view)
    ((-gptr- "unsigned short *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_view  *") view)
    #{ {
    _gsl_vector_ushort_view tmp;
    tmp = gsl_vector_ushort_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_view ));
    } #} 
    ()
)


(de gsl_vector_ushort_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned short *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_view  *") view)
    #{ {
    _gsl_vector_ushort_view tmp;
    tmp = gsl_vector_ushort_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_view ));
    } #} 
    ()
)


(de gsl_vector_ushort_const_view_array (   v  n  view)
    ((-gptr- "unsigned short *")  v)
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_const_view  *") view)
    #{ {
    _gsl_vector_ushort_const_view tmp;
    tmp = gsl_vector_ushort_const_view_array ( $v ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_const_view ));
    } #} 
    ()
)


(de gsl_vector_ushort_const_view_array_with_stride (   base  stride  n  view)
    ((-gptr- "unsigned short *")  base)
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_const_view  *") view)
    #{ {
    _gsl_vector_ushort_const_view tmp;
    tmp = gsl_vector_ushort_const_view_array_with_stride ( $base ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_const_view ));
    } #} 
    ()
)


(de gsl_vector_ushort_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_ushort *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_view  *") view)
    #{ {
    _gsl_vector_ushort_view tmp;
    tmp = gsl_vector_ushort_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_view ));
    } #} 
    ()
)


(de gsl_vector_ushort_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_ushort *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_view  *") view)
    #{ {
    _gsl_vector_ushort_view tmp;
    tmp = gsl_vector_ushort_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_view ));
    } #} 
    ()
)


(de gsl_vector_ushort_const_subvector (   v  i  n  view)
    ((-gptr- "gsl_vector_ushort *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_const_view  *") view)
    #{ {
    _gsl_vector_ushort_const_view tmp;
    tmp = gsl_vector_ushort_const_subvector ( $v ,$i ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_const_view ));
    } #} 
    ()
)


(de gsl_vector_ushort_const_subvector_with_stride (   v  i  stride  n  view)
    ((-gptr- "gsl_vector_ushort *")  v)
    ((-int-)  i)                                ;; size_t -> int
    ((-int-)  stride)                                ;; size_t -> int
    ((-int-)  n)                                ;; size_t -> int
    ((-gptr- "_gsl_vector_ushort_const_view  *") view)
    #{ {
    _gsl_vector_ushort_const_view tmp;
    tmp = gsl_vector_ushort_const_subvector_with_stride ( $v ,$i ,$stride ,$n);
    memcpy($view,&tmp,sizeof(_gsl_vector_ushort_const_view ));
    } #} 
    ()
)




(de gsl_vector_ushort_get (   v  i )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (int  #{ gsl_vector_ushort_get ( $v ,$i) #} )        ;; unsigned short   -> int
)

(de gsl_vector_ushort_set (   v  i  x )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  x)                                   ;; unsigned short -> int 
    #{ gsl_vector_ushort_set ( $v ,$i ,$x) #} 
    ()
)


(de gsl_vector_ushort_ptr (   v  i )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ushort_ptr ( $v ,$i) #} )        ;; unsigned short* -> gptr
)

(de gsl_vector_ushort_const_ptr (   v  i )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    (gptr #{ gsl_vector_ushort_const_ptr ( $v ,$i) #} )        ;; const unsigned short* -> gptr
)


(de gsl_vector_ushort_set_zero (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    #{ gsl_vector_ushort_set_zero ( $v) #} 
    ()
)

(de gsl_vector_ushort_set_all (   v  x )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  x)                               ;; unsigned short -> int
    #{ gsl_vector_ushort_set_all ( $v ,$x) #} 
    ()
)

(de gsl_vector_ushort_set_basis (   v  i )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  i)                                ;; size_t -> int
    (int   #{ gsl_vector_ushort_set_basis ( $v ,$i) #} )
)


(de gsl_vector_ushort_fread (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ushort *")   v)
    (int   #{ gsl_vector_ushort_fread ( $stream ,$v) #} )
)

(de gsl_vector_ushort_fwrite (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ushort *")   v)
    (int   #{ gsl_vector_ushort_fwrite ( $stream ,$v) #} )
)

(de gsl_vector_ushort_fscanf (   stream  v )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ushort *")   v)
    (int   #{ gsl_vector_ushort_fscanf ( $stream ,$v) #} )
)

(de gsl_vector_ushort_fprintf (   stream  v  format )
    ((-gptr- "FILE *")   stream)
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-gptr- "char *")  format)
    (int   #{ gsl_vector_ushort_fprintf ( $stream ,$v ,$format) #} )
)


(de gsl_vector_ushort_memcpy (   dest  src )
    ((-gptr- "gsl_vector_ushort *")   dest)
    ((-gptr- "gsl_vector_ushort *")   src)
    (int   #{ gsl_vector_ushort_memcpy ( $dest ,$src) #} )
)


(de gsl_vector_ushort_reverse (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    (int   #{ gsl_vector_ushort_reverse ( $v) #} )
)


(de gsl_vector_ushort_swap (   v  w )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-gptr- "gsl_vector_ushort *")   w)
    (int   #{ gsl_vector_ushort_swap ( $v ,$w) #} )
)

(de gsl_vector_ushort_swap_elements (   v  i  j )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-int-)  i)                             ;; const size_t -> int
    ((-int-)  j)                             ;; const size_t -> int
    (int   #{ gsl_vector_ushort_swap_elements ( $v ,$i ,$j) #} )
)


(de gsl_vector_ushort_max (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    (int  #{ gsl_vector_ushort_max ( $v) #} )         ;; unsigned short  -> int
)

(de gsl_vector_ushort_min (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    (int  #{ gsl_vector_ushort_min ( $v) #} )           ;; unsigned short  -> int
)

(de gsl_vector_ushort_minmax (   v  min_out  max_out )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-gptr- "unsigned short *")   min_out)
    ((-gptr- "unsigned short *")   max_out)
    #{ gsl_vector_ushort_minmax ( $v ,$min_out ,$max_out) #} 
    ()
)


(de gsl_vector_ushort_max_index (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    (int   #{ gsl_vector_ushort_max_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_ushort_min_index (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    (int   #{ gsl_vector_ushort_min_index ( $v) #} )              ;; size_t -> int
)

(de gsl_vector_ushort_minmax_index (   v  imin  imax )
    ((-gptr- "gsl_vector_ushort *")   v)
    ((-gptr- "size_t *")   imin)
    ((-gptr- "size_t *")   imax)
    #{ gsl_vector_ushort_minmax_index ( $v ,$imin ,$imax) #} 
    ()
)


(de gsl_vector_ushort_add (   a  b )
    ((-gptr- "gsl_vector_ushort *")   a)
    ((-gptr- "gsl_vector_ushort *")   b)
    (int   #{ gsl_vector_ushort_add ( $a ,$b) #} )
)

(de gsl_vector_ushort_sub (   a  b )
    ((-gptr- "gsl_vector_ushort *")   a)
    ((-gptr- "gsl_vector_ushort *")   b)
    (int   #{ gsl_vector_ushort_sub ( $a ,$b) #} )
)

(de gsl_vector_ushort_mul (   a  b )
    ((-gptr- "gsl_vector_ushort *")   a)
    ((-gptr- "gsl_vector_ushort *")   b)
    (int   #{ gsl_vector_ushort_mul ( $a ,$b) #} )
)

(de gsl_vector_ushort_div (   a  b )
    ((-gptr- "gsl_vector_ushort *")   a)
    ((-gptr- "gsl_vector_ushort *")   b)
    (int   #{ gsl_vector_ushort_div ( $a ,$b) #} )
)

(de gsl_vector_ushort_scale (   a  x )
    ((-gptr- "gsl_vector_ushort *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_ushort_scale ( $a ,$x) #} )
)

(de gsl_vector_ushort_add_constant (   a  x )
    ((-gptr- "gsl_vector_ushort *")   a)
    ((-double-)  x)
    (int   #{ gsl_vector_ushort_add_constant ( $a ,$x) #} )
)


(de gsl_vector_ushort_isnull (   v )
    ((-gptr- "gsl_vector_ushort *")   v)
    (int   #{ gsl_vector_ushort_isnull ( $v) #} )
)





;; ********************************************************

(dhc-make-sf ()
  dummy_vector
  gsl_vector_char_alloc
  gsl_vector_char_calloc
  gsl_vector_char_alloc_from_block
  gsl_vector_char_alloc_from_vector
  gsl_vector_char_free
  gsl_vector_char_view_array
  gsl_vector_char_view_array_with_stride
  gsl_vector_char_const_view_array
  gsl_vector_char_const_view_array_with_stride
  gsl_vector_char_subvector
  gsl_vector_char_subvector_with_stride
  gsl_vector_char_const_subvector
  gsl_vector_char_const_subvector_with_stride
  gsl_vector_char_get
  gsl_vector_char_set
  gsl_vector_char_ptr
  gsl_vector_char_const_ptr
  gsl_vector_char_set_zero
  gsl_vector_char_set_all
  gsl_vector_char_set_basis
  gsl_vector_char_fread
  gsl_vector_char_fwrite
  gsl_vector_char_fscanf
  gsl_vector_char_fprintf
  gsl_vector_char_memcpy
  gsl_vector_char_reverse
  gsl_vector_char_swap
  gsl_vector_char_swap_elements
  gsl_vector_char_max
  gsl_vector_char_min
  gsl_vector_char_minmax
  gsl_vector_char_max_index
  gsl_vector_char_min_index
  gsl_vector_char_minmax_index
  gsl_vector_char_add
  gsl_vector_char_sub
  gsl_vector_char_mul
  gsl_vector_char_div
  gsl_vector_char_scale
  gsl_vector_char_add_constant
  gsl_vector_char_isnull
  gsl_vector_complex_alloc
  gsl_vector_complex_calloc
  gsl_vector_complex_alloc_from_block
  gsl_vector_complex_alloc_from_vector
  gsl_vector_complex_free
  gsl_vector_complex_view_array
  gsl_vector_complex_view_array_with_stride
  gsl_vector_complex_const_view_array
  gsl_vector_complex_const_view_array_with_stride
  gsl_vector_complex_subvector
  gsl_vector_complex_subvector_with_stride
  gsl_vector_complex_const_subvector
  gsl_vector_complex_const_subvector_with_stride
  gsl_vector_complex_real
  gsl_vector_complex_imag
  gsl_vector_complex_const_real
  gsl_vector_complex_const_imag
  gsl_vector_complex_get
  gsl_vector_complex_set
  gsl_vector_complex_ptr
  gsl_vector_complex_const_ptr
  gsl_vector_complex_set_zero
  gsl_vector_complex_set_all
  gsl_vector_complex_set_basis
  gsl_vector_complex_fread
  gsl_vector_complex_fwrite
  gsl_vector_complex_fscanf
  gsl_vector_complex_fprintf
  gsl_vector_complex_memcpy
  gsl_vector_complex_reverse
  gsl_vector_complex_swap
  gsl_vector_complex_swap_elements
  gsl_vector_complex_isnull
  gsl_vector_complex_float_alloc
  gsl_vector_complex_float_calloc
  gsl_vector_complex_float_alloc_from_block
  gsl_vector_complex_float_alloc_from_vector
  gsl_vector_complex_float_free
  gsl_vector_complex_float_view_array
  gsl_vector_complex_float_view_array_with_stride
  gsl_vector_complex_float_const_view_array
  gsl_vector_complex_float_const_view_array_with_stride
  gsl_vector_complex_float_subvector
  gsl_vector_complex_float_subvector_with_stride
  gsl_vector_complex_float_const_subvector
  gsl_vector_complex_float_const_subvector_with_stride
  gsl_vector_complex_float_real
  gsl_vector_complex_float_imag
  gsl_vector_complex_float_const_real
  gsl_vector_complex_float_const_imag
  gsl_vector_complex_float_get
  gsl_vector_complex_float_set
  gsl_vector_complex_float_ptr
  gsl_vector_complex_float_const_ptr
  gsl_vector_complex_float_set_zero
  gsl_vector_complex_float_set_all
  gsl_vector_complex_float_set_basis
  gsl_vector_complex_float_fread
  gsl_vector_complex_float_fwrite
  gsl_vector_complex_float_fscanf
  gsl_vector_complex_float_fprintf
  gsl_vector_complex_float_memcpy
  gsl_vector_complex_float_reverse
  gsl_vector_complex_float_swap
  gsl_vector_complex_float_swap_elements
  gsl_vector_complex_float_isnull
  gsl_vector_complex_long_double_alloc
  gsl_vector_complex_long_double_calloc
  gsl_vector_complex_long_double_alloc_from_block
  gsl_vector_complex_long_double_alloc_from_vector
  gsl_vector_complex_long_double_free
  gsl_vector_complex_long_double_view_array
  gsl_vector_complex_long_double_view_array_with_stride
  gsl_vector_complex_long_double_const_view_array
  gsl_vector_complex_long_double_const_view_array_with_stride
  gsl_vector_complex_long_double_subvector
  gsl_vector_complex_long_double_subvector_with_stride
  gsl_vector_complex_long_double_const_subvector
  gsl_vector_complex_long_double_const_subvector_with_stride
  gsl_vector_complex_long_double_real
  gsl_vector_complex_long_double_imag
  gsl_vector_complex_long_double_const_real
  gsl_vector_complex_long_double_const_imag
  gsl_vector_complex_long_double_get
  gsl_vector_complex_long_double_set
  gsl_vector_complex_long_double_ptr
  gsl_vector_complex_long_double_const_ptr
  gsl_vector_complex_long_double_set_zero
  gsl_vector_complex_long_double_set_all
  gsl_vector_complex_long_double_set_basis
  gsl_vector_complex_long_double_fread
  gsl_vector_complex_long_double_fwrite
  gsl_vector_complex_long_double_fscanf
  gsl_vector_complex_long_double_fprintf
  gsl_vector_complex_long_double_memcpy
  gsl_vector_complex_long_double_reverse
  gsl_vector_complex_long_double_swap
  gsl_vector_complex_long_double_swap_elements
  gsl_vector_complex_long_double_isnull
  gsl_vector_alloc
  gsl_vector_calloc
  gsl_vector_alloc_from_block
  gsl_vector_alloc_from_vector
  gsl_vector_free
  gsl_vector_view_array
  gsl_vector_view_array_with_stride
  gsl_vector_const_view_array
  gsl_vector_const_view_array_with_stride
  gsl_vector_subvector
  gsl_vector_subvector_with_stride
  gsl_vector_const_subvector
  gsl_vector_const_subvector_with_stride
  gsl_vector_get
  gsl_vector_set
  gsl_vector_ptr
  gsl_vector_const_ptr
  gsl_vector_set_zero
  gsl_vector_set_all
  gsl_vector_set_basis
  gsl_vector_fread
  gsl_vector_fwrite
  gsl_vector_fscanf
  gsl_vector_fprintf
  gsl_vector_memcpy
  gsl_vector_reverse
  gsl_vector_swap
  gsl_vector_swap_elements
  gsl_vector_max
  gsl_vector_min
  gsl_vector_minmax
  gsl_vector_max_index
  gsl_vector_min_index
  gsl_vector_minmax_index
  gsl_vector_add
  gsl_vector_sub
  gsl_vector_mul
  gsl_vector_div
  gsl_vector_scale
  gsl_vector_add_constant
  gsl_vector_isnull
  gsl_vector_float_alloc
  gsl_vector_float_calloc
  gsl_vector_float_alloc_from_block
  gsl_vector_float_alloc_from_vector
  gsl_vector_float_free
  gsl_vector_float_view_array
  gsl_vector_float_view_array_with_stride
  gsl_vector_float_const_view_array
  gsl_vector_float_const_view_array_with_stride
  gsl_vector_float_subvector
  gsl_vector_float_subvector_with_stride
  gsl_vector_float_const_subvector
  gsl_vector_float_const_subvector_with_stride
  gsl_vector_float_get
  gsl_vector_float_set
  gsl_vector_float_ptr
  gsl_vector_float_const_ptr
  gsl_vector_float_set_zero
  gsl_vector_float_set_all
  gsl_vector_float_set_basis
  gsl_vector_float_fread
  gsl_vector_float_fwrite
  gsl_vector_float_fscanf
  gsl_vector_float_fprintf
  gsl_vector_float_memcpy
  gsl_vector_float_reverse
  gsl_vector_float_swap
  gsl_vector_float_swap_elements
  gsl_vector_float_max
  gsl_vector_float_min
  gsl_vector_float_minmax
  gsl_vector_float_max_index
  gsl_vector_float_min_index
  gsl_vector_float_minmax_index
  gsl_vector_float_add
  gsl_vector_float_sub
  gsl_vector_float_mul
  gsl_vector_float_div
  gsl_vector_float_scale
  gsl_vector_float_add_constant
  gsl_vector_float_isnull
  gsl_vector_int_alloc
  gsl_vector_int_calloc
  gsl_vector_int_alloc_from_block
  gsl_vector_int_alloc_from_vector
  gsl_vector_int_free
  gsl_vector_int_view_array
  gsl_vector_int_view_array_with_stride
  gsl_vector_int_const_view_array
  gsl_vector_int_const_view_array_with_stride
  gsl_vector_int_subvector
  gsl_vector_int_subvector_with_stride
  gsl_vector_int_const_subvector
  gsl_vector_int_const_subvector_with_stride
  gsl_vector_int_get
  gsl_vector_int_set
  gsl_vector_int_ptr
  gsl_vector_int_const_ptr
  gsl_vector_int_set_zero
  gsl_vector_int_set_all
  gsl_vector_int_set_basis
  gsl_vector_int_fread
  gsl_vector_int_fwrite
  gsl_vector_int_fscanf
  gsl_vector_int_fprintf
  gsl_vector_int_memcpy
  gsl_vector_int_reverse
  gsl_vector_int_swap
  gsl_vector_int_swap_elements
  gsl_vector_int_max
  gsl_vector_int_min
  gsl_vector_int_minmax
  gsl_vector_int_max_index
  gsl_vector_int_min_index
  gsl_vector_int_minmax_index
  gsl_vector_int_add
  gsl_vector_int_sub
  gsl_vector_int_mul
  gsl_vector_int_div
  gsl_vector_int_scale
  gsl_vector_int_add_constant
  gsl_vector_int_isnull
  gsl_vector_long_double_alloc
  gsl_vector_long_double_calloc
  gsl_vector_long_double_alloc_from_block
  gsl_vector_long_double_alloc_from_vector
  gsl_vector_long_double_free
  gsl_vector_long_double_view_array
  gsl_vector_long_double_view_array_with_stride
  gsl_vector_long_double_const_view_array
  gsl_vector_long_double_const_view_array_with_stride
  gsl_vector_long_double_subvector
  gsl_vector_long_double_subvector_with_stride
  gsl_vector_long_double_const_subvector
  gsl_vector_long_double_const_subvector_with_stride
  gsl_vector_long_double_get
  gsl_vector_long_double_set
  gsl_vector_long_double_ptr
  gsl_vector_long_double_const_ptr
  gsl_vector_long_double_set_zero
  gsl_vector_long_double_set_all
  gsl_vector_long_double_set_basis
  gsl_vector_long_double_fread
  gsl_vector_long_double_fwrite
  gsl_vector_long_double_fscanf
  gsl_vector_long_double_fprintf
  gsl_vector_long_double_memcpy
  gsl_vector_long_double_reverse
  gsl_vector_long_double_swap
  gsl_vector_long_double_swap_elements
  gsl_vector_long_double_max
  gsl_vector_long_double_min
  gsl_vector_long_double_minmax
  gsl_vector_long_double_max_index
  gsl_vector_long_double_min_index
  gsl_vector_long_double_minmax_index
  gsl_vector_long_double_add
  gsl_vector_long_double_sub
  gsl_vector_long_double_mul
  gsl_vector_long_double_div
  gsl_vector_long_double_scale
  gsl_vector_long_double_add_constant
  gsl_vector_long_double_isnull
  gsl_vector_long_alloc
  gsl_vector_long_calloc
  gsl_vector_long_alloc_from_block
  gsl_vector_long_alloc_from_vector
  gsl_vector_long_free
  gsl_vector_long_view_array
  gsl_vector_long_view_array_with_stride
  gsl_vector_long_const_view_array
  gsl_vector_long_const_view_array_with_stride
  gsl_vector_long_subvector
  gsl_vector_long_subvector_with_stride
  gsl_vector_long_const_subvector
  gsl_vector_long_const_subvector_with_stride
  gsl_vector_long_get
  gsl_vector_long_set
  gsl_vector_long_ptr
  gsl_vector_long_const_ptr
  gsl_vector_long_set_zero
  gsl_vector_long_set_all
  gsl_vector_long_set_basis
  gsl_vector_long_fread
  gsl_vector_long_fwrite
  gsl_vector_long_fscanf
  gsl_vector_long_fprintf
  gsl_vector_long_memcpy
  gsl_vector_long_reverse
  gsl_vector_long_swap
  gsl_vector_long_swap_elements
  gsl_vector_long_max
  gsl_vector_long_min
  gsl_vector_long_minmax
  gsl_vector_long_max_index
  gsl_vector_long_min_index
  gsl_vector_long_minmax_index
  gsl_vector_long_add
  gsl_vector_long_sub
  gsl_vector_long_mul
  gsl_vector_long_div
  gsl_vector_long_scale
  gsl_vector_long_add_constant
  gsl_vector_long_isnull
  gsl_vector_short_alloc
  gsl_vector_short_calloc
  gsl_vector_short_alloc_from_block
  gsl_vector_short_alloc_from_vector
  gsl_vector_short_free
  gsl_vector_short_view_array
  gsl_vector_short_view_array_with_stride
  gsl_vector_short_const_view_array
  gsl_vector_short_const_view_array_with_stride
  gsl_vector_short_subvector
  gsl_vector_short_subvector_with_stride
  gsl_vector_short_const_subvector
  gsl_vector_short_const_subvector_with_stride
  gsl_vector_short_get
  gsl_vector_short_set
  gsl_vector_short_ptr
  gsl_vector_short_const_ptr
  gsl_vector_short_set_zero
  gsl_vector_short_set_all
  gsl_vector_short_set_basis
  gsl_vector_short_fread
  gsl_vector_short_fwrite
  gsl_vector_short_fscanf
  gsl_vector_short_fprintf
  gsl_vector_short_memcpy
  gsl_vector_short_reverse
  gsl_vector_short_swap
  gsl_vector_short_swap_elements
  gsl_vector_short_max
  gsl_vector_short_min
  gsl_vector_short_minmax
  gsl_vector_short_max_index
  gsl_vector_short_min_index
  gsl_vector_short_minmax_index
  gsl_vector_short_add
  gsl_vector_short_sub
  gsl_vector_short_mul
  gsl_vector_short_div
  gsl_vector_short_scale
  gsl_vector_short_add_constant
  gsl_vector_short_isnull
  gsl_vector_uchar_alloc
  gsl_vector_uchar_calloc
  gsl_vector_uchar_alloc_from_block
  gsl_vector_uchar_alloc_from_vector
  gsl_vector_uchar_free
  gsl_vector_uchar_view_array
  gsl_vector_uchar_view_array_with_stride
  gsl_vector_uchar_const_view_array
  gsl_vector_uchar_const_view_array_with_stride
  gsl_vector_uchar_subvector
  gsl_vector_uchar_subvector_with_stride
  gsl_vector_uchar_const_subvector
  gsl_vector_uchar_const_subvector_with_stride
  gsl_vector_uchar_get
  gsl_vector_uchar_set
  gsl_vector_uchar_ptr
  gsl_vector_uchar_const_ptr
  gsl_vector_uchar_set_zero
  gsl_vector_uchar_set_all
  gsl_vector_uchar_set_basis
  gsl_vector_uchar_fread
  gsl_vector_uchar_fwrite
  gsl_vector_uchar_fscanf
  gsl_vector_uchar_fprintf
  gsl_vector_uchar_memcpy
  gsl_vector_uchar_reverse
  gsl_vector_uchar_swap
  gsl_vector_uchar_swap_elements
  gsl_vector_uchar_max
  gsl_vector_uchar_min
  gsl_vector_uchar_minmax
  gsl_vector_uchar_max_index
  gsl_vector_uchar_min_index
  gsl_vector_uchar_minmax_index
  gsl_vector_uchar_add
  gsl_vector_uchar_sub
  gsl_vector_uchar_mul
  gsl_vector_uchar_div
  gsl_vector_uchar_scale
  gsl_vector_uchar_add_constant
  gsl_vector_uchar_isnull
  gsl_vector_uint_alloc
  gsl_vector_uint_calloc
  gsl_vector_uint_alloc_from_block
  gsl_vector_uint_alloc_from_vector
  gsl_vector_uint_free
  gsl_vector_uint_view_array
  gsl_vector_uint_view_array_with_stride
  gsl_vector_uint_const_view_array
  gsl_vector_uint_const_view_array_with_stride
  gsl_vector_uint_subvector
  gsl_vector_uint_subvector_with_stride
  gsl_vector_uint_const_subvector
  gsl_vector_uint_const_subvector_with_stride
  gsl_vector_uint_get
  gsl_vector_uint_set
  gsl_vector_uint_ptr
  gsl_vector_uint_const_ptr
  gsl_vector_uint_set_zero
  gsl_vector_uint_set_all
  gsl_vector_uint_set_basis
  gsl_vector_uint_fread
  gsl_vector_uint_fwrite
  gsl_vector_uint_fscanf
  gsl_vector_uint_fprintf
  gsl_vector_uint_memcpy
  gsl_vector_uint_reverse
  gsl_vector_uint_swap
  gsl_vector_uint_swap_elements
  gsl_vector_uint_max
  gsl_vector_uint_min
  gsl_vector_uint_minmax
  gsl_vector_uint_max_index
  gsl_vector_uint_min_index
  gsl_vector_uint_minmax_index
  gsl_vector_uint_add
  gsl_vector_uint_sub
  gsl_vector_uint_mul
  gsl_vector_uint_div
  gsl_vector_uint_scale
  gsl_vector_uint_add_constant
  gsl_vector_uint_isnull
  gsl_vector_ulong_alloc
  gsl_vector_ulong_calloc
  gsl_vector_ulong_alloc_from_block
  gsl_vector_ulong_alloc_from_vector
  gsl_vector_ulong_free
  gsl_vector_ulong_view_array
  gsl_vector_ulong_view_array_with_stride
  gsl_vector_ulong_const_view_array
  gsl_vector_ulong_const_view_array_with_stride
  gsl_vector_ulong_subvector
  gsl_vector_ulong_subvector_with_stride
  gsl_vector_ulong_const_subvector
  gsl_vector_ulong_const_subvector_with_stride
  gsl_vector_ulong_get
  gsl_vector_ulong_set
  gsl_vector_ulong_ptr
  gsl_vector_ulong_const_ptr
  gsl_vector_ulong_set_zero
  gsl_vector_ulong_set_all
  gsl_vector_ulong_set_basis
  gsl_vector_ulong_fread
  gsl_vector_ulong_fwrite
  gsl_vector_ulong_fscanf
  gsl_vector_ulong_fprintf
  gsl_vector_ulong_memcpy
  gsl_vector_ulong_reverse
  gsl_vector_ulong_swap
  gsl_vector_ulong_swap_elements
  gsl_vector_ulong_max
  gsl_vector_ulong_min
  gsl_vector_ulong_minmax
  gsl_vector_ulong_max_index
  gsl_vector_ulong_min_index
  gsl_vector_ulong_minmax_index
  gsl_vector_ulong_add
  gsl_vector_ulong_sub
  gsl_vector_ulong_mul
  gsl_vector_ulong_div
  gsl_vector_ulong_scale
  gsl_vector_ulong_add_constant
  gsl_vector_ulong_isnull
  gsl_vector_ushort_alloc
  gsl_vector_ushort_calloc
  gsl_vector_ushort_alloc_from_block
  gsl_vector_ushort_alloc_from_vector
  gsl_vector_ushort_free
  gsl_vector_ushort_view_array
  gsl_vector_ushort_view_array_with_stride
  gsl_vector_ushort_const_view_array
  gsl_vector_ushort_const_view_array_with_stride
  gsl_vector_ushort_subvector
  gsl_vector_ushort_subvector_with_stride
  gsl_vector_ushort_const_subvector
  gsl_vector_ushort_const_subvector_with_stride
  gsl_vector_ushort_get
  gsl_vector_ushort_set
  gsl_vector_ushort_ptr
  gsl_vector_ushort_const_ptr
  gsl_vector_ushort_set_zero
  gsl_vector_ushort_set_all
  gsl_vector_ushort_set_basis
  gsl_vector_ushort_fread
  gsl_vector_ushort_fwrite
  gsl_vector_ushort_fscanf
  gsl_vector_ushort_fprintf
  gsl_vector_ushort_memcpy
  gsl_vector_ushort_reverse
  gsl_vector_ushort_swap
  gsl_vector_ushort_swap_elements
  gsl_vector_ushort_max
  gsl_vector_ushort_min
  gsl_vector_ushort_minmax
  gsl_vector_ushort_max_index
  gsl_vector_ushort_min_index
  gsl_vector_ushort_minmax_index
  gsl_vector_ushort_add
  gsl_vector_ushort_sub
  gsl_vector_ushort_mul
  gsl_vector_ushort_div
  gsl_vector_ushort_scale
  gsl_vector_ushort_add_constant
  gsl_vector_ushort_isnull
)
