;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2009 Leon Bottou, Yann LeCun, Ralf Juengling.
;;;   Copyright (C) 2002 Leon Bottou, Yann LeCun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU Lesser General Public License as 
;;; published by the Free Software Foundation; either version 2.1 of the
;;; License, or (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU Lesser General Public License for more details.
;;;
;;; You should have received a copy of the GNU Lesser General Public
;;; License along with this program; if not, write to the Free Software
;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
;;; MA 02110-1301  USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl/gsl-config")



#? *** aux_globalvar

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_aux_globalvar () ,gsl-cpheader-cmd ()))

#? * (dummy_aux_globalvar)
#? * (var_gsl_interp_linear)
#? * (var_gsl_interp_polynomial)
#? * (var_gsl_interp_cspline)
#? * (var_gsl_interp_cspline_periodic)
#? * (var_gsl_interp_akima)
#? * (var_gsl_interp_akima_periodic)
#? * (var_gsl_multifit_fdfsolver_lmder)
#? * (var_gsl_multifit_fdfsolver_lmsder)
#? * (var_gsl_root_fsolver_bisection)
#? * (var_gsl_root_fsolver_brent)
#? * (var_gsl_root_fsolver_falsepos)
#? * (var_gsl_root_fdfsolver_newton)
#? * (var_gsl_root_fdfsolver_secant)
#? * (var_gsl_root_fdfsolver_steffenson)
#? * (var_gsl_min_fminimizer_goldensection)
#? * (var_gsl_min_fminimizer_brent)
#? * (var_gsl_multimin_fdfminimizer_steepest_descent)
#? * (var_gsl_multimin_fdfminimizer_conjugate_pr)
#? * (var_gsl_multimin_fdfminimizer_conjugate_fr)
#? * (var_gsl_multimin_fdfminimizer_vector_bfgs)
#? * (var_gsl_multiroot_fsolver_dnewton)
#? * (var_gsl_multiroot_fsolver_broyden)
#? * (var_gsl_multiroot_fsolver_hybrid)
#? * (var_gsl_multiroot_fsolver_hybrids)
#? * (var_gsl_multiroot_fdfsolver_newton)
#? * (var_gsl_multiroot_fdfsolver_gnewton)
#? * (var_gsl_multiroot_fdfsolver_hybridj)
#? * (var_gsl_multiroot_fdfsolver_hybridsj)
#? * (var_gsl_odeiv_step_rk2)
#? * (var_gsl_odeiv_step_rk4)
#? * (var_gsl_odeiv_step_rkf45)
#? * (var_gsl_odeiv_step_rkck)
#? * (var_gsl_odeiv_step_rk8pd)
#? * (var_gsl_odeiv_step_rk2imp)
#? * (var_gsl_odeiv_step_rk4imp)
#? * (var_gsl_odeiv_step_bsimp)
#? * (var_gsl_odeiv_step_gear1)
#? * (var_gsl_odeiv_step_gear2)
#? * (var_gsl_prec_eps)
#? * (var_gsl_prec_sqrt_eps)
#? * (var_gsl_prec_root3_eps)
#? * (var_gsl_prec_root4_eps)
#? * (var_gsl_prec_root5_eps)
#? * (var_gsl_prec_root6_eps)
#? * (var_gsl_version)
#? * (var_gsl_check_range)
#? * (var_gsl_warnings_off)
#? * (var_gsl_message_mask)
#? * (var_gsl_rng_default_seed)
#? * (var_gsl_rng_default)
#? * (var_gsl_rng_borosh13)
#? * (var_gsl_rng_coveyou)
#? * (var_gsl_rng_cmrg)
#? * (var_gsl_rng_fishman18)
#? * (var_gsl_rng_fishman20)
#? * (var_gsl_rng_fishman2x)
#? * (var_gsl_rng_gfsr4)
#? * (var_gsl_rng_knuthran)
#? * (var_gsl_rng_knuthran2)
#? * (var_gsl_rng_lecuyer21)
#? * (var_gsl_rng_minstd)
#? * (var_gsl_rng_mrg)
#? * (var_gsl_rng_mt19937)
#? * (var_gsl_rng_r250)
#? * (var_gsl_rng_ran0)
#? * (var_gsl_rng_ran1)
#? * (var_gsl_rng_ran2)
#? * (var_gsl_rng_ran3)
#? * (var_gsl_rng_rand)
#? * (var_gsl_rng_rand48)
#? * (var_gsl_rng_random128_bsd)
#? * (var_gsl_rng_random128_glibc2)
#? * (var_gsl_rng_random128_libc5)
#? * (var_gsl_rng_random256_bsd)
#? * (var_gsl_rng_random256_glibc2)
#? * (var_gsl_rng_random256_libc5)
#? * (var_gsl_rng_random32_bsd)
#? * (var_gsl_rng_random32_glibc2)
#? * (var_gsl_rng_random32_libc5)
#? * (var_gsl_rng_random64_bsd)
#? * (var_gsl_rng_random64_glibc2)
#? * (var_gsl_rng_random64_libc5)
#? * (var_gsl_rng_random8_bsd)
#? * (var_gsl_rng_random8_glibc2)
#? * (var_gsl_rng_random8_libc5)
#? * (var_gsl_rng_random_bsd)
#? * (var_gsl_rng_random_glibc2)
#? * (var_gsl_rng_random_libc5)
#? * (var_gsl_rng_randu)
#? * (var_gsl_rng_ranf)
#? * (var_gsl_rng_ranlux)
#? * (var_gsl_rng_ranlux389)
#? * (var_gsl_rng_ranlxd1)
#? * (var_gsl_rng_ranlxd2)
#? * (var_gsl_rng_ranlxs0)
#? * (var_gsl_rng_ranlxs1)
#? * (var_gsl_rng_ranlxs2)
#? * (var_gsl_rng_ranmar)
#? * (var_gsl_rng_slatec)
#? * (var_gsl_rng_taus)
#? * (var_gsl_rng_transputer)
#? * (var_gsl_rng_tt800)
#? * (var_gsl_rng_uni)
#? * (var_gsl_rng_uni32)
#? * (var_gsl_rng_vax)
#? * (var_gsl_rng_waterman14)
#? * (var_gsl_rng_zuf)
#? * (var_gsl_qrng_niederreiter_2)
#? * (var_gsl_qrng_sobol)

;; ********************************************************

;; functions to retrieve global variables

(de var_gsl_interp_linear ()
  (gptr #{ *pgsl_interp_linear #} ))

(de var_gsl_interp_polynomial ()
  (gptr #{ *pgsl_interp_polynomial #} ))

(de var_gsl_interp_cspline ()
  (gptr #{ *pgsl_interp_cspline #} ))

(de var_gsl_interp_cspline_periodic ()
  (gptr #{ *pgsl_interp_cspline_periodic #} ))

(de var_gsl_interp_akima ()
  (gptr #{ *pgsl_interp_akima  #} ))

(de var_gsl_interp_akima_periodic ()
  (gptr #{ *pgsl_interp_akima_periodic #} ))



(de var_gsl_multifit_fdfsolver_lmder ()
  (gptr #{ *pgsl_multifit_fdfsolver_lmder #} ))

(de var_gsl_multifit_fdfsolver_lmsder ()
  (gptr #{ *pgsl_multifit_fdfsolver_lmsder #} ))



(de var_gsl_root_fsolver_bisection ()
  (gptr #{ *pgsl_root_fsolver_bisection #} ))

(de var_gsl_root_fsolver_brent ()
  (gptr #{ *pgsl_root_fsolver_brent #} ))

(de var_gsl_root_fsolver_falsepos ()
  (gptr #{ *pgsl_root_fsolver_falsepos #} ))

(de var_gsl_root_fdfsolver_newton ()
  (gptr #{ *pgsl_root_fdfsolver_newton #} ))

(de var_gsl_root_fdfsolver_secant ()
  (gptr #{ *pgsl_root_fdfsolver_secant #} ))

(de var_gsl_root_fdfsolver_steffenson ()
  (gptr #{ *pgsl_root_fdfsolver_steffenson #} ))



(de var_gsl_min_fminimizer_goldensection ()
  (gptr #{ *pgsl_min_fminimizer_goldensection #} ))

(de var_gsl_min_fminimizer_brent ()
  (gptr #{ *pgsl_min_fminimizer_brent #} ))



(de var_gsl_multimin_fdfminimizer_steepest_descent ()
  (gptr #{ *pgsl_multimin_fdfminimizer_steepest_descent #} ))

(de var_gsl_multimin_fdfminimizer_conjugate_pr ()
  (gptr #{ *pgsl_multimin_fdfminimizer_conjugate_pr #} ))

(de var_gsl_multimin_fdfminimizer_conjugate_fr ()
  (gptr #{ *pgsl_multimin_fdfminimizer_conjugate_fr #} ))

(de var_gsl_multimin_fdfminimizer_vector_bfgs ()
  (gptr #{ *pgsl_multimin_fdfminimizer_vector_bfgs #} ))



(de var_gsl_multiroot_fsolver_dnewton ()
  (gptr #{ *pgsl_multiroot_fsolver_dnewton #} ))

(de var_gsl_multiroot_fsolver_broyden ()
  (gptr #{ *pgsl_multiroot_fsolver_broyden #} ))

(de var_gsl_multiroot_fsolver_hybrid ()
  (gptr #{ *pgsl_multiroot_fsolver_hybrid #} ))

(de var_gsl_multiroot_fsolver_hybrids ()
  (gptr #{ *pgsl_multiroot_fsolver_hybrids #} ))

(de var_gsl_multiroot_fdfsolver_newton ()
  (gptr #{ *pgsl_multiroot_fdfsolver_newton #} ))

(de var_gsl_multiroot_fdfsolver_gnewton ()
  (gptr #{ *pgsl_multiroot_fdfsolver_gnewton #} ))

(de var_gsl_multiroot_fdfsolver_hybridj ()
  (gptr #{ *pgsl_multiroot_fdfsolver_hybridj #} ))

(de var_gsl_multiroot_fdfsolver_hybridsj ()
  (gptr #{ *pgsl_multiroot_fdfsolver_hybridsj #} ))



(de var_gsl_odeiv_step_rk2 ()
  (gptr #{ *pgsl_odeiv_step_rk2 #} ))

(de var_gsl_odeiv_step_rk4 ()
  (gptr #{ *pgsl_odeiv_step_rk4 #} ))

(de var_gsl_odeiv_step_rkf45 ()
  (gptr #{ *pgsl_odeiv_step_rkf45 #} ))

(de var_gsl_odeiv_step_rkck ()
  (gptr #{ *pgsl_odeiv_step_rkck #} ))

(de var_gsl_odeiv_step_rk8pd ()
  (gptr #{ *pgsl_odeiv_step_rk8pd #} ))

(de var_gsl_odeiv_step_rk2imp ()
  (gptr #{ *pgsl_odeiv_step_rk2imp #} ))

(de var_gsl_odeiv_step_rk4imp ()
  (gptr #{ *pgsl_odeiv_step_rk4imp #} ))

(de var_gsl_odeiv_step_bsimp ()
  (gptr #{ *pgsl_odeiv_step_bsimp #} ))

(de var_gsl_odeiv_step_gear1 ()
  (gptr #{ *pgsl_odeiv_step_gear1 #} ))

(de var_gsl_odeiv_step_gear2 ()
  (gptr #{ *pgsl_odeiv_step_gear2 #} ))



(de var_gsl_prec_eps ()
  (gptr #{ gsl_precs[0] #} ))

(de var_gsl_prec_sqrt_eps ()
  (gptr #{ gsl_precs[1] #} ))

(de var_gsl_prec_root3_eps ()
  (gptr #{ gsl_precs[2] #} ))

(de var_gsl_prec_root4_eps ()
  (gptr #{ gsl_precs[3] #} ))

(de var_gsl_prec_root5_eps ()
  (gptr #{ gsl_precs[4] #} ))

(de var_gsl_prec_root6_eps ()
  (gptr #{ gsl_precs[5] #} ))



(de var_gsl_version ()
  (gptr #{ *pgsl_version  #} ))

(de var_gsl_check_range ()
  (int #{ *pgsl_check_range #} ))

(de var_gsl_message_mask ()
  (int #{ *pgsl_message_mask #} )) ;; unsigned int -> int



(de var_gsl_rng_default_seed ()
  (int #{ *pgsl_rng_default_seed #} ))  ;; unsigned long int -> int



(de var_gsl_rng_default ()
  (gptr #{ *pgsl_rng_default  #} ))

(de var_gsl_rng_borosh13 ()
  (gptr #{ *pgsl_rng_borosh13 #}))
  
(de var_gsl_rng_coveyou ()
  (gptr #{ *pgsl_rng_coveyou #}))

(de var_gsl_rng_cmrg ()
  (gptr #{ *pgsl_rng_cmrg #}))

(de var_gsl_rng_fishman18 ()
  (gptr #{ *pgsl_rng_fishman18 #}))

(de var_gsl_rng_fishman20 ()
  (gptr #{ *pgsl_rng_fishman20 #}))

(de var_gsl_rng_fishman2x ()
  (gptr #{ *pgsl_rng_fishman2x #}))

(de var_gsl_rng_gfsr4 ()
  (gptr #{ *pgsl_rng_gfsr4 #}))

(de var_gsl_rng_knuthran ()
  (gptr #{ *pgsl_rng_knuthran #}))

(de var_gsl_rng_knuthran2 ()
  (gptr #{ *pgsl_rng_knuthran2 #}))

(de var_gsl_rng_lecuyer21 ()
  (gptr #{ *pgsl_rng_lecuyer21 #}))

(de var_gsl_rng_minstd ()
  (gptr #{ *pgsl_rng_minstd #}))

(de var_gsl_rng_mrg ()
  (gptr #{ *pgsl_rng_mrg #}))

(de var_gsl_rng_mt19937 ()
  (gptr #{ *pgsl_rng_mt19937 #}))

(de var_gsl_rng_mt19937_1998 ()
  (gptr #{ *pgsl_rng_mt19937_1998 #}))

(de var_gsl_rng_mt19937_1999 ()
  (gptr #{ *pgsl_rng_mt19937_1999 #}))

(de var_gsl_rng_r250 ()
  (gptr #{ *pgsl_rng_r250 #}))

(de var_gsl_rng_ran0 ()
  (gptr #{ *pgsl_rng_ran0 #}))

(de var_gsl_rng_ran1 ()
  (gptr #{ *pgsl_rng_ran1 #}))

(de var_gsl_rng_ran2 ()
  (gptr #{ *pgsl_rng_ran2 #}))

(de var_gsl_rng_ran3 ()
  (gptr #{ *pgsl_rng_ran3 #}))

(de var_gsl_rng_rand ()
  (gptr #{ *pgsl_rng_rand #}))

(de var_gsl_rng_rand48 ()
  (gptr #{ *pgsl_rng_rand48 #}))

(de var_gsl_rng_random128_bsd ()
  (gptr #{ *pgsl_rng_random128_bsd #}))

(de var_gsl_rng_random128_glibc2 ()
  (gptr #{ *pgsl_rng_random128_glibc2 #}))

(de var_gsl_rng_random128_libc5 ()
  (gptr #{ *pgsl_rng_random128_libc5 #}))

(de var_gsl_rng_random256_bsd ()
  (gptr #{ *pgsl_rng_random256_bsd #}))

(de var_gsl_rng_random256_glibc2 ()
  (gptr #{ *pgsl_rng_random256_glibc2 #}))

(de var_gsl_rng_random256_libc5 ()
  (gptr #{ *pgsl_rng_random256_libc5 #}))

(de var_gsl_rng_random32_bsd ()
  (gptr #{ *pgsl_rng_random32_bsd #}))

(de var_gsl_rng_random32_glibc2 ()
  (gptr #{ *pgsl_rng_random32_glibc2 #}))

(de var_gsl_rng_random32_libc5 ()
  (gptr #{ *pgsl_rng_random32_libc5 #}))

(de var_gsl_rng_random64_bsd ()
  (gptr #{ *pgsl_rng_random64_bsd #}))

(de var_gsl_rng_random64_glibc2 ()
  (gptr #{ *pgsl_rng_random64_glibc2 #}))

(de var_gsl_rng_random64_libc5 ()
  (gptr #{ *pgsl_rng_random64_libc5 #}))

(de var_gsl_rng_random8_bsd ()
  (gptr #{ *pgsl_rng_random8_bsd #}))

(de var_gsl_rng_random8_glibc2 ()
  (gptr #{ *pgsl_rng_random8_glibc2 #}))

(de var_gsl_rng_random8_libc5 ()
  (gptr #{ *pgsl_rng_random8_libc5 #}))

(de var_gsl_rng_random_bsd ()
  (gptr #{ *pgsl_rng_random_bsd #}))

(de var_gsl_rng_random_glibc2 ()
  (gptr #{ *pgsl_rng_random_glibc2 #}))

(de var_gsl_rng_random_libc5 ()
  (gptr #{ *pgsl_rng_random_libc5 #}))

(de var_gsl_rng_randu ()
  (gptr #{ *pgsl_rng_randu #}))

(de var_gsl_rng_ranf ()
  (gptr #{ *pgsl_rng_ranf #}))

(de var_gsl_rng_ranlux ()
  (gptr #{ *pgsl_rng_ranlux #}))

(de var_gsl_rng_ranlux389 ()
  (gptr #{ *pgsl_rng_ranlux389 #}))

(de var_gsl_rng_ranlxd1 ()
  (gptr #{ *pgsl_rng_ranlxd1 #}))

(de var_gsl_rng_ranlxd2 ()
  (gptr #{ *pgsl_rng_ranlxd2 #}))

(de var_gsl_rng_ranlxs0 ()
  (gptr #{ *pgsl_rng_ranlxs0 #}))

(de var_gsl_rng_ranlxs1 ()
  (gptr #{ *pgsl_rng_ranlxs1 #}))

(de var_gsl_rng_ranlxs2 ()
  (gptr #{ *pgsl_rng_ranlxs2 #}))

(de var_gsl_rng_ranmar ()
  (gptr #{ *pgsl_rng_ranmar #}))

(de var_gsl_rng_slatec ()
  (gptr #{ *pgsl_rng_slatec #}))

(de var_gsl_rng_taus ()
  (gptr #{ *pgsl_rng_taus #}))

(de var_gsl_rng_taus2 ()
  (gptr #{ *pgsl_rng_taus2 #}))

(de var_gsl_rng_taus113 ()
  (gptr #{ *pgsl_rng_taus113 #}))

(de var_gsl_rng_transputer ()
  (gptr #{ *pgsl_rng_transputer #}))

(de var_gsl_rng_tt800 ()
  (gptr #{ *pgsl_rng_tt800 #}))

(de var_gsl_rng_uni ()
  (gptr #{ *pgsl_rng_uni #}))

(de var_gsl_rng_uni32 ()
  (gptr #{ *pgsl_rng_uni32 #}))

(de var_gsl_rng_vax ()
    (gptr #{ *pgsl_rng_vax #}))

(de var_gsl_rng_waterman14 ()
  (gptr #{ *pgsl_rng_waterman14 #}))

(de var_gsl_rng_zuf ()
  (gptr #{ *pgsl_rng_zuf #}))



(de var_gsl_qrng_niederreiter_2 ()
  (gptr #{ *pgsl_qrng_niederreiter_2 #}))

(de var_gsl_qrng_sobol ()
  (gptr #{ *pgsl_qrng_sobol #}))



;; ********************************************************

(dhc-make-sf ()
  dummy_aux_globalvar

  ;; static definitions to work around x86_64 relocation
  ;; problems
  #{
  static const gsl_interp_type ** volatile pgsl_interp_linear = &gsl_interp_linear;
  static const gsl_interp_type ** volatile pgsl_interp_polynomial = &gsl_interp_polynomial;
  static const gsl_interp_type ** volatile pgsl_interp_cspline = &gsl_interp_cspline;
  static const gsl_interp_type ** volatile pgsl_interp_cspline_periodic = &gsl_interp_cspline_periodic;
  static const gsl_interp_type ** volatile pgsl_interp_akima = &gsl_interp_akima;
  static const gsl_interp_type ** volatile pgsl_interp_akima_periodic = &gsl_interp_akima_periodic;

  static const gsl_multifit_fdfsolver_type ** volatile pgsl_multifit_fdfsolver_lmder = &gsl_multifit_fdfsolver_lmder;
  static const gsl_multifit_fdfsolver_type ** volatile pgsl_multifit_fdfsolver_lmsder = &gsl_multifit_fdfsolver_lmsder;

  static const gsl_root_fsolver_type ** volatile pgsl_root_fsolver_bisection = &gsl_root_fsolver_bisection;
  static const gsl_root_fsolver_type ** volatile pgsl_root_fsolver_brent = &gsl_root_fsolver_brent;
  static const gsl_root_fsolver_type ** volatile pgsl_root_fsolver_falsepos = &gsl_root_fsolver_falsepos;
  static const gsl_root_fdfsolver_type ** volatile pgsl_root_fdfsolver_newton = &gsl_root_fdfsolver_newton;
  static const gsl_root_fdfsolver_type ** volatile pgsl_root_fdfsolver_secant = &gsl_root_fdfsolver_secant;
  static const gsl_root_fdfsolver_type ** volatile pgsl_root_fdfsolver_steffenson = &gsl_root_fdfsolver_steffenson;
  
  static const gsl_min_fminimizer_type ** volatile pgsl_min_fminimizer_goldensection = &gsl_min_fminimizer_goldensection;
  static const gsl_min_fminimizer_type ** volatile pgsl_min_fminimizer_brent = &gsl_min_fminimizer_brent;

  static const gsl_multimin_fdfminimizer_type ** volatile pgsl_multimin_fdfminimizer_steepest_descent = &gsl_multimin_fdfminimizer_steepest_descent;
  static const gsl_multimin_fdfminimizer_type ** volatile pgsl_multimin_fdfminimizer_conjugate_pr = &gsl_multimin_fdfminimizer_conjugate_pr;
  static const gsl_multimin_fdfminimizer_type ** volatile pgsl_multimin_fdfminimizer_conjugate_fr = &gsl_multimin_fdfminimizer_conjugate_fr;
  static const gsl_multimin_fdfminimizer_type ** volatile pgsl_multimin_fdfminimizer_vector_bfgs = &gsl_multimin_fdfminimizer_vector_bfgs;
  /* static const gsl_multimin_fdfminimizer_type ** volatile pgsl_multimin_fdfminimizer_vector_bfgs2 = &gsl_multimin_fdfminimizer_vector_bfgs2; */
  static const gsl_multimin_fminimizer_type ** volatile pgsl_multimin_fminimizer_nmsimplex = &gsl_multimin_fminimizer_nmsimplex;

  static const gsl_multiroot_fsolver_type ** volatile pgsl_multiroot_fsolver_dnewton = &gsl_multiroot_fsolver_dnewton;
  static const gsl_multiroot_fsolver_type ** volatile pgsl_multiroot_fsolver_broyden = &gsl_multiroot_fsolver_broyden;
  static const gsl_multiroot_fsolver_type ** volatile pgsl_multiroot_fsolver_hybrid = &gsl_multiroot_fsolver_hybrid;
  static const gsl_multiroot_fsolver_type ** volatile pgsl_multiroot_fsolver_hybrids = &gsl_multiroot_fsolver_hybrids;

  static const gsl_multiroot_fdfsolver_type ** volatile pgsl_multiroot_fdfsolver_newton = &gsl_multiroot_fdfsolver_newton;
  static const gsl_multiroot_fdfsolver_type ** volatile pgsl_multiroot_fdfsolver_gnewton = &gsl_multiroot_fdfsolver_gnewton;
  static const gsl_multiroot_fdfsolver_type ** volatile pgsl_multiroot_fdfsolver_hybridj = &gsl_multiroot_fdfsolver_hybridj;
  static const gsl_multiroot_fdfsolver_type ** volatile pgsl_multiroot_fdfsolver_hybridsj = &gsl_multiroot_fdfsolver_hybridsj;

  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rk2 = &gsl_odeiv_step_rk2;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rk4 = &gsl_odeiv_step_rk4;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rkf45 = &gsl_odeiv_step_rkf45;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rkck = &gsl_odeiv_step_rkck;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rk8pd = &gsl_odeiv_step_rk8pd;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rk2imp = &gsl_odeiv_step_rk2imp;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rk2simp = &gsl_odeiv_step_rk2simp;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_rk4imp = &gsl_odeiv_step_rk4imp;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_bsimp = &gsl_odeiv_step_bsimp;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_gear1 = &gsl_odeiv_step_gear1;
  static const gsl_odeiv_step_type ** volatile pgsl_odeiv_step_gear2 = &gsl_odeiv_step_gear2;

  static const double * volatile gsl_precs[] = {gsl_prec_eps, gsl_prec_sqrt_eps, gsl_prec_root3_eps, gsl_prec_root4_eps, gsl_prec_root5_eps, gsl_prec_root6_eps};
  static const char ** volatile pgsl_version = &gsl_version;
  static const int * volatile pgsl_check_range = &gsl_check_range;
  static const unsigned int * volatile pgsl_message_mask = &gsl_message_mask;
  static const unsigned long * pgsl_rng_default_seed = &gsl_rng_default_seed;

  static const gsl_rng_type ** volatile pgsl_rng_default = &gsl_rng_default;
  static const gsl_rng_type ** volatile pgsl_rng_borosh13 = &gsl_rng_borosh13;
  static const gsl_rng_type ** volatile pgsl_rng_coveyou = &gsl_rng_coveyou;
  static const gsl_rng_type ** volatile pgsl_rng_cmrg = &gsl_rng_cmrg;
  static const gsl_rng_type ** volatile pgsl_rng_fishman18 = &gsl_rng_fishman18;
  static const gsl_rng_type ** volatile pgsl_rng_fishman20 = &gsl_rng_fishman20;
  static const gsl_rng_type ** volatile pgsl_rng_fishman2x = &gsl_rng_fishman2x;
  static const gsl_rng_type ** volatile pgsl_rng_gfsr4 = &gsl_rng_gfsr4;
  static const gsl_rng_type ** volatile pgsl_rng_knuthran = &gsl_rng_knuthran;
  static const gsl_rng_type ** volatile pgsl_rng_knuthran2 = &gsl_rng_knuthran2;
  static const gsl_rng_type ** volatile pgsl_rng_lecuyer21 = &gsl_rng_lecuyer21;
  static const gsl_rng_type ** volatile pgsl_rng_minstd = &gsl_rng_minstd;
  static const gsl_rng_type ** volatile pgsl_rng_mrg = &gsl_rng_mrg;
  static const gsl_rng_type ** volatile pgsl_rng_mt19937 = &gsl_rng_mt19937;
  static const gsl_rng_type ** volatile pgsl_rng_mt19937_1999 = &gsl_rng_mt19937_1999;
  static const gsl_rng_type ** volatile pgsl_rng_mt19937_1998 = &gsl_rng_mt19937_1998;
  static const gsl_rng_type ** volatile pgsl_rng_r250 = &gsl_rng_r250;
  static const gsl_rng_type ** volatile pgsl_rng_ran0 = &gsl_rng_ran0;
  static const gsl_rng_type ** volatile pgsl_rng_ran1 = &gsl_rng_ran1;
  static const gsl_rng_type ** volatile pgsl_rng_ran2 = &gsl_rng_ran2;
  static const gsl_rng_type ** volatile pgsl_rng_ran3 = &gsl_rng_ran3;
  static const gsl_rng_type ** volatile pgsl_rng_rand = &gsl_rng_rand;
  static const gsl_rng_type ** volatile pgsl_rng_rand48 = &gsl_rng_rand48;
  static const gsl_rng_type ** volatile pgsl_rng_random128_bsd = &gsl_rng_random128_bsd;
  static const gsl_rng_type ** volatile pgsl_rng_random128_glibc2 = &gsl_rng_random128_glibc2;
  static const gsl_rng_type ** volatile pgsl_rng_random128_libc5 = &gsl_rng_random128_libc5;
  static const gsl_rng_type ** volatile pgsl_rng_random256_bsd = &gsl_rng_random256_bsd;
  static const gsl_rng_type ** volatile pgsl_rng_random256_glibc2 = &gsl_rng_random256_glibc2;
  static const gsl_rng_type ** volatile pgsl_rng_random256_libc5 = &gsl_rng_random256_libc5;
  static const gsl_rng_type ** volatile pgsl_rng_random32_bsd = &gsl_rng_random32_bsd;
  static const gsl_rng_type ** volatile pgsl_rng_random32_glibc2 = &gsl_rng_random32_glibc2;
  static const gsl_rng_type ** volatile pgsl_rng_random32_libc5 = &gsl_rng_random32_libc5;
  static const gsl_rng_type ** volatile pgsl_rng_random64_bsd = &gsl_rng_random64_bsd;
  static const gsl_rng_type ** volatile pgsl_rng_random64_glibc2 = &gsl_rng_random64_glibc2;
  static const gsl_rng_type ** volatile pgsl_rng_random64_libc5 = &gsl_rng_random64_libc5;
  static const gsl_rng_type ** volatile pgsl_rng_random8_bsd = &gsl_rng_random8_bsd;
  static const gsl_rng_type ** volatile pgsl_rng_random8_glibc2 = &gsl_rng_random8_glibc2;
  static const gsl_rng_type ** volatile pgsl_rng_random8_libc5 = &gsl_rng_random8_libc5;
  static const gsl_rng_type ** volatile pgsl_rng_random_bsd = &gsl_rng_random_bsd;
  static const gsl_rng_type ** volatile pgsl_rng_random_glibc2 = &gsl_rng_random_glibc2;
  static const gsl_rng_type ** volatile pgsl_rng_random_libc5 = &gsl_rng_random_libc5;
  static const gsl_rng_type ** volatile pgsl_rng_randu = &gsl_rng_randu;
  static const gsl_rng_type ** volatile pgsl_rng_ranf = &gsl_rng_ranf;
  static const gsl_rng_type ** volatile pgsl_rng_ranlux = &gsl_rng_ranlux;
  static const gsl_rng_type ** volatile pgsl_rng_ranlux389 = &gsl_rng_ranlux389;
  static const gsl_rng_type ** volatile pgsl_rng_ranlxd1 = &gsl_rng_ranlxd1;
  static const gsl_rng_type ** volatile pgsl_rng_ranlxd2 = &gsl_rng_ranlxd2;
  static const gsl_rng_type ** volatile pgsl_rng_ranlxs0 = &gsl_rng_ranlxs0;
  static const gsl_rng_type ** volatile pgsl_rng_ranlxs1 = &gsl_rng_ranlxs1;
  static const gsl_rng_type ** volatile pgsl_rng_ranlxs2 = &gsl_rng_ranlxs2;
  static const gsl_rng_type ** volatile pgsl_rng_ranmar = &gsl_rng_ranmar;
  static const gsl_rng_type ** volatile pgsl_rng_slatec = &gsl_rng_slatec;
  static const gsl_rng_type ** volatile pgsl_rng_taus = &gsl_rng_taus;
  static const gsl_rng_type ** volatile pgsl_rng_taus2 = &gsl_rng_taus2;
  static const gsl_rng_type ** volatile pgsl_rng_taus113 = &gsl_rng_taus113;
  static const gsl_rng_type ** volatile pgsl_rng_transputer = &gsl_rng_transputer;
  static const gsl_rng_type ** volatile pgsl_rng_tt800 = &gsl_rng_tt800;
  static const gsl_rng_type ** volatile pgsl_rng_uni = &gsl_rng_uni;
  static const gsl_rng_type ** volatile pgsl_rng_uni32 = &gsl_rng_uni32;
  static const gsl_rng_type ** volatile pgsl_rng_vax = &gsl_rng_vax;
  static const gsl_rng_type ** volatile pgsl_rng_waterman14 = &gsl_rng_waterman14;
  static const gsl_rng_type ** volatile pgsl_rng_zuf = &gsl_rng_zuf;
  
  static const gsl_qrng_type ** volatile pgsl_qrng_niederreiter_2 = &gsl_qrng_niederreiter_2;
  static const gsl_qrng_type ** volatile pgsl_qrng_sobol = &gsl_qrng_sobol;
  #}
  
  var_gsl_interp_linear
  var_gsl_interp_polynomial
  var_gsl_interp_cspline
  var_gsl_interp_cspline_periodic
  var_gsl_interp_akima
  var_gsl_interp_akima_periodic
  var_gsl_multifit_fdfsolver_lmder
  var_gsl_multifit_fdfsolver_lmsder
  var_gsl_root_fsolver_bisection
  var_gsl_root_fsolver_brent
  var_gsl_root_fsolver_falsepos
  var_gsl_root_fdfsolver_newton
  var_gsl_root_fdfsolver_secant
  var_gsl_root_fdfsolver_steffenson
  var_gsl_min_fminimizer_goldensection
  var_gsl_min_fminimizer_brent
  var_gsl_multimin_fdfminimizer_steepest_descent
  var_gsl_multimin_fdfminimizer_conjugate_pr
  var_gsl_multimin_fdfminimizer_conjugate_fr
  var_gsl_multimin_fdfminimizer_vector_bfgs
  var_gsl_multiroot_fsolver_dnewton
  var_gsl_multiroot_fsolver_broyden
  var_gsl_multiroot_fsolver_hybrid
  var_gsl_multiroot_fsolver_hybrids
  var_gsl_multiroot_fdfsolver_newton
  var_gsl_multiroot_fdfsolver_gnewton
  var_gsl_multiroot_fdfsolver_hybridj
  var_gsl_multiroot_fdfsolver_hybridsj
  var_gsl_odeiv_step_rk2
  var_gsl_odeiv_step_rk4
  var_gsl_odeiv_step_rkf45
  var_gsl_odeiv_step_rkck
  var_gsl_odeiv_step_rk8pd
  var_gsl_odeiv_step_rk2imp
  var_gsl_odeiv_step_rk4imp
  var_gsl_odeiv_step_bsimp
  var_gsl_odeiv_step_gear1
  var_gsl_odeiv_step_gear2
  var_gsl_prec_eps
  var_gsl_prec_sqrt_eps
  var_gsl_prec_root3_eps
  var_gsl_prec_root4_eps
  var_gsl_prec_root5_eps
  var_gsl_prec_root6_eps
  var_gsl_version
  var_gsl_check_range
  var_gsl_message_mask
  var_gsl_rng_default_seed
  var_gsl_rng_default
  var_gsl_rng_borosh13
  var_gsl_rng_coveyou
  var_gsl_rng_cmrg
  var_gsl_rng_fishman18
  var_gsl_rng_fishman20
  var_gsl_rng_fishman2x
  var_gsl_rng_gfsr4
  var_gsl_rng_knuthran
  var_gsl_rng_knuthran2
  var_gsl_rng_lecuyer21
  var_gsl_rng_minstd
  var_gsl_rng_mrg
  var_gsl_rng_mt19937
  var_gsl_rng_r250
  var_gsl_rng_ran0
  var_gsl_rng_ran1
  var_gsl_rng_ran2
  var_gsl_rng_ran3
  var_gsl_rng_rand
  var_gsl_rng_rand48
  var_gsl_rng_random128_bsd
  var_gsl_rng_random128_glibc2
  var_gsl_rng_random128_libc5
  var_gsl_rng_random256_bsd
  var_gsl_rng_random256_glibc2
  var_gsl_rng_random256_libc5
  var_gsl_rng_random32_bsd
  var_gsl_rng_random32_glibc2
  var_gsl_rng_random32_libc5
  var_gsl_rng_random64_bsd
  var_gsl_rng_random64_glibc2
  var_gsl_rng_random64_libc5
  var_gsl_rng_random8_bsd
  var_gsl_rng_random8_glibc2
  var_gsl_rng_random8_libc5
  var_gsl_rng_random_bsd
  var_gsl_rng_random_glibc2
  var_gsl_rng_random_libc5
  var_gsl_rng_randu
  var_gsl_rng_ranf
  var_gsl_rng_ranlux
  var_gsl_rng_ranlux389
  var_gsl_rng_ranlxd1
  var_gsl_rng_ranlxd2
  var_gsl_rng_ranlxs0
  var_gsl_rng_ranlxs1
  var_gsl_rng_ranlxs2
  var_gsl_rng_ranmar
  var_gsl_rng_slatec
  var_gsl_rng_taus
  var_gsl_rng_transputer
  var_gsl_rng_tt800
  var_gsl_rng_uni
  var_gsl_rng_uni32
  var_gsl_rng_vax
  var_gsl_rng_waterman14
  var_gsl_rng_zuf
  var_gsl_qrng_niederreiter_2
  var_gsl_qrng_sobol
)
