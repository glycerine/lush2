;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2009 Leon Bottou, Yann LeCun, Ralf Juengling.
;;;   Copyright (C) 2002 Leon Bottou, Yann LeCun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU Lesser General Public License as 
;;; published by the Free Software Foundation; either version 2.1 of the
;;; License, or (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU Lesser General Public License for more details.
;;;
;;; You should have received a copy of the GNU Lesser General Public
;;; License along with this program; if not, write to the Free Software
;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
;;; MA 02110-1301  USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl/gsl-config")



#? *** qrng

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_qrng () ,gsl-cpheader-cmd ()))

#? * (dummy_qrng)
#? * (gsl_qrng_alloc <p> <dimension>)
#? * (gsl_qrng_memcpy <dest> <src>)
#? * (gsl_qrng_clone <r>)
#? * (gsl_qrng_free <r>)
#? * (gsl_qrng_init <r>)
#? * (gsl_qrng_name <r>)
#? * (gsl_qrng_size <r>)
#? * (gsl_qrng_state <r>)
#? * (gsl_qrng_get <r> <x>)

;; ********************************************************


(de gsl_qrng_alloc (    p  dimension )
    ((-gptr- "const gsl_qrng_type *") p) 
    ((-int-) dimension)                                  ;; unsigned -> signed
    (gptr #{ gsl_qrng_alloc (  $p ,$dimension) #} )          ;; gsl_qrng * -> gptr
)




(de gsl_qrng_memcpy (    dest  src )
    ((-gptr- "gsl_qrng *") dest) 
    ((-gptr- "const gsl_qrng *") src) 
    (int #{ gsl_qrng_memcpy (  $dest ,$src) #} )
)




(de gsl_qrng_clone (    r )
    ((-gptr- "const gsl_qrng *") r) 
    (gptr #{ gsl_qrng_clone (  $r) #} )          ;; gsl_qrng * -> gptr
)




(de gsl_qrng_free (    r )
    ((-gptr- "gsl_qrng *") r) 
    #{ gsl_qrng_free (  $r) #} 
    ()
)




(de gsl_qrng_init (    r )
    ((-gptr- "const gsl_qrng *") r) 
    #{ gsl_qrng_init (  $r) #} 
    ()
)




(de gsl_qrng_name (    r )
    ((-gptr- "const gsl_qrng *") r) 
    (gptr #{ gsl_qrng_name (  $r) #} )          ;; const char * -> gptr
)




(de gsl_qrng_size (    r )
    ((-gptr- "const gsl_qrng *") r) 
    (int #{ gsl_qrng_size (  $r) #} )                ;; size_t -> int
)



(de gsl_qrng_state (    r )
    ((-gptr- "const gsl_qrng *") r) 
    (gptr #{ gsl_qrng_state (  $r) #} )          ;; void * -> gptr
)




(de gsl_qrng_get (    r  x )
    ((-gptr- "const gsl_qrng *") r) 
    ((-gptr- "double *") x) 
    (int #{ gsl_qrng_get (  $r ,$x) #} )
)


;; ********************************************************

(dhc-make-sf ()
  dummy_qrng
  gsl_qrng_alloc
  gsl_qrng_memcpy
  gsl_qrng_clone
  gsl_qrng_free
;;  gsl_qrng_init
  gsl_qrng_name
  gsl_qrng_size
  gsl_qrng_state
  gsl_qrng_get
)
