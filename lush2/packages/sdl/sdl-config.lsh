;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2009 Leon Bottou, Yann LeCun, Ralf Juengling.
;;;   Copyright (C) 2002 Leon Bottou, Yann LeCun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU Lesser General Public License as 
;;; published by the Free Software Foundation; either version 2.1 of the
;;; License, or (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU Lesser General Public License for more details.
;;;
;;; You should have received a copy of the GNU Lesser General Public
;;; License along with this program; if not, write to the Free Software
;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
;;; MA 02110-1301  USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: sdl-config.lsh,v 1.4 2005/05/09 01:21:57 leonb Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; REDHAT/MANDRAKE
;;   Requires SDL, SDL-devel, SDL_image, SDL_image-devel.
;;   Some packages are not installed by default.

(defvar sdl-libs 
  (let ((libs ()))
    (let ((lib (find-shared-or-static-library "libSDL")))
      (if (and lib (filep lib))
          (setq libs (nconc1 libs lib))
        (printf "libSDL.so could not be found.\n")
        (printf "please make sure SDL is installed.\n")
        (printf "Both the library and the development packages are needed.\n")
        (printf "(see %s for more details)\n" file-being-loaded)
        (error "cannot configure SDL") ) )
    (let ((lib (find-shared-or-static-library "libSDL_image")))
      (if (and lib (filep lib))
          (setq libs (nconc1 libs lib))
        (printf "libSDL_image.so could not be found.\n")
        (printf "please make sure SDL_image is installed.\n")
        (printf "Both the library and the development packages are needed.\n")
        (printf "(see %s for more details)\n" file-being-loaded)
        (error "cannot configure SDL") ) )
    libs ) )

(defvar sdl-cflags 
  (if (getconf "X_CFLAGS")
      (concat " " (getconf "X_CFLAGS"))
    "" ) )


(when (not (find-c-include "SDL/SDL.h"))
  (printf "SDL/SDL.h could not be found.\n")
  (printf "please make sure SDL-devel is installed.\n")
  (printf "Both the library and the development packages are needed.\n")
  (printf "(see %s for more details)\n" file-being-loaded)
  (error "cannot configure SDL") )
(when (not (find-c-include "SDL/SDL_image.h"))
  (printf "SDL/SDL_image.h could not be found.\n")
  (printf "please make sure SDL_image-devel is installed.\n")
  (printf "Both the library and the development packages are needed.\n")
  (printf "(see %s for more details)\n" file-being-loaded)
  (error "cannot configure SDL") )
