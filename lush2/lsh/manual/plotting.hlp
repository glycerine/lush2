#? *** Plotting (obsolete).

CAUTION: The functionalities described in this section are obsolete 
and superseded by the <libplot/plotter> library (see the plotting
section in the standard library documentation).

Functions in the present section are maintained for backward
compatibility, but their use should be avoided.

The following functions provide a way to plot curves. The basic
abstraction is the plot port data structure, a Lush list which
contains:

.IP
The position of the current point,
.IP
A pointer to the  graphics window,
.IP
Information for mapping real coordinates to pixel positions.
.PP

The plotting functions perform their drawing action in the current
plot port. Function, <setup-axes> is provided for quickly initializing
a plot port, making it current and drawing the axes.

Currently, plot ports are implemented as lists rather than a user
defined class. In fact, the <"graphenv.lsh"> package has existed prior
to the object extensions of Lush. This silly implementation has been
kept for preserving backwards compatibility.



#? (new-plot-port <brect> <rect> <object>) 
.TYPE DE 
.FILE graphenv.lsh 
(OBSOLETE)
Initializes a new plot port in the current window, and returns it. 

Argument <brect> is a list <(bxmin bymin bxmax bymax)> whose elements
are the pixel coordinates of the target rectangle in the current
window.

Argument <rect> is a list <(xmin ymin xmax ymax)> whose elements are the
extremal real coordinates.  No clipping is performed, except window clipping.

Argument <object> is a function generally called by <plt-plot> for drawing a
small object at the current pen location. A few predefined functions are
documented with <plt-plot>.


#? (copy-plot-port  <p> [<object>])
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Returns a new plot port, with the same real to pixel coordinates and
window data as the plot-port <p>, but with a different current point
and a different object. This function allows the user to plot a second
curve simultaneously, using the same axis system.

#? (draw-axes  <brect> <xl> <yl> <name> [<x2l>] [<y2l>])
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Draws axes on the leftmost and bottommost side of rectangle <brect>.

Argument <brect> is a list <(bxmin bymin bxmax bymax)> whose elements are
the pixel coordinates of the target rectangle in the current window.

Arguments <xl> and <yl> are lists of label values for the <x> and <y>
axis.  These labels are numbers expressed with the same scale than the
axes. The optional functions <x2l> and <y2l> are used to convert these
numbers into strings to display at the proper positions along the
axes. Both functions default to <str> which just prints the textual
representation of the number.

Finally, argument <name> is a string that will be printed at the top of the
<brect> using a 18 points font.


#? plot-port
.TYPE VAR
.FILE graphenv.lsh
(OBSOLETE)
The current plot port is stored in this global variable.  Most of the
plotting functions refers implicitly to the plot port stored in
<plot-port>.

#? (setup-axes <x1> <y1> <x2> <y2> [<xst> <yst> [<s> [<object>]]])
.TYPE DE
.FILE graphenv.lsh
.SEE (new-plot-port <brect> <rect> <object>) 
.SEE (draw-axes  <brect> <xl> <yl> <name> [<x2l>] [<y2l>])
(OBSOLETE)
Calls both <new-plot-port> and <draw-axes>, for drawing a curve in the
current window. Makes the resulting <plot-port> current. The curve
will occupy the entire window. Function <setup-axes> is the simplest
way to initialize the plotting package.

Arguments <x1> and <y1> are the lower bounds of the actual
coordinates; arguments <x2> and <y2> are the upper bounds of the
actual coordinates. The axes will be labeled every <xst> units
horizontally and every <yst> units vertically. Argument <s> is a
string that will be printed at the top of the window. <object> is the
default plot object used by <plt-plot>.

When arguments <xst> or <yst> are not provided (or are the empty
list), function <setup-axes> computes a reasonable value using the
extrema.


#? (plot-lists <lx> <ly>)
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Plots a curve taking using in list <lx> as abscissas and values in
<ly> as ordinates in the current plot port. This function uses uses
<plt-draw> and <plt-plot> to draw a symbol at each data point.


#? (graph-xy <lx> <ly> <name>) 
.TYPE DE 
.FILE graphenv.lsh 
(OBSOLETE)
Creates a convenient plot port in the current window, draws the axes,
and calls the function <plot-lists>.

#? (plot-lists-sd  <lx> <ly> <lsd>)
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Plots a curve taking values in list <lx> as abscissas and values in
<ly> as ordinates. Argument <lsd> is a list of values that will be
displayed as uncertainty bars around each data point.

This function uses uses <plt-draw>, <plt-sd> and <plt-plot> to draw a
symbol and an uncertainity bar at each data point.

#? (graph-xyv  <lx> <ly> <lsd> <name>)
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Creates a convenient plot port in the current window, draws the axes,
and calls the function <plot-lists-sd>.



#? (plt-clear)
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Clears the current point. The the next <plt-draw> will thus not draw a
line.

#? (plt-move <x> <y>)
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Sets the current point to real coordinates <x> and <y>.

#? (plt-draw  <x y)
.TYPE DE
.FILE graphenv.lsh
(OBSOLETE)
Draws a line from current point to actual coordinates <x> and <y>.
Sets the current point to coordinates <x> and <y>.  Nothing is drawn
if no current point was set.

#? (plt-plot  <x> <y>)
.TYPE DE
.FILE graphenv.lsh
.SEE current-object
.SEE object-size
(OBSOLETE)
Moves the current point to the actual coordinates <x> and <y>, and
draws a small symbol like those used for showing the data points on a
curve.

The shape of this symbol is defined by the argument <object> of
<new-plot-port> or <setup-axes>. this argument must be a function that
draws the object at the specified position. The following functions
are predefined:

.IP
<object-nil> does nothing. It is useful if you want cancel the
effect of <plt-plot>.
.IP
<open-square>, <closed-square>, <open-circle>, and <closed-circle>
respectively draw a small hollow square, a small filled square, a
small hollow circle or a small filled circle.
.IP
<open-up-triangle>, <closed-up-triangle>, <open-down-triangle>,
<closed-down-triangle>, draw various kind of small triangles.
.IP
<straight-cross> and <oblique-cross> draw small crosses.
.PP

All these predefined object functions use the global variable
<object-size> for defining the size of the object drawn by <plt-plot>.
The default object may be overridden by setting the variable
<current-object> to a new object function.

#? (plt-sd  <x> <y> <sd>)
.TYPE DE
.FILE graphenv.lsh

Draws a standard deviation bar given by <sd> around point (<x>,<y>).
The horizontal size of the bar is defined by the global variable
<object-size>.


#? (in-plot-port <l1> ... <ln>)
.TYPE DMD
.FILE graphenv.lsh
(OBSOLETE)
Function <in-plot-port> unpacks the current plot port info and stores
it in local variables while executing <l1> ... <ln>.  You may then
call the <(plt-rbx x)> and <(plt-rby y)> functions to compute the
pixel coordinates of a real point (<x>,<y>).

#? current-object
.TYPE VAR
.FILE graphenv.lsh
.SEE (plt-plot  <x> <y>)
(OBSOLETE)
If <current-object> is equal to the empty list, the function
<plt-plot> will draw the default object defined in the current port.
However you can store a new object definition function in
<current-object>. This function will then be called instead of the
default one.

#? object-size
.TYPE VAR
.FILE	graphenv.lsh
.SEE (plt-plot  <x> <y>)
.SEE (plt-sd <x> <y> <sd>)
(OBSOLETE)
This global variable controls the size of the drawings performed by
<plt-plot> and <plt-sd>.
