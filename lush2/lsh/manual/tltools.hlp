$Id: tltools.hlp,v 1.1 2002/08/19 07:01:29 profshadoko Exp $
#? **** TL Tools.

The TL package is provided with some graphical tools
based on the Ogre library. Some of these tools 
(the table browser and grapher) are still
recent additions to the Lush system and we will warmly 
welcome your feedback.
.IP
<HelpTool> is an on-line help browser.
.IP
<ClassTool> is a class browser.
.IP
<CalcTool> is a small simple desk calculator.
.IP
The table browser displays the data given to function <browse>
and provides some basic services such as statistics, text file generation
and connection with the grapher.
.IP
The grapher displays curves based on the data given to 
function <display-curve>. It also provides basic services such as 
zooming, panning, labelling and exporting EPS files.
.PP

.SEE HelpTool.
.SEE The Class Browser ``classtool''.


#? ** A Simple Desk Calculator.

#? (calctool)

This function calls a simple desk calculator.
This is a useful example of Ogre programming.



#? ** The Read-Only Table Browser.


This browser is called by function <browse>.

#? (browse <data> [opts])
This function creates a worksheet window. It returns a list
whose first object is the window freshly created.

Argument <data> may be an array, a matrix, a file descriptor,
a file name, a list of vectors or a list of lists of atoms.
A named file will be read from first line to last line.
A file descriptor will be read until either an empty line
or the end of file is reached.

Optional argument <opts> is an ''alist''.
Its content may include any the following pairs <(key-symbol . value)>:
.IP
'title <title>

where <title> is a string which will define the overall title of the window.
.IP
'titles <titles>

where <titles> is a list of strings (one per column of data)
which will define the titles of the columns.
.IP
'types <types>

where <types> is a list of strings (one per column of data)
which will define the type of each column. Nil values are allowed.
The most usefull types are |NUMBER|, |DATE|, '(|DATE| year day), '(|DATE| year second),
and '(|DATE| hour second).
.IP
'widths <widths>

where <widths> is a list of numbers (one per column of data)
which will define the width of each column.

.SEE (assoc <key> <alist>)
.VP
? (browse '((1 2 3)(4 5 6)) '((title ."Short List") (titles "A" "B" "C")))
= ::c-abrowser:1ca9c8
? (browse [[1 2 3][4 5 6]])
= ::c-abrowser:1ca9c8
.PP


#? * The ''View'' Menu of the Table Browser.


#? Copying the Content of a Table Browser.

Item ''Copy'' of the ''View'' menu of the table browser
copies the content of the whole table into the graphic buffer
in order to be pasted into other softwares.


#? Exporting the Content of a Table Browser into a file.

Item ''Export'' of the browser allows to export data toward
foreign files.

It pops up an import/export interface for specifying the
output file, the column and row separators and the
exported columns.


#? * The ''Processing'' Menu of the Table Browser.

The processing menu provides three items.


#? Displaying Curves from the Table Browser.

The ''Curves'' item of menu ''Processing'' of the Table Browser
pops a requester up in order to select the coordinates
and then calls the grapher.

.SEE The Grapher.


#? Displaying Statistics from the Table Browser.

The ''Statistics'' item of menu ''Processing'' of the Table Browser
computes the mean, the standard deviation
and the multi-correlation coefficients of the columns of the table
and displays them into a new table browser, which allows to export or copy them.

The multi-correlation coefficients are based on the
proportion of the variance of each column which can
be explainated by a linear combination of the other columns.


#? Displaying Simple Correlations from the Table Browser.

The ''Correlations'' item of menu ''Processing'' of the Table Browser
computes the correlations of the columns of the table and
displays them into a new table browser, which allows to export or copy them.


#? ** The Grapher.

#? (display-curve <data> [opts])
This function creates a window displaying curves. It returns a list
whose first object is the window freshly created.

Argument <data> may be an array, a matrix or a list of vectors.
The first column of data defined by <data> is assumed to be
coordinates along the X axis, while the other columns are assumed
to be coordinates of curves along the Y axis.

Optional argument <opts> is an ''alist''.
Its content may include any the following pairs <(key-symbol . value)>:
.IP
'title <title>

where <title> is a string which will define the overall title of the display.
.IP
'titles <titles>
where <titles> is a list of strings (one per column of data including the first one)
which will define the title of the X axis and the title of each curve.
.IP
'types <types>

where <types> is a list of strings (one per column of data including the first one)
which will define the type of each column. Nil values are allowed.
The most usefull types are |NUMBER|, |DATE|, '(|DATE| year day), '(|DATE| year second),
and '(|DATE| hour second).
.IP
'colors <colors>

where <colors> is a color specification
(one per column of data including the first one)
either a color number, a color RGB description
or (when available in the driver) a color name.
.IP
'marks <marks>

where <marks> is a list of strings (one per column of data including the first one)
which will define the mark of each curve. Nil values are allowed.
.IP
'rect <rect>

where <rect> is the window's bounding geometry.
.PP
Here is an example.
.VP
(setq m ((matrix 10 3) () ()(range 30)))
(display-curve m '((title . "Essai") (titles "X" "Y" "Z") 
                   (colors () (1 0 0) (0 1 0)) (rect 100 100 640 480)))

.SEE (assoc <key> <alist>)

The grapher is a graphical interface dedicated to curves.

It is made of:
.IP
two popdown menus.
.IP
seven zoom buttons,
.IP
two scroll-bars,
.IP
a title area,
.IP
a legend area,
.IP
an axes and curves area.
.PP


#? * The Grapher Menus.

The ''View'' menu allows to print a PostScript version of the graphics,
to save the graphics using Ecapsulated PostScript format, and to close
the grapher.

The ''Options'' menu allows to set/unset a grid in the curve area,
set/unset colors, set/unset marks.


#? * The Grapher Zoom Buttons.

There are seven zoom buttons.
.IP
The ''><''   button tries to extend by a factor 2 the range of the data displayed.
.IP
The  ''<>''  button focuses the display on its central 1/2 part.
.IP
The ''>><<'' button tries to extend by a factor 8 the range of the data displayed.
.IP
The ''<<>>'' button focuses the display on its central 1/8 part.
.IP
The ''25%''  button tries to extend by a factor 4 the range of the data initialy displayed
.IP
The ''100%'' button restores the initial scale
.IP
The ''400%'' button focuses the initial display its central 1/4 part.
.PP


#? * Setting Labels in the Grapher.

It is possible to add volatile labels in the grapher.
.IP
Clicking inside the axes and curves area makes a new label appear.
.IP
Clicking on a component of the legend area selects a curve.
The next labels will appear projected vertically onto the selected curve.
.IP
Clicking elsewhere unselects any curve.
The next labels will appear directly where the click occurs.
.PP
Labels are erased when the axes and curves area is repainted
(eg after a zoom or a scroll action).
