;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2009 Leon Bottou, Yann LeCun, Ralf Juengling.
;;;   Copyright (C) 2002 Leon Bottou, Yann LeCun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU Lesser General Public License as 
;;; published by the Free Software Foundation; either version 2.1 of the
;;; License, or (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU Lesser General Public License for more details.
;;;
;;; You should have received a copy of the GNU Lesser General Public
;;; License along with this program; if not, write to the Free Software
;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
;;; MA 02110-1301  USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#? (tex-to-html <s>)
;; Convert tex special characters into HTML.
;; This function knows a limited number of tex constructs.
;; Its efficiency is mediocre. But progress is still possible.
(de tex-to-html(s)
  ;; add as needed. Use explode-bytes to find out
  (setq s (regex-subst "\\\\'{?e}?" "&eacute;" s))
  (setq s (regex-subst "\\\\`{?a}?" "&agrave;" s))
  (setq s (regex-subst "\\\\`{?e}?" "&egrave;" s))
  (setq s (regex-subst "\\\\`{?u}?" "&ugrave;" s))
  (setq s (regex-subst "\\\\\\^{?a}?" "&acirc;" s))
  (setq s (regex-subst "\\\\\\^{?e}?" "&ecirc;" s))
  (setq s (regex-subst "\\\\\\^{?i}?" "&icirc;" s))
  (setq s (regex-subst "\\\\\\^{?o}?" "&ocirc;" s))
  (setq s (regex-subst "\\\\\\^{?u}?" "&ucirc" s))
  (setq s (regex-subst "\\\\\\^{?y}?" "y;" s))
  (setq s (regex-subst "\\\\\"{?a}?" "&auml;" s))
  (setq s (regex-subst "\\\\\"{?e}?" "&euml;" s))
  (setq s (regex-subst "\\\\\"{?i}?" "&iuml;" s))
  (setq s (regex-subst "\\\\\"{?o}?" "&ouml;" s))
  (setq s (regex-subst "\\\\\"{?u}?" "&uuml;" s))
  (setq s (regex-subst "\\\\\"{?y}?" "yuml;" s))
  (setq s (regex-subst "\\\\~{?n}?"  "&ntilde;" s))
  (setq s (regex-subst "\\\\~{?o}?" "&otilde;" s))
  (setq s (regex-subst "\\\\~{?N}?" "&Ntilde;" s))
  (setq s (regex-subst "\\\\~{?O}?" "&Otilde;" s))
  (setq s (regex-subst "\\\\c{?c}?" "&ccedil;" s))
  (setq s (regex-subst "\\\\c{?C}?" "&Ccedil;" s))
  ;; clear remaining latex stuff
  (setq s (regex-subst "~" " " s))
  (setq s (regex-subst "\\\\" "" s))
  (setq s (regex-subst "{" "" s))
  (setq s (regex-subst "}" "" s))
  (setq s (regex-subst "$" "" s))
  ;; more cleanups
  (regex-subst "[ \n\r\t]+" " " s) )

#? (tex-to-html-list <l>)
;; Traverse lists l and recursively convert tex special characters into HTML.
(de tex-to-html-list(l)
  (cond
   ((stringp l) (tex-to-html l))
   ((consp l) (mapcar tex-to-html-list l))
   (t l) ) )
